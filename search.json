[{"title":"docker魔法拉取镜像上传无魔法服务器","url":"/2025/08/17/docker-mo-fa-la-qu-jing-xiang-shang-chuan-wu-mo-fa-fu-wu-qi/","content":"\n# docker魔法拉取镜像上传无魔法服务器\n\n\n\n1. 去可以访问外网的服务器上拉取镜像\n\n   ```\n   docker pull openjdk\n   # 如需指定服务器架构可加参数-platform=linux/amd64\n   docker pull --platform linux/arm64 openjdk\n   ```\n\n2. 保存镜像\n\n   ```bash\n   docker images  # 查看镜像id(6a35dd59e569)\n   docker save 6a35dd59e569 > /root/images.tar  # 导出镜像到指定目录\n   ```\n\n3. 拷贝到不可连外网服务器\n\n4. 加载镜像\n\n   ```\n   docker load < /root/images.tar\n   ```\n\n5. 镜像重命名为docker命令中名称或docker compose中名称\n\n   ```bash\n   docker images # 查找镜像id(999c20aee5da)\n   docker tag 999c20aee5da shining/qin\n   ```\n\n   \n\n   "},{"title":"ICP备案Q&A","url":"/2025/08/16/icp-bei-an-q-a/","content":"\n\n\n# ICP备案Q&A\n\n\n\n1. 您这个顶级域名已经备案成功了，二级域名和顶级域名的备案号是一样的~\n2. 内容可以不一样，只要网站内容是属于您个人的就可以，因为个人备案不可以涉及到公司和企业~\n3. 您好，如果不换主体只是新增网站的话，网站信息会变成-2，备案号是不会变的~"},{"title":"ha全屏显示","url":"/2025/08/16/ha-quan-ping-xian-shi/","content":"\n\n\n## home assistant 全屏显示\n\n\n\n关于home assistant 全屏显示之前是直接在编辑器里面添加三行代码\n\n```\nkiosk_mode:\n  hide_header: true\n  hide_sidebar: true\n```\n\n**但保存后发现并没有隐藏**\n\n这时我们需要在hacs添加一个插件, 名叫 `kiosk_mode`\n\n\n**重新启动, 就会发现home assistant的仪表盘全屏显示啦**"},{"title":"nginx部署静态页面","url":"/2025/08/16/nginx-bu-shu-jing-tai-ye-mian/","content":"\n\n# nginx部署静态页面\n\n\n\n1. 将打包好的静态资源上传至服务器\n\n   - 注: 不要将网站目录上传到一些\"/\", \"/root\"等目录, 会报错, 一般上传至/www/下\n\n2. 在nginx配置文件中增加以下内容\n\n   ```nginx\n   server {\n     server_name bboss.cc;\n     root /www/WWW/;\n     index index.html;\n   }\n   ```\n\n   - server_name 域名\n   - root 上传的文件夹路径\n   - index 首页面\n\n3. 保存配置文件, 重载配置, 浏览器输入域名, 大功告成!\n\n\n\n**注意事项**\n\n1. 上传打包好的静态资源文件时最好整个文件夹一起上传, 避免影响文件之间的关联性"},{"title":"hexo基本使用","url":"/2025/08/16/hexo-ji-ben-shi-yong/","content":"\n\n\n## hexo三部曲\n\n```bash\nhexo c # clean 清除缓存\nhexo g # genernate 生成静态文件\nhexo d # deploy 自动生成网站静态文件，并部署到设定的仓库\nhexo s # server 启动服务预览并自动更新\n```\n\n\n\n### 常见问题\n\n**问题描述**\n\n已经在站点配置文件中写入了：\n\n```bash\ndeploy:\n  type: git\n  repo: git@github.com:lanlan2017/lanlan2017.github.io.git  # Github pages地址\n  branch: master\n```\n\n但是执行，`hexo d`报错：\n\n```bash\nERROR Deployer not found: git\n```\n\n**解决方案**\n这是因为没安装`hexo-deployer-git`插件，在**站点目录**下输入下面的插件安装就好了：\n\n```\nnpm install hexo-deployer-git --save\n```\n\n然后在使用`Hexo d`命令就可以推送了。\n"},{"title":"内网穿透","url":"/2025/08/16/nei-wang-chuan-tou/","content":"\n# frp内网穿透\n\n\n\n**N1盒子istoreos+阿里云服务器宝塔面板实现frp内网穿透**\n\n\n\n## 宝塔\n\n软件商店安装frp管理器\n\nfrp管理器里面安装服务端\n\n查看配置文件\n\n阿里云开放配置文件里面所有端口（5个）\n\n![image-20250601103325890](https://shiningonly.oss-cn-shenzhen.aliyuncs.com/typora/image-20250601103325890.png)\n\n\n\n## istoreos\n\n**iStore安装frpc**\n\n**配置frpc**\n\n服务器地址填服务器的公网IP,服务器端口填写bindPort后的数字，HTTP代理填写vhostHTTPPort后的数字，令牌填写auth.token后的字符串，用户和密码填写webServer.user和webServer.password的字符串，保存运行\n\n\n\n**添加端口**\n\n添加需要内网穿透的端口，本地填需要穿透的端口，远程填的是服务器代理的端口，一定要记得在面板安全处放行端口，要不然无法访问，协议的话选择TCP/UDP\n\n"},{"title":"本地项目通过git的形式部署到阿里云或腾讯云服务器","url":"/2025/08/16/ben-di-xiang-mu-tong-guo-git-de-xing-shi-bu-shu-dao-a-li-yun-huo-teng-xun-yun-fu-wu-qi/","content":"\n# 本地项目通过git的形式部署到阿里云或腾讯云服务器\n\n**应用前景:** 之前通过将本地项目部署到GitHub, 然后利用GitHub Action 部署网页到 GitHub page, 使用起来确实很方便, 但是由于GitHub Page 的访问速度很慢, 自己手里又有一台国内服务器, 所以就想着能否像git一样将本地项目通过git的形式一键部署到云服务器上\n\n**问题成立, 实践开始**\n\n### 部署环境与准备\n\n**1.环境**\n本地 Windows10 操作系统\n腾讯云 Cenots7.9 服务器\n\n**2.准备**\nHexo 本地博客\nmobaxterm 链接到你的服务器\n\n### 云服务器配置 Git\n\n1.安装依赖库\n```bash\nyum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel\n```\n\n2.安装编译工具\n```bash\nyum install gcc perl-ExtUtils-MakeMaker package\n```\n\n3.查看 git 的版本\n```bash\ngit version\n```\n\n4.删除 git\n```bash\nyum remove git -y\n```\n\n5.下载解压最新版\n```bash\ncd /usr/local/src #下载的目录\nwget https://www.kernel.org/pub/software/scm/git/git-2.28.0.tar.gz #下载最新版\ntar -zxvf git-2.28.0.tar.gz #解压到当前文件夹\n```\n\n6.编辑并安装\n```bash\ncd git-2.28.0    #进入文件夹\nmake prefix=/usr/local/git all    #编译源码\nmake prefix=/usr/local/git install    #安装路径\n```\n\n7.配置 git 的环境变量\n```bash\necho 'export PATH=$PATH:/usr/local/git/bin' >> /etc/bashrc\n```\n\n8.刷新环境变量\n```bash\nsource /etc/bashrc\n```\n\n9.查看版本号\n```bash\ngit --version\n```\n\n10.创建 git 用户并且修改权限\n```bash\nadduser nihao\npasswd nihao\nchmod 740 /etc/sudoers \nvim /etc/sudoers root\n\n在这里加入：\nroot    ALL=(ALL)       ALL\nnihao     ALL=(ALL)       ALL\n```\n\n11.本地 windows10 使用 Gitbash 创建密钥\n```bash\nssh-keygen -t rsa\n```\n\n12.将本地创建 id_rsa.pub 中文件复制\n```bash\nsu qiqi\nmkdir ~/.ssh\nvim ~/.ssh/authorized_keys\n```\n\n13.本地测试\n```bash\nssh -v nihao@服务器ip\n```\n\n**出现 Welcome to Alibaba Cloud Elastic Compute Service !则代表部署成功**\n\n### 云服务器网站配置\n\n>这里会创建两个文件夹, 一个是网站的目录, 一个是git的仓库地址, 其中网站的目录需要自己创建, git的仓库地址就用的用户名的地址, 实现原理就是本地文件上传到git仓库地址, 然后服务器自动拉取更新文件到网站目录\n\n1.创建网站目录并且设置权限\n```bash\nsu root\nmkdir /home/hexo # 网站目录\nchown nihao:nihao -R /home/hexo # 把这个文件夹权限给nihao用户\n```\n\n2.建立 git 仓库\n```bash\nsu root\ncd /home/nihao # 用户目录,也就是拿来用作git仓库\ngit init --bare blog.git #服务端初始化一个git仓库\nchown nihao:nihao -R blog.git #把该目录权限给nihao用户\n```\n\n3.同步网站根目录(自动拉取更新文件到网站目录)\n```bash\nvim blog.git/hooks/post-receive\n\n#添加以下内容\n#!/bin/sh\ngit --work-tree=/home/hexo --git-dir=/home/nihao/blog.git checkout -f\n```\n\n4.修改权限\n```bash\nchmod +x /home/qiqi/blog.git/hooks/post-receive\n```\n\n5.然后克隆这个空仓库到本地\n```bash\ngit clone nihao@47.110.120.130:/home/nihao/blog.git #用户名@服务器Ip:git仓库位置\n```\n\n6.将克隆下来文件夹中的.git文件夹复制到本地项目的根目录\n\n7.接着就可以在本地项目的根目录实行git三件套了\n\n```bash\ngit add .\ngit commit -m\"first commit\"\ngit push\n# 输入密码\n```\n\n本地文件会通过git上传到服务器git仓库, 然后服务器会自动拉取git仓库的更新文件到网站目录\n\n\n**至此就可以实现本地通过git一键部署网站文件到云服务器了**\n\n### 常见报错\n\n1.git-upload-pack: 未找到命令\n```bash\nBASH\nbash: git-upload-pack: command not found\nfatal: Could not read from remote repository.\n解决方法\nBASH\nsudo ln -s  /usr/local/git/bin/git-upload-pack  /usr/bin/git-upload-pack\n```\n\n2.git-receive-pack: 未找到命令\n```bash\nBASH\nbash: git-receive-pack: command not found\nfatal: Could not read from remote repository.\n解决方法\nBASH\nsudo ln -s /usr/local/git/bin/git-receive-pack  /usr/bin/git-receive-pack\n```\n\n3.无法远程连接获取\n```bash\nBASH\nfatal: Could not read from remote repository.\n解决方法\nBASH\n重试或者 删掉本地ssh公钥重新上传至服务器\n```\n\n4.key 出错\n```bash\nBASH\nHost key verification failed.\n解决方法\nBASH\nssh-keygen -R 你要访问的IP地址\n```\n\n文章转载自https://blog.anheyu.com/posts/ce6a.html, 若有侵权, 请联系删除"},{"title":"armbian设置固定静态ip","url":"/2025/06/16/armbian-she-zhi-gu-ding-jing-tai-ip/","content":"\n# armbian设置固定静态ip\n\n> N1盒子刷成armbian设置静态ip\n\n\n\n切换目录\n\n```bash\nls /etc/netplan\n```\n\nnano编辑以yaml结尾文件(如没有, 新建一个), 添加如下内容\n\n```yaml\nnetwork:\n  version: 2\n  renderer: NetworkManager\n  ethernets:\n    eth0:\n      dhcp4: no                                     #关闭动态获取ip\n      addresses: [192.168.2.253/24]                 #静态ip\n      nameservers:\n        addresses: [192.168.2.1, 192.168.2.254]     #dns，可以设置一个\n      routes:\n        - to: 0.0.0.0/0           #代表了所有请求\n          via: 192.168.2.1        #网关地址\n```\n\n`reboot`重启即可\n\n\n\n"},{"title":"windows家庭版开启远程桌面","url":"/2025/06/04/windows-jia-ting-ban-kai-qi-yuan-cheng-zhuo-mian/","content":"# windows家庭版开启远程桌面\n\n\n\n链接地址\n\nhttps://github.com/sebaxakerhtc/rdpwrap/tree/v1.8.9.9\n\n下载exe程序\n\n关闭win防火墙\n\n右键exe管理员身份运行\n\n全绿即可\n\n开启win防火墙"},{"title":"micro python发送 MQTT 心跳包","url":"/2025/06/02/micro-python-fa-song-mqtt-xin-tiao-bao/","content":"\n\n\n# micro python发送 MQTT 心跳包\n\n\n\n## 为什么要发心跳包?\n\n\n\n### keep alive机制\n\n在建立连接的时候，我们可以传递一个 Keep Alive 参数，它的单位为秒，MQTT 协议中规定：**在 1.5\\*Keep Alive 的时间间隔内，如果 Broker 没有收到来自 Client 的任何数据包，那么 Broker 认为它和 Client 之间的连接已经断开；同样地, 如果 Client 没有收到来自 Broker 的任何数据包，那么 Client 认为它和 Broker 之间的连接已经断开。**\n\n- Keep Alive 的最大值为 18 小时 12 分 15 秒；\n- Keep Alive 值如果设为 0 的话，代表不使用 Keep Alive 机制。\n\n\n\n**解决方法: 客户端每隔keep alive时间, 就向服务端发送心跳包, 相当于告诉服务端我还活着**\n\n\n\n## 怎样发送心跳包\n\n> 基于micro python语言的umqtt库, 在库中发现一个ping()函数, 该函数就是发送心跳包的函数\n\n### 代码示例\n\n```python\nimport time\nimport network\nfrom umqttsimple import MQTTClient\n\nt = 0\nkeepalive = 60\n\ndef do_connect():\n    wlan = network.WLAN(network.STA_IF)\n    wlan.active(True)\n    if not wlan.isconnected():\n        print('connecting to network...')\n        wlan.connect('ID', 'password')\n        i = 1\n        while not wlan.isconnected():\n            print(\"正在链接...{}\".format(i))\n            i += 1\n            time.sleep(1)\n    print('network config:', wlan.ifconfig())\n\n\ndef sub_cb(topic, msg):\n    print(topic, msg)\n\ndo_connect()\nc = MQTTClient(\"umqtt_client\", \"address\", keepalive=keepalive)\nc.set_callback(sub_cb)\nc.connect()\nc.subscribe(b\"test\")\nwhile True:\n    gloabl t\n    t = t + 1\n    print(i)\n    c.check_msg()\n    time.sleep(1)\n\tif t == keepalive:\n        c.ping()\n        t = 0\n        print('发送心跳包')\n    \n```\n\n**这样客户端就能一直保持连接状态啦**\n\n"},{"title":"chrome 代理插件","url":"/2025/04/17/chrome-dai-li-cha-jian/","content":"\n\n# chrome 代理插件\n\n\n\n插件名: **switchOmega**\n\n地址: **chrome商店**\n\n\n\n规则列表\n\n**GitHub地址:** https://github.com/aglent/autoproxy?tab=readme-ov-file\n\n**规则地址(黑名单)**: https://raw.githubusercontent.com/aglent/autoproxy/master/gfwlist.pac\n\n格式选择autoproxy"},{"title":"温湿度检测和液位测量","url":"/2024/08/16/wen-shi-du-jian-ce-he-ye-wei-ce-liang/","content":"\n# 温湿度检测和液位测量\n\n\n\n> **实现思路:**\n>\n> DHT11温湿度传感器和超声波传感器测量数据, 通过at89c51单片机数据处理, 最后将数据显示在液晶显示屏1602上 \n\n\n\n## 逻辑图\n\n![image-20230407225313188](https://shiningonly.oss-cn-shenzhen.aliyuncs.com/typora/image-20230407225313188.png)\n\n## 传感器特点\n\n\n\n### DHT11 温湿度传感器\n\n#### 简介\n\n>DHT11是一款有已校准数字信号输出的温湿度传感器。 其精度湿度±5%RH， 温度±2℃，量程湿度5~95%RH， 温度-20~+60℃。 DHT11 数字温湿度传感器 是一款含有已校准数字信号输出的温湿度复合传感器 ，它应用专用的数字模块采集技术和温湿度传感技术，确保产品具有极高的可靠性和卓越的长期稳定性。\n\n\n\n### Hc_Sr04 超声波传感器\n\n#### 简介\n\n>HC-SR04超声波测距模块可提供2cm-400cm的非接触式距离感测功能，测距精度可达高到3mm；模块包括超声波发射器、接收器和控制电路。其基本工作原理采用IO口TRIG触发测距，给至少10us的高电平信号；模块自动发送8个40khz的方波，自动检测是否有信号返回；有信号返回，通过IO口ECHO输出一个高电平，高电平持续的时间就是超声波从发射到返回的时间。\n\n\n\n## 设计原理图\n\n![image-20230407225950760](https://shiningonly.oss-cn-shenzhen.aliyuncs.com/typora/image-20230407225950760.png)\n\n\n\n## 实物展示\n\n![image-20230407230014336](https://shiningonly.oss-cn-shenzhen.aliyuncs.com/typora/image-20230407230014336.png)\n\n\n\n## 程序代码\n\n### 1. 液晶显示屏1602\n\n```c++\n#include \"reg51.h\"\n#include \"string.h\"  \n#include \"stdio.h\"  \n#include \"dht11.h\"  \n#include \"delayms.h\"  \n#include \"CSBofCM.h\"  \n \n#define uint unsigned int   \n#define uchar unsigned char  \n\t  \nsbit scr_E = P0^1;  \nsbit scr_RW = P0^2;  \nsbit src_RS = P0^3;  \n\t  \nuchar index;  \n\t  \nint pre_temp, temp_suf, pre_humi, humi_suf;  \n\t  \n\t  \n// 定义温湿度显示数组  \nuchar temp[14] = \"temp: \";  \nuchar humi[9] = \"humi: \";  \n\t  \n\t  \nvoid write_address(uchar address)  \n{  \n    src_RS = 0;  \n    P1 = address;  \n    delayms(5);  \n    scr_E = 1;  \n    delayms(5);  \n    scr_E = 0;  \n}  \n\t  \nvoid write_data(uchar data_)  \n{  \n    src_RS = 1;  \n    P1 = data_;  \n    delayms(5);  \n    scr_E = 1;  \n    delayms(5);  \n    scr_E = 0;  \n}  \n\t  \nvoid lcd_init()  \n{  \n    scr_E = 0;  \n    scr_RW = 0;  \n    write_address(0x38);  \n    write_address(0x0c);  \n    delayms(50);  \n    write_address(0x06);  \n    delayms(50);  \n    write_address(0x01);  \n    delayms(50);  \n}  \n\t  \nvoid display()  \n\t{  \n    pre_temp = high_temp / 10;  \n    temp_suf = high_temp % 10;  \n    temp[6] = '0' + pre_temp;  \n    temp[7] = '0' + temp_suf;  \n    temp[8] = 'C';  \n    temp[9] = ' ';  \n    temp[9] = 'j';  \n    temp[10] = 'u';  \n    temp[11] = '0' + f1;  \n    temp[12] = '0' + f2;  \n    temp[13] = '0' + f3;  \n\n    // 在第一行写入温度  \n    write_address(0x80);      \n    for(index = 0;index < 14;index++)  \n    {  \n        write_data(temp[index]);  \n        delayms(5);  \n    }  \n\n    pre_humi = high_humi / 10;  \n    humi_suf = high_humi % 10;  \n    humi[6] = '0' + pre_humi;  \n    humi[7] = '0' + humi_suf;  \n    humi[8] = 'h';  \n\n    // 在第二行写入湿度  \n    write_address(0x80+0x40);  \n    for(index = 0;index < 9;index++)  \n    {  \n        write_data(humi[index]);  \n        delayms(5);  \n    }  \n}\n\n```\n\n### 2. 超声波传感器Hc_Sr04 \n\n```c++\n#include<reg51.h>\n#include \"intrins.h\"  \n  \n  \ntypedef unsigned int uint;  \ntypedef unsigned char uchar;  \n   \nsbit Echo=P0^6; //接受端  \nsbit Trig=P0^7; //控制端  \nuchar flag; //中断溢出标志  \n\t  \n\t  \nvoid CSB_Time0() interrupt 1 //T0中断用来计数器溢出,超过测距范围  \n{  \n    flag=1;  \n}  \n\nvoid Delay20us()  \n{  \n    unsigned char i;  \n    _nop_();  \n    i = 7;  \n    while (--i);  \n}  \n\nvoid CSB_Rstart() //启动模块  \n{  \n    Trig = 1;  \n    Delay20us();  \n    Trig = 0;  \n    return;  \n}  \n\nvoid CSB_Init()  // 初始化  \n{  \n    TMOD = 0x01;  \n    TH0 = 0;  \n    TL0 = 0;  \n    EA = 1;            \n    ET0 = 1;  \n}   \n\t  \nuchar f1, f2, f3;  \nuint time;  \nfloat distance;  \nvoid CSB_GetOnce() //得到一次超声波测距模块的距离  \n{  \n    CSB_Rstart();  \n    while(!Echo); //当Echo为零时等待  \n    TR0 = 1; //开启计数  \n    while(Echo); //当Echo为1计数并等待  \n    TR0 = 0; //关闭计数  \n    time = TH0*256+TL0; //得到总时间，单位us  \n    distance = (float)(time*0.017);  \n    TH0 = 0;  \n    TL0 = 0; //清空定时器  \n    if((distance >=300)||flag==1) //超出测量范围显示 \" X \"  \n    {      \n        flag=0; //清空中断溢出标志  \n        f1 = 'X';  \n        f2 = ' ';  \n        f3 = ' ';  \n    }  \n    else  \n    {  \n        f1 = (uint)distance/100; //百位  \n        f2 = (uint)distance/10%10; //十位  \n        f3 = (uint)distance%10; //个位  \n    }  \n}\n\n```\n\n### 3. 温度传感器 DHT11\n\n```c++\n#include \"reg51.h\"  \n#include \"intrins.h\"  \n\ntypedef unsigned char uchar;  \ntypedef unsigned int uint;  \n\n\n//定义信号端口  \nsbit sign = P0^0;  \n\nvoid delay_us(char n)  \n{  \n    while(--n);  \n}  \n\nvoid delay_ms(int z)  \n{  \n    uchar x, y;  \n\n    while(z>=0)  \n    {  \n        _nop_();  //产生一条NOP指令 (起延时作用)  \n        x = 2;  \n        y = 199;  \n        do  \n        {  \n            while (--y);  \n        } while (--x);  \n        z--;  \n    }  \n}  \n\nvoid start()  \n{  \n    sign = 1;  \n    delay_us(2);  \n    sign = 0;  \n    delay_ms(20);   \n    sign = 1;  \n    delay_us(30);  \n}  \n\nuchar rec_one_byte()      //接收一个字节数据  \n{  \n    uchar i,dat = 0;  \n    for(i = 0;i < 8;i++)      \n    {            \n        while(!sign);    \n\n        delay_us(8);  \n        dat <<= 1; // 移位        \n        if(sign == 1)      \n            dat += 1;  \n        while(sign);    \n    }    \n    return dat;  \n}  \n\nuchar high_temp, low_temp, high_humi, low_humi, correct;  \n\nvoid receive_all_data()      //接收40位的数据  \n{    \n    start();  \n    if(sign == 0)  \n    {  \n        while(sign == 0);     \n        delay_us(40);   \n        high_humi = rec_one_byte();     \n        low_humi = rec_one_byte();    \n        high_temp = rec_one_byte();   \n        low_temp = rec_one_byte();    \n        correct = rec_one_byte();  \n\n        delay_us(25);  \n    }  \n}\n\n```\n\n### 4. 主函数\n\n```c++\n#include \"reg51.h\"\n#include \"1602.h\"  \n#include \"dht11.h\"  \n#include \"CSBofCM.h\"  \n  \nvoid main()  \n{  \n    lcd_init();  \n    CSB_Init();  \n    while(1)  \n    {  \n        receive_all_data();  \n        CSB_GetOnce();  \n        display();  \n    }  \n}\n\n```\n\n"},{"title":"电网","url":"/2024/08/16/dian-wang/","content":"\n## 一：电路\n\n关联参考方向：电流从电压“+”流入“—”流出，电源内部通常为非关联方向；\n\n\nui取关联参考方向时，根据p=ui，p>0时元件吸收正功率，p<0时发出正功率；ui取非关联参考方向时相反\n\n\n基尔霍夫第一定律（KCL）：集总参数电路中，任何时刻对任一节点，所有流出结点的支路电流代数和等于流入节点电流代数和。\n\n\n基尔霍夫第二定律（KVL）：集总参数电路中，任何时刻沿任意回路，所有支路电压的代数和恒等于0.\n\n\n\n基尔霍夫定律与电路元件性质和是否线性无关，只取决于电路的连接方式。\n\n \n\n理想电源无内阻即恒压或恒流，有源元件，作负载用时可看成非线性电阻。\n\n \n\n实际电压源内阻越小越好（不可短路），实际电流源内阻越大越好（不可开路）。\n\n \n\n受控源是线性有源元件，但不能单独作为激励，受控量与控制量成正比。\n\nVCVS:电压控制电压源，\n\nVCCS:电压控制电流源\n\nCCVS:电流控制电压源\n\nCCCS:电流控制电流源\n\n \n\n对有b条支路，n个结点的连通电路，可以列出n-1个独立KCL方程，b-n+1个独立KVL方程，b个VCR（欧姆定律）方程。\n\n \n\n电阻并联：R=R1·R2/(R1+R2)    电阻串联：R=R1+R2\n\n \n\nY-三角等效变换：Y变三角：R12=(R1R2+R2R3+R3R1)/R3,其余两个以此类推，分子不变；\n\n三角变Y：R1=R12R31/(R12+R23+R31),以此类推，分母不变；\n\n若R1=R2=R3，则R12=R23=R31=3R1即三角等于3倍Y。\n\n \n\n电桥平衡：对着的桥臂电阻乘积等于另一对乘积，中间的桥支路就无电流，两端电压也为0，这条支路就可看作短路（无电流）或者开路（无电压）。\n\n \n\n电压源可以随意串，但只有极性和幅值相等时才能并；\n\n电流源可以随意并，但只有同方向且电流相等才能串；\n\n \n\n实际电压源可看作理想电压源串联电阻，可等效为理想电流源并联电阻，受控源亦是如此。\n\n \n\n无论是电源等效还是电阻等效都只针对外部电路，对内不等效。\n\n \n\n求输入电阻时，先把电压源短路，电流源开路，有受控源时用外加电源法。\n\n支路电流（电压）法：对每个结点（支路）都列写独立的KCL（KVL）方程求解，\n\n \n\n节点电压法：与电流源串联的元件作短路处理，参考点电位为0作为负极，流入节点电流为“+”，反之为负，自电导为正，互电导为负，需列写n-1个节点电压（KCL）方程，自动满足KVL，本质是KCL，适用节点少支路多的电路。\n\n \n\n网孔（回路）电流法：与电压源并联的元件作开路处理，回路电流从电压源“+”流出（非关联）时该电压取正，反之取负，需列写b-n+1个网孔电流（KVL）方程，自动满足KCL，本质是KVL，适用节点多回路少的电路，网孔电流法是特殊的回路电流法，只适用于平面电路。\n\n \n\n弥尔曼定理：当电路只有两个节点时，只需列写一个KCL方程。\n\n \n\n叠加定理：线性电阻电路中，某处的电压和电流是电路中各个独立电源单独作用时在该处产生的电压和电流的叠加，不产生作用的电源置零（电压源短路，电流源开路），受控源可看作电阻保留，功率不能叠加。\n\n \n\n齐性定理：线性电路中，当所有独立电源都同时增大或缩小K倍，则所有支路电流和电压也同时增大或缩小K倍。\n\n \n\n戴维宁定理：一个含独立电源、线性电阻和受控源的二端网络可以用一个大小为开路电压的理想电压源和大小为输入电阻的电阻元件的串联组合等效替换。\n\n \n\n诺顿定理：一个含独立电源、线性电阻和受控源的二端网路可以用一个大小为短路电流的理想电流源和大小为输入电导的电导元件的并联组合替换。\n\n \n\n最大功率传输定理：当负载电阻与线性二端网络内部独立电源置零后的等效电阻大小相等时，负载获得功率最大，传输效率达到50%，弱电设备追求功率，强电设备追求效率。\n\n \n\n以上定理都只针对线性电路有用，线性电路指只含独立源和线性元件（电阻元件和大部分情况下的电感或电容元件）的电路。\n\n \n\n电容元件：是一种动态、记忆、无源、储能元件，实际电容电压不允许突变，串联电容值的计算与并联电阻值的计算相同，电容并联与电阻串联相同。\n\n \n\n电感元件：是一种动态、记忆、无源、储能元件，实际电感电流不允许突变，其串并联与电阻串并联相同。\n\n \n\n时间常数τ：取决于电路结构和电路参数（R、L、C），与电路的输入输出（V、A）无关，时间常数越大，电压或电流变化（充放电过程）越慢，τ=RC或L/R，电路从换路开始到达新稳态需3-5τ。\n\n \n\n换路定则：当电容电流和电感电压为有限值（即实际情况下），换路前后电容上的电荷、电压和电感上的磁链、电流不能跃变。(对理想电源不成立)\n\n \n\n一阶电路的零输入响应：换路前，动态元件已储存能量，换路时无外加激励的电路响应，对应电容和电感的放电过程。\n\n \n\n一阶电路的零状态响应：动态元件初始能量为零，换路时，仅由外加激励在电路上产生的响应，对应电容和电感的充电过程。\n\n \n\n一阶电路的全响应：电路在外加激励与动态元件同时作用下产生的响应，为零状态响应和零输入响应的叠加，uc=U0e^(-t/τ)+Us(1-e^(t/τ)).\n\n \n\n三要素法：直流：初始值，稳态值（强制分量）（t→∞时，电感作短路，电容作开路），时间常数。\n\n \n\n二阶RLC电路的零输入响应：R>√(L/C),过阻尼状态，特征根为不相等的负实数根，响应为非振荡衰减，电感先充电后放电，电容持续放电；\n\nR<√(L/C)，欠阻尼状态，共轭复数根，振荡衰减，电感先充电后放电，电容先放电后充电；\n\nR=√(L/C)，临界阻尼状态，相等的负实数根，非振荡衰减；\n\nR=0，无阻尼状态，共轭虚根，等幅振荡不衰减，电容充就电感放，电感充就电容放，二者能量相等。\n\n \n\n相量角：电压相量与电流相量的夹角，顺时针为滞后，逆时针为超前，电阻的电压与电流夹角为0°，电感的电压超前电流90°，电容的电压滞后电流90°。\n\n \n\n阻抗：|Z|=√（R^2+X^2）=U/I=Um/Im，电抗X=ωL=1/ωC=2πfL，单位都为欧姆。\n\n \n\n导纳：|Y|=I/U=Im/Um,电纳B=1/X，单位都为S（西门子）。\n\n \n\n瞬时功率p，\n\n平均功率（有功功率）P=UIcosφ，单位W（瓦特）；\n\n无功功率Q=UIsinφ，单位Var（法拉）；\n\n视在功率S=√（P^2+Q^2），单位VA（伏安）；\n\n复功率S~=|S|，单位VA（伏安），只用于辅助计算。\n\n功率因数λ=cosφ,越大越好。\n\n \n\n谐振：含动态元件的电路对外呈阻性（即端口电压和电流同相位）的现象。\n\n \n\n串联谐振（电压谐振）：电感和电容串联支路相当于短路，ωL=1/ωC，电容电压和电感电压大小相等，相位相差180°，可能出现过电压，品质因数Q=（1/R）√（L/C），Q越大，Uc和Ul越大。（多用于高压试验，平时应避免）\n\n \n\n并联谐振（电流谐振）：电感与电容并联支路相当于开路，电感电流与电容电流大小相等，方向相反，可能出现过电流。\n\n \n\n三相对称电路Y接：线电压超前对应相电压30°，有效值是相电压的√3倍，线电流等于相电流，\n\n \n\n三相对称电路角接：线电压等于相电压，线电流滞后对应相电流30°，有效值为相电流的√3倍，不允许绕组反接，会产生大环流烧毁绕组。\n\n \n\nY接误接为角接：相电压升高√3倍，线电流增大3倍，烧毁负载，\n\n \n\n角接误接为Y接：相电压仅为额定值的1/√3，线电流和功率降低，负载功力不足。\n\n \n\n三相对称负载功率：P3（三相）=3P1（单相），Q3=3Q1,S3=√3UL·IL=3S1。\n\n \n\n两表法：两只功率表的非同名端必须都接在未接表的那根线上，不能用于测量不对称三相四线电路。\n\n \n\n中性线：迫使负载中性点电压为0，保证不对称负载的相电压对称。\n\n \n\n耦合电感的耦合系数：k=M/√(L1L2),k<=1，大小与结构、位置和空间磁介质有关\n\n耦合越紧密，k越大，k=1为全耦合。\n\n \n\n耦合电感去耦等效电路：并联：若二者同名端连接于同一点（同侧），则两电感的自感各自减去一个互感，另一条支路新增一大小为互感的电感，反之则加互感，新增负的互感电感。\n\n\n\n串联：同向串联，电感增大，L=L1+L2+2M；反向串联，电感减小，L=L1+L2-2M。\n\n \n\n非正弦周期波：奇函数波形对称于坐标原点，展开式中无cos项，偶函数对称于坐标轴，无sin项。\n\n \n\n二端口一定是四端网络，四端网络不一定是二端口。\n\nY参数矩阵：Y11=I1/U1  Y12=I1/U2\n\n​      Y21=I2/U1  Y22=I2/U2\n\n互易二端口：Y12=Y21,四个Y参数中有三个互不相关.\n\n对称二端口：Y12=Y21,Y11=Y22。\n\n对称二端口一定是互易的，互易二端口不一定是对称的。\n\nZ参数矩阵：Z11=U1/I1  Z12=U1/I2\n\n​      Z21=U2/I1   Z22=U2/I2\n\nZ的互易和对称于Y相同\n\nT参数矩阵：A=U1/U2   B=U1/-I2\n\n​     C=I1/U2    D=I1/-I2\n\n互易：AD-BC=1  对称:AD-BC=1,A=D\n\nH参数矩阵：H11=U1/I1  H12=U1/U2\n\n​      H21=I2/I1  H22=I2/U2\n\n互易：H12=-H21  对称：H12=-H21,H11·H22-H12·H21=1。\n\n \n\n## 二：电机\n\n电机：变压器，直流电机，交流电机（同步电机，异步电机）\n\n\n\n铁磁材料：硬磁材料（剩磁大，永磁材料），软磁材料（剩磁小，电机常用如硅钢片）\n\n\n\n铁磁材料特性：高导磁性，饱和性（磁饱和曲线），磁滞性和剩磁现象\n\n\n\n铁磁材料损耗：磁滞损耗：与交变频率、磁滞回线包围的面积大小和铁心体积成正比，\n\n​       涡流损耗：可通过将铁心做成相互绝缘的薄片或者提高铁心电阻率来降低\n\n​       铁心损耗：近似与频率的1.3次方、最大磁感应强度的二次方及铁心质量成正比，只有交变的磁通才产生。\n\n\n\n磁阻：主要取决于磁路的几何尺寸和磁导率，磁路越饱和，磁导率越小，磁阻越大。\n\n\n\n磁导率：由铁心材料决定，铁磁材料远大于非铁磁材料。\n\n\n\n变压器：主绝缘：绕组与绕组之间、绕组与铁心及油箱之间的绝缘。\n\n​    纵绝缘：绕组的层间、匝间及线段之间的绝缘。\n\n\n\n变压器变比为相电压之比。\n\n\n\n变压器油：绝缘、冷却、灭弧。\n\n\n\n变压器铁心必须接地，且只允许一点接地。\n\n\n\n变压器空载电流（励磁电流）：用于建立主磁通，是感性无功电流，功率因数很低，大小为一次侧额定电流的1%-10%，主磁通为正弦波时，空载电流为尖顶波，其大小取决于外加电压、原绕组匝数、铁心材料的性质、尺寸及饱和程度，磁阻越小或变压器容量越大，空载电流越小。\n\n\n\n电源电压降低时，铁心中主磁通减小，磁路饱和程度下降，磁导率增大，磁阻减小，励磁电抗增大，励磁电流减小。\n\n\n\n感应电动势：E=4.44fΦN.\n\n\n\n励磁电抗：取决于电流频率、线圈匝数、主磁路材料性质和尺寸，随磁路饱和程度增加而减少，与二次绕组无关。\n\n\n\n漏电抗与铁心无关，与励磁电抗相比特别小。\n\n\n\n空载损耗：铁损（主要）：与外加电压有关，与负载和电流基本无关，也叫不变损耗。\n\n​     铜损（很小）：电流流经一二次绕组产生的损耗，与负载电流大小的平方成正比，也叫可变损耗。\n\n\n\n磁动势平衡：变压器负载运行时，原副边电流所建立的磁动势实现动态的平衡，共同作用，产生主磁通，一次电流随二次电流变化而变化，即负载电流增大，二次电流就增大，一次电流也随之增大。\n\n\n\n变压器空载试验：低压侧加额定电压，高压侧开路，空载电流百分数=空载无功损耗/变压器额定容量。空载电流百分数越小导磁性能越好，一般为1%-10%。\n\n\n\n变压器短路实验：高压侧加可调低电压，低压侧短路，短路电压百分比=短路阻抗标幺值=额定负载时的无功功率/变压器额定容量，取决于电压、电源电阻和负载电阻，电抗越大，短路电压百分比也越大，其上产生电压降也越大。正常运行时短路电压百分比小点好，限制短路电流时大点好。\n\n\n\n变压器二次侧带阻感性负载时，二次侧末端端电压下降，带容性负载时，可能下降、上升或不变。\n\n\n\n变压器功率因数越高效率越高，在铁损等于铜损时效率最高。\n\n\n\n三相组式变压器：彼此磁路独立，互不关联，适用于大容量巨型变压器及运输条件受限的地方。\n\n\n\n三相芯式变压器：各项磁路彼此关联，中间磁路短，两边磁路长，外施三相对称电压时，三相空载电流不对称，中间相较小。\n\n\n\n连接组别：时钟表示法：以高压侧线电压相量为分针并固定于“12”的位置，低压侧线电压相量为时针，时针所指位置便为连接组别号。\n\n​     Yy接法只有偶数组别号，Yd接法只有奇数组别号。\n\n\n\n三相组式变压器不允许Yy连接：3次谐波磁通→平顶波主磁通→尖顶波电动势\n\n\n\n容量大于1800KVA的心式变压器也不宜采用（涡流损耗增加，局部发热，降低了效率）：3次谐波→正弦波→正弦波\n\n\n\n只要有一侧为角型连接，则产生的主磁通和感应电动势一定为正弦波，线电压不纯在3次谐波，一定是正弦波。\n\n\n\n变压器并联运行条件：连接组别相同（不允许误差，会导致空载环流太大），变比相等（降压并联运行时，变比小的负荷重，升压则是变比大的负荷重，环流小于额定电流的10%，变比差值不大于0.5%），短路阻抗标幺值相等（允许小误差，但会使容量利用不充分，与算数平均值之差不大于10%），短路阻抗角相等（允许小误差，但会使容量利用不充分）\n\n\n\n并联运行的变压器输出容量与短路阻抗标幺值成反比。\n\n\n\n三绕组变压器的绕组布置（内→外）：升压变压器：中→低→高\n\n​                 降压变压器：低→中→高\n\n\n\n三绕组变压器的额定容量为三个绕组中容量最大的那个，位于中间层的绕组等值电抗最小，有可能小于0.\n\n\n\nYy连接的变压器装第三绕组可消除3次谐波分量，并给不平衡的三相负荷和辅助负荷供电。\n\n\n\n自耦变压器：公共绕组（同时处于一、二次回路中），串联绕组（只处于一次回路中）\n\n\n\n自耦变压器容量：串联绕组容量与公共绕组容量相等；\n\n\n\n额定容量（输入变压器的容量），绕组容量（通过磁传导的容量，公共绕组的容量，也叫电磁容量，小于额定容量），传导容量（通过电传导的容量）\n\n\n\n自耦变压器的变比：一次绕组匝数与二次之比，公共绕组电流越小，变比越小，传导容量越大，绕组容量越小，越经济。\n\n\n\n自耦变压器短路阻抗标幺值小，短路电流大，中性点必须直接接地，\n\n\n\n自耦变压器第三绕组作用：消除3次谐波分量，减小零序阻抗，可用来连接发电机或调相机向附近地区供电。\n\n\n\n交流绕组：按节距和极距分：整距绕组（节=极），短距绕组（节<极，可改善电动势波形），长距绕组（节>极，可改善电动势波形）\n\n​     槽距角=p（极对数）x360°/Z（定子总槽数）\n\n\n\n抑制高次谐波：减小谐波磁场，发电机绕组用Y接，用短距绕组（消5，7次用节距/极距=4/5~6/7左右）\n\n\n\n**同步电机**\n\n同步电机定子部分：与出线连接的定子铁心与绕组（电枢绕组），产生感应电动势。\n\n同步电机转子部分：与直流电源和原动机相连的转子铁心与绕组，产生恒定磁场\n\n同步电机：f=pn/60  f:感应电动势频率 p:极对数 n:转子转速\n\n同步电机分：同步发电机（转子旋转磁场超前气隙合成磁场，广泛使用），同步电动机（转子旋转磁场滞后气隙合成磁场，容量大于50KW且不需调速常用），同步调相机（同步补偿机，同相位，专门改善电网功率因数）\n\n同步发电机：凸极机（水轮机及转速低即1000转以下的电动机多用），隐极机（汽轮机及转速高即1500转以上的电动机多用）\n\n同步发电机原理：定子绕组（固定）切割转子旋转磁场产生感应电动势。\n\n同步发电机励磁：直流励磁机励磁（中小型汽轮机广泛应用），静止整流器励磁（不受电力系统扰动影响），旋转整流器励磁（运行可靠，操作方便，结构复杂），自并励励磁（大型机组广泛采用）\n\n同步发电机空载电动势与转子转速和励磁电流（空载特性）有关。\n\n电枢反应：电枢磁动势对励磁磁动势的影响。\n\n同步电机的电枢磁动势和励磁磁动势转速相同，方向一致（定转子磁动势相对静止）\n\n直轴（d轴）：主磁极的轴线。   交轴（q轴）：滞后直轴90°电角度的轴线\n\n隐极同步发电机：气隙和磁阻均匀，直轴同步电抗等于交轴同步电抗，转子绕组起阻尼绕组作用。\n\n凸极同步发电机：气隙和磁阻不均匀，直轴同步电抗大于交轴同步电抗，转子装有阻尼绕组。\n\n内功率因数角=90°时（电枢绕组相电流滞后相电压90°），直轴电枢反应表现为去磁作用，削弱气隙合成磁场，降低定子绕组端电压，维持电压恒定所需励磁电流增加；内功率因数角=-90°时与之相反。\n\n同步电抗与电枢绕组匝数的平方成正比，与磁阻成反比\n\n空载特性：电枢端电压随励磁电流变化的关系曲线，测量时转子转速不变。\n\n短路特性：电枢端点三相短路时的电枢短路电流与励磁电流的关系，电枢磁动势纯去磁，凸极机短路比一般大于隐极机，可求同步电抗不饱和值。\n\n​     短路比：产生额定电压的励磁电流与产生额定短路电流的励磁电流之比，电机越饱和，电抗越小，短路比越大，同步电抗越小，电压调整率越小，并联运行时发电机越稳定，但气隙较大，造价高。\n\n零功率因数特性：发电机端电压与励磁电流之间的关系，可求电枢绕组漏电抗。\n\n外特性：发电机端电压与负载电流的关系，带纯阻或阻感性负载时，二者负相关，带阻容性负载时，正负相关都有可能，可求发电机的电压变化率。\n\n调整特性：负载电流与励磁电流的关系曲线，变化趋势与外特性相反，通过调节励磁电流以维持端电压恒定。\n\n效率特性：发电机效率与输出功率的关系。\n\n同步发电机并列运行条件：频率一致（偏差不大于0.2%-0.4），幅值相同（偏差不大于5%-10%），相位相同（偏差不大于10°），相序相同（不允许不同）\n\n并网方法：准同步法：将发电机调整到满足条件后并网，无冲击电流\n\n​     自同步法：检验好相序于转速后直接并入电网，，定子冲击电流大。\n\n发电机输入功率=机械损耗+附加损耗+铁损+电磁功率（=输出功率+定子铜损）\n\n在静态稳定区（电磁功率随功角增大而增大的曲线部分），输出功率越小，功角（励磁磁场与气隙合成磁场的夹角）越小，静态稳定性越好，还可通过增大励磁电流、减小电抗提高静态稳定性。\n\n功角大于0时，为发电机；功角小于0时，为电动机。\n\n调有功，可调原动机，同时会影响无功；调无功，可调励磁，不会影响有功。\n\n发电机正常运行：冷却介质温度高于额定值时，按定子电流减小出力，低于时按转子电流来提高出力，电压超过正负5%时，发电机都应减小出力，不允许超过110%；频率高于50.5时，转速增加，效率下降，小于49，5时，温度升高，局部过热；功率因数高于额定值时，定子电流不应超过允许值，低于则转子电流不超过。\n\n发电机非正常运行：过负荷（只允许短时），异步运行（水轮机不允许，汽轮机允许短时），不对称运行（负荷不对称长时间，故障短时间不对称）\n\n发电机进相运行：欠励磁，带阻容性负载，功率因数超前（电流超前电压），发出有功和容性无功，越欠励（励磁电流越小），电枢电流（定子电流）越大，输出无功越多，功角越大，越不稳定（静态稳定性差），发电机端部漏磁大，会过热\n\n发电机迟相运行：过励磁，带阻感性负载，功率因数滞后（电流滞后电压），发有功和感性无功，越过励（励磁电流越大），电枢电流越大，输出无功越多，功角越小，越稳定。\n\n同步发电机容量增大，阻抗增大，静态稳定功率极限降低，机械时间常数减小，不利于静态稳定。\n\n有功负荷增加时，电磁力矩也增大，应相应地增加励磁电流；有功负荷越小，发电机吸收最大无功功率时所需的励磁电流越小。\n\n同步发电机在稳态运行时的允许运行范围取决于发电机的额定容量、最大励磁电流、原动机输出功率极限和进相运行时静态稳定极限。\n\n \n\n**异步电机（感应电机）**\n\n异步电机定子部分：与电路连接的定子铁心与绕组，建立旋转磁场。\n\n异步电机转子部分：感应电动势和产生力矩的转子绕组和铁心。\n\n异步电动机原理：静止的转子绕组切割定子旋转磁场，在转子绕组上产生电磁转矩从而带动转子旋转，**但由转子旋转产生的磁场转速等于总是相等，不受转子绕组转速影响，定转子磁动势相对静止是一切电机能正常运行的必要条件**。\n\n转差率：转子转速与同步转速（定子旋转磁场转速）的差值跟同步转速的比值，s=n1-n/n1.\n\n异步电机运行状态：电动机：0<s<1，转子静止时s=1，理想空载运行时s=0；\n\n​         发电机：-∞<s<0；\n\n​         电磁制动：1<s<+∞。\n\n转子绕组电动势E2=sE1（定子绕组电动势）\n\n转子绕组电流频率f2=sf1（定子绕组电流频率）\n\n异步电动机负载增加时，转子转速会降低，转差率增加，转子绕组中感应电动势、感应电流大小和电流频率均增加，定子电流也增加，但转子电流产生的转子磁动势转速不变。\n\n输入功率=定子铜损+铁损+电磁功率（转子铜损+总机械功率（机械损耗+输出））\n\n空载试验：测量励磁电阻、励磁电抗、机械损耗、铁损。\n\n堵转（短路）实验：测量漏阻抗。\n\n临界转差率：稳定的运行分点，小于该值时电磁转矩随转差率增加而增加，电机稳定运行，大于则负相关且不稳定，该值对应最大电磁转矩。\n\n最大电磁转矩与外加电压平方成正比，与频率和漏抗负相关，与转子电阻无关；\n\n临界转差率与转子电阻成正比，与频率和漏抗负相关，与电压无关。\n\n起动转矩：对应s=1，起动转矩与外加电压平方成正比，与频率和漏抗负相关，绕线式电动机转自回路适当串电阻可增大起动转矩。\n\n鼠笼式异步电机起动：全压起动（直接起动）：操作方便但启动电流大，会导致电压降低幅度大，绕组电流增加，受电磁力冲击。\n\n​          降压起动：定子回路串电抗（贵）或电阻（次数少）降压起动，自耦变压器降压起动（启动电流和电压成比例减少，贵），星-三角降压起动（应用广泛），延边三角形降压起动（用于定子绕组角接的电动机）\n\n绕线式异步电机起动：转子回路串起动变阻器起动：增加回路电阻，最大电磁转矩不变，但临界转差率改变。\n\n​          转子回路串频敏变阻器起动：利用转子频率平滑减小来使转子回路电阻平滑减小，转子转速越低，转差率越大，频率越高，等效电阻值越大。\n\n深槽式和双鼠笼式异步电动机，利用集肤效应，增加转子电阻，做到降压起动。\n\n异步电动机调速：变级调速（改变定子绕组连接方式来改变电动机极数）\n\n​        变频调速（改变电动机供电频率，转速稳定性好，可连续调节，为无级调速，从基频向下调，为恒转矩调速，往上调，为恒功率调速）\n\n​        改变转差率调速（定子调压调速：改变外加电压，调速范围小，适用于鼠笼式。\n\n转子串电阻调速：改变转子回路电阻，效率下降，适用于中小型绕线式。\n\n双馈调速：定子和转子绕组分别由两个独立电源供电。\n\n串级调速：把转子感应电动势和转子外加电压均变为直流量，提高了效率。）\n\n异步电动机制动：反接制动（改变电源相序的正转反接，转速反向的正接反转常用于起重机，都需降压或串入较大电阻）\n\n​        发电机制动（由于外来因素使转子转速超过磁场转速）\n\n​        能耗制动（给定子绕组通直流电，利用转子惯性切割磁场）\n\n \n\n \n\n## 三：电力电子\n\n电力变换：整流电路（交流→直流即AC→DC），逆变电路（DC→AC），直流斩波（DC→DC），交流调压（AC→AC）\n\n电路基本控制：相控（用于交流电源的电力变换器，变换结果为触发脉冲的移相），频控（用于由直流电源供电的无源逆变器，结果为控制脉冲频率的变化），斩控（用于斩波器和采用脉宽调制PWM的变换器，结果为电力电子器件导通时间和关断时间比值的变化）\n\n电力电子器件发展：电子管→整流器→晶体管→晶闸管→全控型器件→复合型器件→功率集成电路\n\n电力电子器件功率损耗：通态损耗（主要），断态损耗，开关损耗（开通和关断损耗，开关频繁时为主要损耗）\n\n电力电子器件分类：按可控程度分：不可控：电力二极管（普通二极管，肖特基二极管）；\n\n​                半控型：晶闸管（SCR）及其派生器件（逆导晶闸管，不对称晶闸管，双向晶闸管）；\n\n​                全控型：绝缘栅双极性晶体管（IGBT），电力场效应晶体管（Power-MOSFET），\n\n​                    门极可关断晶闸管（GTO），电力晶体管（GTR,BJT），IGCT。\n\n​         按驱动信号分：电流驱动型：电力二极管，GTR,SCR;\n\n​                电压驱动型：场控电力电子器件，IGBT,静电感应晶体管（SIT），静电感应晶闸管（SITH），场控晶闸管（MCT）。\n\n​         按驱动信号波形分：脉冲触发型：GTO,SCR；\n\n​                  电平控制型：IGBT,GTR,MOSFET；\n\n​         按载流子参与导电情况分：单极型：MOSFET,SIT，肖特基二极管；\n\n​                     双极型：电力二极管，达林顿管，GTR，SCR,GTO；\n\n​                     复合型：IGBT，IGCT。\n\n单极型和复合型器件工作频率高，但双极型有电导调制效应，导通压降和损耗都低；电流型输入阻抗低，驱动电流和功率大，电路复杂，电压型与其相反，抗辐射能力强。\n\nPN结：正向导通，反向截止，P区多子为空穴，N区多子为自由电子\n\n电力二极管（SR）：不可控，一个PN结，（肖特基二极管反向恢复时间很短，无明显电压过冲，反向耐压较低时正向压降也较小，损耗小，效率高）。\n\n晶闸管（SCR）：电流驱动脉冲触发双极型半控型器件，三个PN结，单向导电性，有阳极、阴极、门极（控制是否开通，导通后失去作用），掣住电流大于维持电流（2-4倍），仍是目前电压和电流容量最高且工作可靠的器件，结温越高，维持电流越小，派生器件有快速晶闸管、双向晶闸管（双向导通，关断时间较长）、逆导晶闸管（反向击穿电压低，正压小，耐温强）、光控晶闸管（避免电磁干扰，小功率无门极）。\n\n门极可关断晶闸管（GTO）：电流驱动脉冲触发双极型全控型器件,三个PN结，耐压高，电流容量大，开关频率和关断损耗高。\n\n电力晶体管（GTR）：电流驱动电平控制双极型全控型器件，两个PN结，耐压高，开关时间短，容量比晶闸管低，工作于截止区和饱和区，特定条件下会二次击穿。\n\n功率场效应晶体管（Power-MOSFET）：电压驱动电平控制单极型全控型器件，场效应晶体管（FET）的一种，驱动功率小，开关速度快，耐热好，电流容量小，耐压低，\n\n绝缘栅双极晶体管：电压驱动电平控制复合型全控型器件，有栅极、集电极、发射极，导通电阻小，开关速度快，损耗小，驱动功率小（电压型器件要求），有静态和动态掣住效应（集电极电流过大）\n\n新型电力电子器件：MOS控制晶闸管（MCT）（全控型，复合型）；\n\n静电感应晶体管（SIT）（单极型）；\n\n静电感应晶闸管（SITH）（双极型）；\n\n集成门极换流晶闸管（IGCT）（复合型）；\n\n基于宽禁带半导体材料（碳化硅、氮化镓）的电力电子器件。\n\n单极性器件与复合型器件都为电压驱动型，输入阻抗高，驱动功率小，驱动电路简单，工作频率高；\n\n双极型都为电流驱动型，有电导调制效应，通态压降低，导通损耗小，其余与电压相反。\n\n电压纹波系数：电压交流纹波有效值和直流电压平均值之比，越小越好。\n\n整流电路分类：按器件控制性分：不可控、半控、全控；\n\n​       按结构形式分：半波、全波、桥式、零式；\n\n​       按电源相数分：单相、三相、多相；\n\n​       按控制方式分：相控、斩波 。\n\n单相半控相控：线路简单，承受最大电压为√2U，输出电压和负载电流脉动大，且二次绕组存在直流分量，使铁心磁化，变压器容量不能充分利用，只适用于小容量波形要求不高的场合，移相范围180°。\n\n单相桥式相控：带电阻负载时，晶闸管承受最大正向电压（√2/2）U，最大反向 电压√2U，触发角移相范围为180°，导通角180°-α；带阻感性负载时正反最大电压都为√2U，移相范围90°，导通角180°，输出电压平均值为半波2倍，电流为1/2，功率因数提高√2倍。\n\n单相桥式半控：带电阻时，正反电压为√2U，带阻感性时为√2U，导通角为180°-α，移相范围180°，并联续流二极管可减轻负担，防止失控，提高电压平均值。\n\n三相半波相控：带电阻负载时，最大正向电压√2U，反向√6U，移相范围150°（相），导通角连续处为120°，断开处为150°-α；带阻感性负载时，最大正反电压都为√6U，移相范围90°，导通角120°，二次电流中有直流分量，会使铁心磁化，应用少。\n\n三相桥式全控：带电阻负载时，最大正向电压3√2/2U，反向√6U，移相范围120°（线），导通角连续处120°，断开处2x（120-α）；带阻感性负载时，最大正反电压都为√6，移相范围90°，导通角120°。\n\n三相桥式半控：线路简单经济。\n\n换相重叠角：电流或漏感越大，它越大，触发角越小，整流电路输出电压降低，有源逆变电路输出电压升高（漏感的影响）。\n\n有源逆变电路条件：只能采用全控电路（相控），触发角>π/2，输出电压为负值，有直流电动势且极性于晶闸管导通方向一致，最小逆变角一般取30°-35°。\n\n逆变分类：按负载性质分：有源逆变（输出接至交流电源），无源逆变（输出直接接负载）\n\n​     按直流电源分：电压逆变（电源为恒压源，接有并联大电容），电流逆变（电源为恒流源，接有串联大电感）\n\n​     按电路结构分：半桥式，全桥式，推挽式；\n\n​     按输出端相数分：单相，三相，多相；\n\n​     按开关状态分：软开关，硬开关；\n\n​     按换流方式分：负载换流型，脉冲换流型，自换流型；\n\n​     按负载特点分：非谐振式，谐振式。\n\n谐波系数：谐波分量有效值和基波分量有效值之比。\n\n逆变电路换流方式：电网换流（电网提供换流电压，适用于半控型器件，相控电路多采用，无源逆变电路不可用）；\n\n器件换流（利用全控型器件的自关断能力环流，无源逆变电路不可用）；\n\n强迫换流（设置附加换流回路，给晶闸管强迫施加反压，也称电容换流，分为直接耦合式和电感耦合式（电流换流））；\n\n负载换流（由负载提供换流电压）\n\n电压型单相半桥：输出电压为U/2，180°矩形波；\n\n电压型单相全桥：输出电压为U，180°矩形波\n\n带中心抽头变压器：器件耐受电压2U，180°矩形波；\n\n三相电压型：120°矩形波，含6k+1次谐波。\n\n单相电流型：负载换流，负载构成并联谐振电路，输出矩形波，又称并联谐振式，电流含基波和奇次谐波，负载对基波呈高阻抗，对谐波呈低阻抗。\n\n三相电流型：横向换流，电流输出波为120°，矩形波。\n\n多重逆变电路：把几个矩形波结合起来，使输出接近正弦波，电压型多用串联多重，电流型多用并联多重。\n\n多电平逆变电路：输出较多电平，使输出接近正弦波，两电平电路有三种电平，三电平有五种电平。\n\n斩波（DC→DC）：直接使直流变为另一种直流的变流电路\n\n斩波电路分类：基本斩波电路，复合斩波，多相多重斩波。\n\n基本斩波电路：降压斩波（Buck）：PWM控制，频率调制，混合型，输出电压正极性，输入电流断续，输出连续；\n\n​       升压斩波（Boost）：输入连续，输出断续，输出电压正极性；\n\n​       升降压斩波（Boost-Buck）：输入输出都断续，输出电压反极性；\n\n​       Cuk斩波：输入输出都连续，输出电压反极性；\n\n​       Sepic斩波：输入连续，输出断续，输出电压正极性；\n\n​       Zeta斩波：输入断续，输出连续，输出电压正极性。\n\n复合斩波电路（电流可逆斩波电路）：降压时电动机电动运行，工作于1象限；\n\n​                 升压时作再生制动运行，工作于2象限；\n\n全桥式直流斩波器可四象限运行\n\n间接直流变流电路：单端：正激，反激，单向励磁流过直流脉动电流，存在直流磁化，多用于小功率电源和设备；\n\n​         双端：半桥（有直通问题），全桥（有直通问题），推挽（有偏磁问题），流过正负对称交流电，工业用，功率较大。\n\n交流变交流变流：直接变流：交流电力控制电路：交流调压电路（多用于灯光控制，异步电机软起动、调速和无功调节），交流调功电路（用于调节负载消耗平均功率），交流电力电子开关（将晶闸管反并联后串入电路代替机械开关，缺点贵）；\n\n交-交变频电路：当器件采用晶闸管时又叫周波变流器，单相交-交变频（通过P和N切换速度来调节功率输出和电压有效值，但只能降频，适合低速大功率），三相交-交变频（效率较高，可四象限工作，贵）\n\nPWM：通过对脉冲宽度进行调制来获得想要的波形，可用于任何一种变换中，在逆变电路中应用最广泛。\n\n面积等效法则：冲量（窄脉冲面积）相等而形状不同的窄脉冲加在具有惯性环节上时，其效果基本相同。\n\nPWM波形：等辐波（直流电源产生），不等辐\n\nSPWM波形：脉冲等高但宽度正弦变换。\n\n调制法：把想要的输出波形为调制信号，把接受调制的信号作载波，通过信号波的调制得到想要的PWM波，单极性和双极性要想改变输出电压和频率就只需改信号波和载波的电压和频率。\n\n调制方式：异步调制：载波信号与调制信号不保持同步，载波比（N=载波频率/信号波频率）会变化，开关频率低和高时采用。\n\n​     同步调制：变频时载波与信号波保持同步，载波比为常数\n\nPWM整流电路控制方法：功率因数接近1，分为直接电流控制（引入交流电流反馈，采用滞环电流比较，结构简单，电流响应快，鲁棒性好）和间接电流控制（也叫相位和幅值控制，未引入交流电流反馈，输入电流和电压同相位，功率因数为1.）。\n\n \n\n \n\n## 四：电分\n\n电力网：一级输电网：330kv及以上的电网，把远处发电厂的电能送到负荷中心。\n\n​    二级输电网：110-220kv，连接区域性的发电厂和大用户；\n\n​    配电网：向中等用户和小用户供电的网络，35KV为高压配电网，10KV为中压配电网，1KV以下的为低压配电网。\n\n联合电力系统优点：采用高效率大容量机组可以减少备用容量并提高经济型，合理利用资源，提高供电可靠性（系统越大，抗干扰能力越强）\n\n电能特点：不能大量储存，同时性，传输方便，转换效率高，可控性强。\n\n电力系统运行基本要求：保证运行的安全可靠性，保证良好的电能质量（电压，频率，波形），保证系统运行的经济性，满足节能与环保的要求。\n\n衡量电能质量：电压偏差：35KV及以上，正负偏差绝对值之和不大于10%；\n\n​            10KV及以下三相系统，不超过正负7%；\n\n​            220V单项供电系统，-10%-+7%。\n\n​       电压允许波动和闪变：电压波动允许值：10KV及以下：2.5%\n\n​                         35-110KV：2%\n\n​                         220KV及以上：1.6%\n\n​       谐波：非线性元件造成，会造成变压器由于铁心损耗加大而过热、电动机过热和转矩下降、中心线和补偿电容器过热、增加了电网能量损耗并降低了许多设备的寿命。\n\n​       三相不平衡度：会导致负序电流和零序电流的产生，使线路和变压器有功损耗增大，线路压降增大，电动机效率降低。\n\n​       频率偏差：装机容量为3000MW及以上的电网，频率差不超过正负0.2HZ；装机容量3000MW以下的电网，不超过正负0.5HZ。\n\n​       暂态过电压：持续时间较长的不（弱）衰减的振荡过电压，包括工频过电压和谐振过电压。\n\n​       瞬态过电压：持续时间短，包括操作过电压和雷电过电压。\n\n电力系统运行经济性：煤耗率和网损率，可以通过发电厂间的功率经济调度、提高发电厂本身效率、减少厂用电、降低电网能量损耗、形成联合电力系统等来提高经济性。\n\n电网接线要求：必须满足运行可靠性，能灵活适应各种运行方式，力求经济型。\n\n无备用接线：放射式，干线式，链式，适用于三级负荷。\n\n有备用接线：双回路接线，环式，两端供电，适用于高压和重要负荷。\n\n我国电力系统交流电压（线电压）等级：低压（1KV及以下）,中压（3KV,6KV,10KV，20KV）,高压（35KV,66KV,110KV,220KV）,超高压（330KV,500KV,750KV）,特高压（1000KV）。\n\n电气设备额定电压：线电压：Un\n\n发电机：1.05Un\n\n​         变压器：一次侧额定电压：与发电机直接相连：1.05Un；\n\n​                     与线路相连：Un；\n\n​             二次侧额定电压：与长线路相连：1.1Un；\n\n​                     与短线路或负载连接：1.05Un。\n\n电力系统负荷：一级负荷：中断供电会造成人身事故、设备损坏、人民生活混乱的用户（负荷），不允许停电，有两个或两个以上独立电源供电且有自备电源；\n\n​       二级负荷：中断供电会造成大量减产，人民生活会受到较大影响，尽量不停电，重要性低于一级；\n\n​       三级负荷：一、二级以外的负荷，可根据需要停电。\n\n发电负荷=厂用电+供电负荷（=网络损耗+综合用电负荷）\n\n日负荷曲线用于安排日发电计划，年最大负荷曲线用于安排发电设备检修计划及发电机组的新建与扩建，年持续负荷曲线用于安排发电计划及可靠性估计并计算耗电量。\n\n中性点接地：中性点有效接地：大电流接地系统，110KV及以上常用，有中性点直接接地和经小电阻接地，零序电抗与正序电抗比值小于等于4-5，该系统供电可靠性和稳定性低，对通信干扰大，但过电压和绝缘水平高，继电保护更灵敏可靠；\n\n​      中性点非有效接地：小电流接地系统，35KV及以下常用，有中性点不接地、中性点经消弧线圈接地（消弧线圈常用过补偿即1/wL>3wC，可靠性最高，少用欠补偿，不用全补偿）和中性点经高阻抗接地，发生接地时仍可运行1-2小时，该系统优缺点与大电流接地系统相反。\n\n分裂导线作用：抑制电晕放电（主要），增大等效半径，减小导线表面电荷密度，减小线路电抗，加大线路电容，降低线路波阻抗，提高输电线路自然功率（线路消耗无功与吸收的相同时的功率），有利于电力系统运行的稳定性。220KV采用2分裂，500KV采用3、4或6分裂，1000KV采用8分裂。\n\n电力线路参数：电阻R反应电力系统的发热效应，电抗X反映线路的磁场效应，电导G反映线路的电晕和泄漏现象，电纳B反映线路的电场效应。\n\n影响导体电阻大小因素：导线材料即电阻率（正比），导电部分截面积（负相关），导线长度（正相关），温度（对金属是正相关），通交流时比通直流电阻略大，同等条件下架空线电阻比电缆小与电流电压频率等电气量无关。\n\n影响电抗大小因素：电源频率（正相关），导线间距（正相关），导线等效半径（负相关），导线的相对磁导率（正相关），分裂导线数（负相关，实际运用中超过3-4根时，电抗下降渐渐饱和，所以一般取2-4根为宜）\n\n自然功率：线路末端接的负载是波阻抗时，该负荷消耗的功率。当输送功率为自然功率时，沿线各点电压和功率的有效值分别相等，而且同一点的电压电流相位相同即线路中各点无功功率都等于0，输出功率大于自然功率时，线路末端电压低于首端，反之高于首端，超高压输电线路近似于无损线路。\n\n变压器参数：电阻主要取决于变压器短路损耗（主要是铜损）；\n\n​      电抗主要取决于变压器短路电压百分比（漏磁无功损耗）；\n\n​      电导对应的是变压器的铁损（近似等于空载损耗）；\n\n​      电纳主要取决于变压器空载电流或空载电流百分数（励磁无功损耗）\n\n变压器短路实验：测量短路损耗（铜损）和短路电压；\n\n变压器空载实验：测量空载损耗（铁损）和空载电流。\n\n发电机电抗：同步电抗XG（稳态计算），暂态电抗XG’和次暂态电抗XG’’（暂态分析）\n\n标幺值不需归算，可简化计算。\n\n稳态分析多用精确计算，变比用变压器的额定变比或实际变比；\n\n暂态分析多用近似计算，变比用变压器的平均额定变比（1.5Un）。\n\n潮流分布：功率和电压的分布，主要取决于负荷分布、电力网参数以及和供电电源间的关系。\n\n潮流计算：包括功率的大小、方向和损耗计算以及电压降落、电压大小和相位计算，数学模型为非线性，其目的有检查是否过负荷及应对措施、检查电压是否满足电能质量需求、帮助我们正确选择接线方式并合理调整负荷来保障系统安全可靠运行、正确选择电气设备与导线截面积以及为电力规划和扩建提供依据和各类计算提供数据。\n\n功率损耗：△S=(P²+Q²)/U²·(R+jX)\n\n电压降落：△U=（PR+QX）/U（纵分量）\n\n电压相位判断：δU=（PX-QR）/U（横分量）\n\n无功功率总是从电压高的位置流向电压低的位置；\n\n有功功率总是从电压相位超前的位置流向电压相位滞后的位置。\n\n输电线路最大传输功率与始、末两端电压的乘积成正比，与线路电抗成反比，线路可以通过提高线路电压等级或者较少线路电抗（采用分裂导线，串联电容器）来提高最大传输功率。\n\n变压器导纳支路（Г型等值电路中连接两边的线路）为感性，电力线路的导纳支路（竖着的）为容性。\n\n通常选择无功分点为功率分点，无功分点往往是电压最低点。\n\n有功功率损耗最小时的功率分布为经济功率分布。\n\n线路上的功率的自然分布与其阻抗共轭值（或阻抗）成反比。\n\n潮流的调控：串联电容（抵偿线路感抗，转移重载线路功率），串联电抗（限流，避免该线路过载，但会增加电压损耗，一般不用），串联加压器（产生一环流或强制循环功率，纵向附加电势产生其无功部分，横向产生有功部分）\n\n计算机潮流计算：高斯赛德尔迭代法（收敛速度和计算速度最慢，占内存最小，迭代次数最多，每次迭代时间最短，无雅可比，对初值无要求）→\n\n阻抗法（内存大，已淘汰）→\n\n牛顿拉夫逊法（平方收敛最快、占内存最大、迭代次数最少、每次迭代时间最长、有雅可比、计算速度较快，对初值要求严格）→\n\nP-Q分解法（线性收敛较快，占内存较大，迭代次数较少，每次迭代时间较长，计算速度比牛拉法快，有雅可比矩阵变换的低阶常数矩阵，对初值要求严格，电抗远大于电阻）\n\n三种方法精度取决于收敛判据，判据相同时，精度一致。\n\n节点导纳矩阵：稀疏性，对称性，满秩性=非奇异矩阵。\n\n节点阻抗矩阵：密集性，对称性，满秩性=非奇异矩阵。\n\nPQ节点：已知输入 P、Q，求U、δ，通常变电所母线和大部分节点都是该点；\n\nPV节点：已知输入P、U，求Q、δ，通常选有一定无功储备的发电机母线或变电所所有无功补偿设备的母线作PV节点，可有可无，无功越限可变为PQ节点；\n\n平衡节点：已知U、δ，求P、Q，在计算中必须有且只有一个，不参与迭代，一般选择担任调频调压的某一发电厂或者出线多、靠近电网中心的发电厂母线。\n\n频率变化危害：低频运行时，发电机端电压降低，需增加励磁电流，降低所发功率，还会使磁通密度增大，增大了变压器铁损和励磁电流，降低所带负荷，无功负荷增大。\n\n负荷变动：第一种（高频）：变化幅度小，周期短，有很大的偶然性；\n\n​     第二种（中频）：变化幅度较大，周期较长，一般是冲击性负荷（电炉，压延机械，电气机车等）；\n\n​     第三种（低频）：变动幅度最大，周期最短，一般是由生活、生产、气象变化引起的可预见的负荷变动。\n\n频率调整：一次调频：由发电机组的调速器进行，应对第一种负荷变动，有差；\n\n​     二次调频：由发电机组的调频器进行，应对第二种负荷变动，无差；\n\n​     三次调频：在有功平衡的基础上，按最优化的原则在各发电厂间分配，应对第三种负荷变动。\n\n备用容量：热备用：负荷备用（最大负荷的2%-5%），事故备用（最大负荷的5%-10%）的一部分；\n\n​     冷备用：事故备用的一部分，检修备用（视需要而定，可不装），国民经济备用（最大负荷3%-5%）\n\n有功功率最优分配：有功功率电源的最优组合（冷备用）：机组的最优组合顺序；\n\n​                         机组的最优组合数量；\n\n​                         机组的最优开停时间；\n\n​         有功功率负荷的最优分配（热备用）：等耗量微增率准则。\n\n机组组合：枯水期：大型水电厂担任主调频，效率低的火电厂辅助调频，优先用各电厂强迫功率发电\n\n​     丰水期：中温中压火电厂调频，抽水蓄能电厂也可参加调频，水电厂和大型火电厂带稳定负荷。\n\n比耗量：单位时间内输入能量与输出功率的比值。\n\n耗量微增率：单位时间输入能量微增量与输出功率微增量的比值，越小越好。\n\n等耗量微增率准则：为使总耗量最小，应按相等的耗量微增率在发电设备和发电厂之间分配负荷。\n\n系统频率下降时，负荷吸收的有功成比例自动减少，反之增大。\n\n发电机调差系数越小，频率偏移越小；系统单位调节功率越大，负荷增减引起的频率变化越小越稳定。\n\n负荷增加，频率下降，调频能力变差，当所有发电机满载时负荷增加会使频率严重下降。\n\n二次调频：比例调节（不能无差），微分调节（在初始阶段减缓频率下降，但不能无差），积分调节（可以无差）\n\n调频厂要求：有足够可调容量，有一定调整速度，符合经济性。\n\n无功负荷主要为异步电动机。\n\n线路中并联电纳上的无功损耗也称充电损耗，与电压平方成正比，呈容性；串联电抗上的无功损耗与电流（或功率）平方成正比，与电压平方成反比，呈感性。\n\n<100km的220kv线路消耗感性无功，300km左右的220kv线路呈阻性，>300km的线路呈容性。\n\n无功电源：发电机：唯一的有功电源，最基本的无功电源；\n\n调相机：像空载运行的同步电动机，加大励磁电流，增大磁势，电势也增大，端电压不变，供给感性无功，减小电流则相反，一般接在负荷中心处，给负荷直接供电，有正调节效应，连续调节；\n\n静电电容器：只能向系统供给无功，电压下降供给无功也下降，有负调节效应，不可连续调节；\n\n静止补偿器：SVC，由发出无功的电容支路和控制回路组成，发出的无功与电压平方成正比，能平滑的改变无功，能分相补偿，受电压水平限制，可解在低压侧，也可通过升压变接在高压线路，可分为晶闸管控制电抗器型（TCR）、晶闸管开关电容器型（TSC）、饱和电抗型（SR）。\n\n​      TCR：连续调节，高次谐波含量高，正调节效应；\n\n​      TSC：不能连续调节，无高次谐波，负调节效应；\n\n​      SR：连续调节，灵活性差，正调节，高次谐波少。\n\n静止同步补偿器：STATCOM，有源元件，发出无功不受电压限制，调节效果比静止无功补偿器更好，响应速度更快，运行范围更宽，谐波含量更少。\n\n无功功率备用容量一般取最大无功负荷的7%-8%。\n\n系统满足无功功率平衡和分布合理才能使电压满足条件。\n\n提高负荷自然功率因数：电机负荷率越低，功率因数越低，限制电动机空载运行；\n\n​           不使电动机的容量过多超过被拖动的机械所需功率；\n\n​           以同步电动机代替异步电动机；\n\n​           将绕线式异步电动机同化，即在转子绕组中通直流励磁。\n\n等网损微增率准则：在有功负荷分布已确定的前提下，调整无功电源之间的负荷        分布，使有功网损达到最小，此时无功电源最优分布。\n\n无功负荷最优补偿：最优补偿容量的确定，最优补偿设备的分布，最优补偿顺序的选择。\n\n最优网损微增率准则：也称无功功率经济当量，只应在网损微增率具有负值且小于最优网损微增率的节点设置无功补偿装置。\n\n造成电压偏移原因：设备及线路压降，负荷波动，运行方式改变，无功不足或过剩。\n\n低电压影响：异步电动机转差率增大，输出转矩降低或定子电流增大，温升增加，效率降低，功率迅速减少，电机起动过程增加；电热、照明设备效率降低；网损增加，降低系统运行稳定性。\n\n过电压影响：电气设备绝缘受损，超高压网络产生电晕损耗。\n\n限制电压波动：由大容量变电站以专用母线或线路向冲击性负荷供电；在波动点与电源间设置串联电容器（抵偿感抗，限制波动幅度）；在冲击性负荷附近设置调相机（供给波动的无功），并串联电抗器（维持公共母线电压）；设置静止补偿器（饱和型电抗器最好，可完全消除电压波动）。\n\n中枢点：区域性水火电厂高压母线，枢纽变电所二次母线，有大量负荷的发电机母线。\n\n中枢点调压方式：逆调压：1-1.05Un，负荷高峰期调高电压，低谷期调低，需装设调相机、静止补偿器、有载调压变压器等设备，设备要求高，适用于负荷变动大、距中枢点远、负荷变化规律大致相同、对电压质量要求高的电网；\n\n​        恒调压：1.02-1.05Un.任何负荷时都维持在一个范围，装设有载调压变压器和并联电力电容器，调压设备要求一般，适用于负荷变动和电压损耗小的电网；\n\n​        顺调压：1.025-1.075Un，负荷高峰调低，低谷调高，一般不装特殊调压装备，设备要求低，适用于负荷变动小距离中枢点近且允许电压偏移较大的电网。\n\n调压措施：调节励磁电流（最经济，大电网不适用，逆调压）；\n\n​     适当选择变压器变比（改变无功分布，有载可逆调压，无励磁不可）；\n\n​     用无功补偿调压（优先，并联电抗，静电电容器和调相机，可逆调）；\n\n​     改变输电线路参数（串联电容用于110KV及以下且功率因数低，负荷变化大的场合，很少用，若用于220KV及以上，作用是提高输送容量和系统运行稳定性）。\n\n**调压原则：分层分区，就地平衡，不可集中补偿。**\n\n**调频即可集中，又可分区。**\n\n故障：短路故障（横向故障）：接地短路：单相接地短路（占大部分）；\n\n​                   两相接地短路；\n\n​              相间短路：两相短路；\n\n​                   三相短路（对称短路，危害最严重）；\n\n   断线故障（纵向故障）：一相断线；\n\n​              两相断线；\n\n​              非同期合闸。\n\n短路现象：系统总阻抗大大减小，电流剧烈增加，电压大幅下降。\n\n短路危害限制：限制短路电流数值（串联限流电抗器等）；限制短路电流存在时间（继电保护切除故障）；采用继电保护和重合闸配合。\n\n短路计算基本假设：不计磁路饱和，对称三相系统，各元件不计电阻，金属性过渡电阻为零，所有发电机交直轴各自对称且电势相位相同，只考虑电磁暂态过程，变压器的励磁支路忽略不计并用一个漏抗支路表示，输电线路考虑分布电容的话用T型或π行等值电路表示，不考虑就用一个电抗表示，电抗器用一个等值电抗表示。\n\n无限大容量电源：当许多有限容量的发电机并联运行，等值电源内阻抗不超过短路回路总阻抗的5%-10%，就可看作无限大功率电源；或者电源距短路点很远时，标幺值大于3，可看作无限大功率电源。内阻抗为零，频率和电压恒定，电源功率无限大且恒定，短路比和惯性时间常数无穷大。\n\n短路冲击电流：在最严重短路情况下短路电流的最大瞬时值，用于检验电气设备和载流导体的动稳定度。\n\n短路电流最大有效值：出现在短路后第一个周期，用于检验断路器开断能力。\n\n短路容量（短路功率）：短路功率标幺值与短路电流标幺值相等，勇于检验断路器切断能力。\n\n理想同步电机忽略磁路饱和和涡流、磁滞的影响，可认为电路线性，漏抗为常数。\n\n同步发电机定子绕组气隙与电感成反比，转子绕组之间和隐极机的定子绕组之间自感与互感系数都为常数，其余几种情况皆为周期性变化。\n\n“Park”变换：将abc坐标系统的量经过派克变换，转换为dp0系统的另外三个量（直轴，交轴，零轴分量（瞬时值，三相电流不平衡即何不为零时存在）），可分析同步和异步电机，也可分析暂态和稳态。\n\n​       规律：若iabc为正序基频交流，则idq为直流，i0=0；\n\n​          若iacb为直流，则idq为基频交流，i0=(ia+ib+ic)/3；\n\n​          若iabc为负序基频交流，则idq为2倍品交流，i0=0；\n\n​          若iabc为对称2倍频交流，则idq为基频交流，i0=0。\n\n同步发电机三相短路时，定子绕组电流中含有：基波周期分量（强制分量不衰减和自由分量衰减）；\n\n​                     直流分量（自由分量衰减）；\n\n倍频交流分量（d轴q轴磁阻相等时不存在）。\n\n​           转子绕组含有：基频分量，直流分量。\n\n发电机空载电势正比于直流励磁电流，在短路瞬间急剧增大；暂态电势与励磁绕组磁链成正比，短路瞬间不突变；交轴次暂态电势与励磁绕组磁链和直轴阻尼绕组磁链成正比，直轴次暂态电势与交轴阻尼绕组磁链成正比，都在短路瞬间不突变。\n\n短路电流基频交流电流的有效值也称起始次暂态电流。\n\n某支路电流分布系数等于网络对短路点的等值阻抗（输入阻抗）与该电源对短路点的转移阻抗之比。\n\n三相三线制系统，零序电流为零，三相四线制系统，可以有零序电流流过。\n\n正序电压越靠近电源越高，负序和零序电压越靠近短路点越高。\n\n短路点越靠近电源，短路电流越大。\n\n星型接线中性线中的零序电流为一相零序电流的3倍。\n\n架空线中的零序电抗远大于正序电抗。\n\n单相接地短路：假设发生在A相，Ufa=0，Ifb=Ifc=0,Ufb=Ufc=√3原相电压，\n\n​       Ufa1+Ufa2+Ufa0=0,Ifa1=Ifa2=Ifa0=3Ia1,负荷序网串联。\n\n两相短路：假设发生在BC相，Ifb=Ifc=√3Ia1,Ifa=0,Ufb=Ufc=Ufa/2=Ua/2,Ia0=0\n\n​     负荷序网为正负序并联，无零序分量,X1>X2时，Ik(2)可能大于Ik(3),X1=X2时，Ik(2)=√3/2Ik(3)。\n\n两相短路接地：Ia1+Ia2+Ia0=0,Ua1=Ua2=Ua0=Ua/3,Ub=Uc=0,Ifa=0,负荷序网并联（上述参数均为相量值）。\n\n正序等效定则：在简单不对称的情况下，短路点电流的正序分量与在短路点每一相中加入附加电抗而发生三相短路时的电流相等。\n\n​       附加电抗：三相短路：0；\n\n​            两相短路接地：X2Σ//X0Σ；\n\n​            两相短路：X2Σ；\n\n​            单相接地短路：X2Σ+X0Σ。\n\n​       比例系数：三：1；\n\n​            两接地：√3√（1-（X2ΣX0Σ）/(X2Σ+X0Σ)²）；\n\n​            两：√3；\n\n​            单接地：3.\n\n各种短路时参数比较：附加电抗：X(1)>X(2)>X(1,1)>X(3);\n\n​          正序电流：与电抗相反；\n\n​          正序电压：与电抗相同；\n\n​          负序电流：I(2)>I(1,1)>I(1)>I(3)=0；\n\n​          负序电压：与负序电流相同；\n\n​          零序电流：I(1)>I(1,1)>I(2)=I(3)=0；\n\n​          零序电压：与零序电流相同。\n\n一相断线：Ia1+Ia2+Ia0=0,△Ua1=△Ua2=△Ua0,△Ub=△Uc,负荷序网为并联；\n\n两相断线：Ib=Ic=0,Ua=Ua1+Ua2+Ua0=0,Ia1=Ia2=Ia0,负荷序网串联。\n\n电力系统稳定性：电力系统受到一定扰动后能否继续运行的能力，按照运行参数可分为电压稳定（受到扰动后不发生电压崩溃）、频率稳定（受到有功扰动后不发生频率崩溃）、功角稳定（受到扰动后发电机转速变化，若一段时间后能再同步，电力系统便稳定）；按受到扰动可分为**静态稳定**（受到小扰动后各发电机能保持同步，不会产生振荡和非周期性失步）和**动态（暂态）稳定**（受到较大扰动后在自动调节和控制装置作用下达到新稳定，同步发电机同步）。\n\n系统中所有发电机处于同步运行（即并联运行的同步电机拥有相同电角速度）是电力系统正常运行的基本条件之一和重要标志。\n\n发电机无励磁调节：隐极机功率极限对应角为90°功率功角特性为正弦；凸极机功-角特性为非正弦，功率极限对应角小于90°；直接连接两个不变电势间任一点电压都随着两个电势间相角增大而减小，电气中点（振荡中心）变化幅度最大，若两个电势大幅度振荡，则相角为0或360是中点电压最高，180时最低。\n\n发电机励磁调节：功率极限和功率极限角都大于无励磁，调节能力越强，功率极限和功率极限角越大。\n\n稳定性分析：静态稳定分析（小干扰法），动态稳定分析（时域法，直接法（仅适用单机无限大系统））。\n\n静态稳定判据：dPe/dδ>0(即功率随功角增大而增大或功角特性增函数区间)和发电机正阻尼作用（若正阻尼过大，发电机转速下降，电网电压不稳），特征方程的根全部位于虚轴左侧（实部小于零）则稳定，有一个位于右侧就不稳。\n\n静态稳定储备系数：（静态稳定极限-发电机发出电磁功率）/电磁功率，系数越大越稳定，正常不小于15%-20%，特殊情况不小于10%。\n\n正常运行功角越小，整部功率系数越大，系统越稳定。\n\n提高系统静态稳定：根本措施为缩短电气距离即减小电气元件阻抗，方法如下：\n\n​         采用自动励磁调节装置（减小发电机电抗至0）；\n\n减小线路电抗（采用分裂导线或提高线路额定电压）；\n\n采用串联电容器补偿（补偿度Xc/Xl越大越稳定）；\n\n改善电力系统结构（增加回路数，加强系统内部联系，接入中间调相机）；\n\n应用直流输电和柔性交流输电装置；\n\n输电线并联电抗器补偿。\n\n系统电压稳定判据：dQ/dU<0即无功剩余与电压负相关。\n\n暂态发展过程：起始阶段（1s内，保护装置动作），中间阶段（5s左右，调节系统作用），后期阶段（几分钟）。\n\n等面积定则：转子在减速过程中减少的动能正好等于加速过程增加的动能。\n\n暂态稳定判据：转子切除角<极限切除角，实际加速面积<允许的减速面积，功角小于h点（近似180°）的功角，暂态就稳定。\n\n提高系统暂态稳定：根据等面积定则，减小不平衡功率，增大减速面积，减小加速面积，具体方法如下：\n\n​         快速切除故障（起决定性作用，提高发电机和负荷稳定性，增大暂稳极限）；\n\n​         应用自动重合闸（作用明显，重合闸成功率高，提高供电可靠性）；\n\n​         提高发电机输出的电磁功率（对发电机强行励磁，电气制动（故障后迅速投入电阻消耗有功，增大电磁功率），变压器 中性点经小电阻接地，强行串联电容补偿（抵消由于切除线 路而增大的线路电抗））；\n\n​         减少原动机输出的机械功率（快速关气门，连锁切除部分发电机（大大增大减速面积））；\n\n​         应用直流输电和柔性交流输电装置；\n\n​         提高静态稳定性的措施也有一定作用。\n\n\n\n## 五：继保\n\n电气一次设备：直接用于生产、输送和分配电能的高压电气设备（互感器是一次）。\n\n二次设备：对一次设备的工作进行测量、监视、控制、调节、保护及为运行、维护人员提供运行工况或生产指挥信号所需的低压电气设备（继电保护装置和直流电源是二次设备，但断路器是一次设备）。\n\n二次电路图分为集中式（归总式）二次电路图（各元件以集中形式和一次设备一起绘出），展开式二次电路图（只画二次设备）和安装图（用于实际装置，分为屏面布置图和安装接线图）。\n\n电力系统运行状态：正常运行：有功和无功平衡；\n\n​         不正常运行：过负荷，过电压，频率降低，系统振荡，小电流系统单相接地（可继续运行1-2小时）；\n\n​         故障：横向故障（短路），纵向故障（断线（非全相运行）），单相接地短路次数最多，三相短路危害最大。\n\n继电保护装置由测量比较元件、逻辑判断元件和执行输出元件构成。\n\n微机保护由模拟量输入系统、数据处理单元和数字量输入输出系统构成。\n\n继电保护分类：主保护：对快速性要求高，反应被保护元件本身的故障；\n\n后备保护：主保护或断路器拒动时的保护，对灵敏性要求高，\n\n分为：\n\n近后备保护（本元件主保护拒动时的另一套保护，不扩大故障范围，但不能对本地断路器起后备保护，需用断路器失灵保护），\n\n远后备保护（主保护或断路器拒动时，相邻电力设备对本地设备起后备保护作用，但会扩大故障范围）。\n\n电力系统中上下级电力元件保护范围必须存在重叠区，不在继电保护范围内的元件不允许投入使用，但重叠区越小越好。\n\n继电保护基本要求：选择性：尽量缩小停电范围，正确切除故障；\n\n​         速动性（快速性）：维持系统稳定性（决定性因素），故障切除越快，暂态稳定极限越高，故障切除时间=继电保护动作时间+断路器动作时间；\n\n​         灵敏性：对故障和不正常状态的反应能力，灵敏系数一般在1.2-2之间；\n\n​         可靠性：最根本的要求，分可信赖性（电网联系紧密即大容量系统时不拒动）和安全性（系统联系较弱即小容量系统不误动）。\n\n继电保护发展史：机电型→整流型→晶体管型→集成电路型→微机型。\n\n继电器：测量继电器：电流继电器，电压继电器，功率方向继电器，阻抗继电器，气体继电器；\n\n​    辅助继电器：时间继电器，中间继电器，信号继电器。\n\n电磁型继电器：动作：电磁转矩大于反作用力矩和摩擦力矩，动合（常开）触点闭合，动作电流为使其动作的最小电流，为Iact；\n\n​       返回：弹簧作用力矩大于电磁力矩和摩擦力矩，动合触点断开，返回电流为使其返回的最大电流，为Ire，返回系数=返回电流/动作电流，过量继电器返回系数小于1，欠量相反。\n\n过电压继电器：过量继电器，动作时动合触点闭合，动作电压为动作的最小电压，返回电压为返回的最大电压，返回系数小于1；\n\n低电压继电器：欠量继电器，动作时常闭触点闭合，返回断开，动作电压为动作的最大电压，返回电压为返回的最小电压，返回系数大于1。\n\n时间继电器：延时动作，瞬时返回。\n\n信号继电器：发信号指示并且自保持，需手动复归。\n\n中间继电器：触点容量大且数量多，可以短延时动作，可自保持保证可靠跳闸。\n\n最大运行方式：系统等效内阻抗最小即造成短路电流最大（三相短路，保证选择性而整定计算时用）的运行方式。\n\n最小运行方式：系统等效内阻抗最大即造成短路电流最小（两相短路，校验灵敏性时用）的运行方式。\n\n影响保护安装处短路电流：电力系统运行方式变化，不同的短路类型，短路点距电源距离，距离越远越小。\n\n整定计算时默认断路器0秒跳闸即忽略保护和断路器动作时间。\n\n整定计算用最大短路电流，优先保证选择性，灵敏度校验用最小短路电流，以保证灵敏性，整定值越大，灵敏度越低。\n\n瞬时电流速断保护（电流I段）：保证选择性和速动性，只反映相间短路不反映单相接地，一般作辅助保护，不作主保护，不能保护线路全长，最小保护范围不少于线路全长的15%，最小运行方式保护范围15%-20%，最大运行范围80%-85%；在系统运行方式变化很大时或被保护线路很短时，保护范围可能没有，只需II段和III段；当电网的终端线路上采用线路-变压器组接线方式时，可保护线路全长，无需II段；可靠系数1.2-1.3；\n\n限时电流速断保护（电流II段）：保护范围不超过下级I段（保证快速性），动作时限比下级I段大一个△t（0.3-0.5s）（牺牲快速性保证选择性），当整定值过大时，与下级II段配合（牺牲快速性保证灵敏性），一般作为主保护，但不作下一级后备保护；可靠系数1.1-1.2，灵敏度系数大于1.3-1.5（故障点的过度电阻会使短路电流减小）。\n\n定时限过电流保护（电流III段）：整定躲过最大负荷电流，整定值低，灵敏度高，整定值=可靠系数·负荷自启动系数1最大负荷电流/继电器返回系数，最大负荷电流<自启动电流<返回电流<动作电流，动作时限按阶梯原则配合（保证选择性），一般作本线路近后备，作下级线路远后备，在电网终端可作主保护；近后备灵敏度系数大于1.5，远后备大于1.2。\n\n三段式电流保护通常用于35KV及以下单侧电源辐射型电网。\n\n继保中的英文角标含义：OP（动作），re（返回），rel（可靠），sen（灵敏），Ik（短路电流），act（动作），set（整定），IL（负荷电流）。\n\n过量保护的可靠系数大于1，欠量保护小于1.\n\n电流保护接线：三相完全星形接线：可以反映各种相间和接地短路，但不经济，一般110KV及以上（大电流接地系统）采用，广泛用于发电机、变压器等贵重设备，可靠性和灵敏性高；串联线路上发生跨线两点接地时更适合用。\n\n​       两相不完全星形接线：一般用于反映相间短路，不能反映单相接地，适用于35KV及以下电网；并联线路上发生跨线两点接地时更适合用。\n\n变压器△侧两相短路，Y侧最大相（）为滞后（30°）相；Y侧两相短路，△侧最大相为超前相，为了提高III段灵敏度，采用两相三继电器，灵敏度高一倍。\n\n电流电压联合速断：出口用“或”逻辑，保护范围有所改善；\n\n电流电压连锁速断：出口用“与”逻辑，最大运行方式电压速断保证选择型，最小运行方式电流速断保证选择性，电压速断和电流速断保护范围相反。\n\n方向性电流保护：功率方向元件是根据短路时测得电压与电流的夹角来判别方向。\n\n功率方向元件动作判据：-90°<Arg(Um/Im)+α<90° α:内角，最灵敏角相反数。\n\n功率方向元件存在电压死区（本线路首端附近短路时，元件测得电压幅值过小而拒动），无电流死区，可采用90°接线（相电流对线电压）消除两相短路的死区，采用记忆元件（电感电容形成串联谐振）消除三相短路死区。\n\n零序电流保护：过量保护，I段（灵敏I段躲过接地短路或三相不同时合闸是的最大零序电流，不灵敏I段躲过短时非全相运行又有振荡的最大零序电流）和II段为主保护，III段为后背保护，零序功率方向元件无死区，故障点零序电流滞后零序电压一个零序阻抗角，故障线路保护安装处零序电流超前零序电压180°-零序阻抗角；零序电压分布取决于中性点接地变压器的数目和位置，在故障点电压最大。\n\n距离保护：欠量保护，不受系统运行方式影响，本质为阻抗保护，可作为110KV线路主保护和220KV及以上后备保护，有三种常用圆特性，如全阻抗圆（无方向性，用于单侧电源供电），偏移圆（不完全方向性，无死区），方向圆（完全方向性，有死区，可采用记忆作用和引入非故障相电压消除），测量阻抗为正序阻抗。\n\n距离保护组成：起动回路：判别电力系统是否发生故障，作远后备时应灵敏快速动作；\n\n​       测量回路：是距离保护的核心，故障时快速测量出结果；\n\n​       逻辑回路：实现各部分的逻辑配合及各段保护的时间配合；\n\n​       出口回路：包括跳闸出口和信号出口；\n\n​       TV二次断线闭锁回路：TV二次断线时防止距离保护误动；\n\n​       振荡闭锁回路：防止系统振荡时距离保护误动。\n\n电抗变换器：副边接大阻抗负载，相当于开路运行，严禁短路，可抑制直流分量，放大高频分量。\n\n距离保护接线：相间距离保护：0°接线（相电压对相电流），可反应三相短路，两相短路，两相接地短路，但不能反应单相接地；\n\n​       接地距离保护：零序电流补偿方式接线，反应单相接地短路，两相接地短路，三相短路，但不能反应两相短路。\n\n距离保护影响因素：过渡电阻：保护范围下降，对受电端呈感性，使保护拒动，对送电端呈容性，可能越级跳闸，本保护拒动，反方向误动，可用增大整定值或瞬时测定装置。\n\n​         TV二次断线：保护误动，可增加断线闭锁回路。\n\n​         振荡：可能误动，整定值越大受影响越严重，可用负序和零序电流分量元件启动保护或测量阻抗变化速度的振荡闭锁回路；\n\n​         分支系数：助增电源（保护范围减小）使保护拒动，外汲电流（保护范围增大）使保护误动；\n\n​         还有串联补偿电容和非工频分量的影响。\n\n纵联保护：220KV及以上线路必须采用，作主保护，不能作后备保护，要求全线速动，按信息通道不同分为：导引线（10Km以下），光纤（抗干扰强），\n\n​                 电力线载波（高频保护），微波（需中继站）；\n\n​       按保护原理分：纵联电流差动（纵差保护，直接比较，只做主保护，比较相量，主要用光纤），方向纵联（只作主保护），纵联距离（可作主保护和后备保护），纵联电流相差（只作主保护）（后三种都比较开关量，主要用电力线载波，都用闭锁，间接比较）。\n\n纵联电流差动保护：比较保护线路本端和对端电流幅值及相位，建立在KCL之上，分相差动，有自选相和比率制动，广泛用于发电机、变压器等贵重设备及母线保护，多用光纤（缺点只有贵，需要中继）。\n\n影响电流差动（纵差）因素：电流互感器的误差即不平衡电流（用D级电流互感器），输电线路的分布电容电流（测量电压补偿电容电流），过度电阻，导引线的阻抗、分布电容、故障和感应过电压等。\n\n高频保护（电力线载波）：用50kHZ-400kHZ的高频信号，频率过低会受工频干扰太大，频率过高会增大损耗，纵联方向高频保护（比较两端功率方向），纵联距离高频保护（比较两端距离方向元件动作状态），纵联电流相差（比较线路两端电流相位），间接比较电气量。\n\n高频通道设备：高频阻波器（并联谐振，通工频，阻高频进入母线），耦合电容器（通高频，阻工频进入二次回路），连接滤波器（与耦合电容器构成带通滤波器，实现波阻抗的匹配，隔离高压），信号分为：闭锁信号，允许信号，跳闸信号。\n\n高频通道耦合：相-地耦合：本线路故障时易堵塞；\n\n​       相-相耦合：不易堵塞，单相接地短路时不会堵塞。\n\n纵联闭锁式方向高频保护：相-地制高频通道，短路时先发闭锁信号，功率方向元件判为正停信，保护动作，有时间元件，高频通道破坏时，区内故障正常动作，区外故障远故障端保护误动，振荡时不误动，无死区，单频制。\n\n纵联闭锁式距离高频保护：即可作主保护，也可作后备保护，受振荡影响。\n\n纵联电流相差高频保护：只测电流，不测电压，单频制，不受振荡和TV二次断线影响，外部短路收到连续高频信号，不动作，内部短路收到间断高频信号，间断角大，动作速度较慢。\n\n纵联允许式高频保护：双频制，相-相制，不易误动，易拒动。\n\n自动重合闸：二次设备，0.5-1.5s后合闸，，15-25s后自动复归，1kv及以上线路就应装设，对瞬时性故障（闪络，短时短路等）可迅速恢复供电，提高可靠性，可提高双侧电源线路并列运行的暂态稳定性，可纠正误跳闸；对永久性故障（断线等）不利，再次受到短路电流冲击，短路器工作条件恶劣。\n\n自动重合闸分类：三相重合闸：110KV及以下架空线，先跳三相合三相，永久性再跳三相，应对瞬时三相故障。\n\n​        单相重合闸：220KV及以上架空线，先跳单相再合单相，永久性再跳三相，应对瞬时单相故障，可分相跳。\n\n综合重合闸：220KV及以上架空线，单相故障用单相重合闸，相间故障用三相重合闸，可分相跳闸。\n\n停用重合闸方式：任何故障跳三相，不重合（重合闸闭锁），需手动操作，带电作业或非同期并网时使用。\n\n自动重合闸端子：N端子对应零序不灵敏I段，接入非全相运行中仍能继续工作的保护，M端子对应零序灵敏I段，接入非全相运行中可能误动的保护。\n\n重合闸起动：不对应起动：可纠正偷跳，110KV及以下采用，220KV采用和保护启动一起；\n\n​      保护起动：500KV及以上。\n\n双侧电源线路的三相一次重合闸：无压和同步检定：先检无压再检同期，检无压侧也需检同期；\n\n​               电流检定：双回线路，简单快速；\n\n​               快速自动重合闸：不需检同期，全线速动，贵；\n\n​               非同期合闸：冲击电流大。\n\n重合闸前加速：快速切除瞬时故障，保证母线电压有0.6-0.7倍额定电压，装设于线路前端，适用于35KV及以下发电厂或变电站引出的直配线，第一次动作无选择性，主要针对瞬时性故障。\n\n重合闸后加速：加速第II段，第一次有选择性，快速切除永久性故障，适用于110KV及以上电网或重要负荷，主要针对永久性故障。\n\n变压器保护：小容量：电流速断保护，瓦斯保护（油箱内）；\n\n​      大容量：纵联电流差动保护（单台10MVA及以上或并列运行6MVA及以上装设），瓦斯保护。\n\n励磁涌流：暂态不平衡电流，空载变压器投入或短路故障切除时产生，合闸角为0或π时最大，含有大量非周期分量和二次谐波，涌流越大，间断角越小，非周期分量越大，二次谐波越小。\n\n防止励磁涌流：采用具有速饱和铁心的差动继电器，利用二次谐波制动，利用波形间断制动，波形不对称制动。\n\n比率制动：动作电流随不平衡电流的增大而增大。\n\n瓦斯保护：装在0.8MVA户外变压器或0.4MVA室内变压器，分为轻瓦斯（轻微故障动作于信号，辅助保护）和重瓦斯（严重故障动作于跳闸，主保护）。\n\n变压器接地保护：有分级绝缘变压器（110KV及以上采用，零序电流保护）和全绝缘变压器（110KV以下采用，零序电压保护），500KV及以上必须中性点直接接地（中性线不允许装接地刀闸），110KV及以上接地刀闸可合可不合。\n\n无放电间隙的多并运分级变先切中性点不直接接地，有放电间隙就先切直接接地。\n\n母线保护：110KV及以上线路和35KV重要线路必须装设，保护范围包括各类保护装置，母线保护TA应尽量靠近线路侧。\n\n断路器失灵保护：断路器拒动时，快速切除于拒动短路器同一母线上的其他断路器，是近后备保护，重要的110KV和220KV及以上线路必须装设。\n\n \n\n## 六：发电厂\n\n厂用电率：凝气式火电（5%-8%），热电厂（8%-10%），水电（0.5%-1%）\n\n变电站：枢纽变电站（330KV及以上，停电会导致系统瓦解），中间变电站（220KV-330KV，停电引起系统解列），地区变电站（110-220KV，停电造成城市供电紊乱），企业变电站（35-220KV，1-2回进线），终端变电站（高压侧110KV或35KV，低压侧6-10KV，停电只使所供电用户停电）。\n\n倒闸操作：断电时：断开分段断路器→断开线路断路器→断开线路侧隔离开关→断开母线侧隔离开关→合上接地刀闸；\n\n​     送电时：断开接地刀闸→合上母线侧隔离开关→合上线路侧隔离开关→合上线路断路器→合上分段断路器。\n\n电气主接线：基本要求：可靠性（最基本），灵活性，经济型\n\n有母线：单母线接线：适用6-220KV只有一台发电机或变压器时，6-10KV出线不多于5回，36-63KV出线不多于3回，110-220KV出线不多于2回。\n\n​    单母线分段：分2-3段，减小了停电范围，适用6-10KV出线6回及以上，每段母线发电机容量12MW及以下，35-63KV出线4-8回，110-220KV出线3-4回。\n\n​    单母分段带旁路：可不停电检修断路器，适用110KV及以上，有SF6断路器及GIS或双回路供电时可不装旁路母线。\n\n​    双母接线：双母互为备用，可不停电检修母线，适用于进出线回数较多、容量较大、出线带电抗器（母线与线路侧隔离开关之间）的6-10KV，36-63KV出线超过8回或连接负荷较大，110KV出线6回及以上，220KV出线4回及以上。\n\n​    双母分段：可不停电检修母线，适用于220KV10-14回出线用三分段，220KV出线15回及以上用四分段，330-500KV出线6回及以上采用四分段。\n\n​    双母分段带旁路：可不停电检修母线与断路器，适用于对供电可靠性有特殊需要的场合。\n\n​    3/2断路器接线：可同时不停电检修多台断路器，可不停电检修母线，电源与出线数最好相同，适用于大型电厂和变电站220KV及以上进出线6回及以上。\n\n​    变压器-母线组接线：适用于长距离大容量输电线路，前提是主变压器质量可靠，故障率低的变电站。\n\n​      无母线：单元接线：大型机组广泛采用，发电机出口短路电流比有母线小，发电机单机容量不大且备用容量允许时可用扩大单元接线（分裂低压绕组变压器）。\n\n​          内桥接线：所用断路器最少，桥断路器靠近电源，线路检修方便，变压器投切复杂，适用于只有两台变压器和两条线路且线路较长的小容量发电厂或变电站，穿越功率小。\n\n​          外桥接线：所用断路器最少，桥断路器靠近线路，线路检修复杂，变压器投切方便，适用于只有两台变压器和两条线路且线路较短的小容量发电厂或变电站，穿越功率大。\n\n​          角型接线：角数=进出线总回路数=断路器数，最多6角，一般3-4角，可不停电检修断路器，适用于出线3-5回且一次建成无需扩建的110KV及以上配电装置。\n\n可靠性：有母线：单母接线<单母分段<单母分段带旁路<双母线<双母分段带旁路<双母分段<3/2短路器接线；\n\n​    无母线：单元接线<桥型接线<角型接线（相当于双母线）\n\n限制短路电流：根本上就是增大电源至短路点的等效阻抗即减少并列，增加串联；\n\n​       选择合理的电气主接线和运行方式：大容量发电机用单元接线等；\n\n​       装设限流电抗器：普通电抗器和分裂电抗器（正常运行时电压损耗小1/4X，短路时电抗大3X，单臂X）；\n\n​       选择合适的变压器：容量选小些（短路容量少），高阻抗变压器，低压分裂绕组变压器（短路电抗大）。\n\n导体温升与电流平方和电阻呈正比，与散热系数呈反比。\n\n电气设备选择：按正常工作条件选额定电压和额定电流，再按短路情况校验热稳定和动稳定，电缆可不校验动稳定，电压互感器可不校验动、热稳定，有限流熔断器可不校验动、热稳定。\n\n互感器准确级越高，测量误差越小，精度越高，匝数补偿法可减小电流误差。\n\n最小安全净距：A值：最基本，A1（带电部分至接地部分），A2（不同相带电导体之间）；\n\n​       B值：B1（带电部分至栅状栅栏间，A1+750），B2（带电部分至网状栅栏间，A1+100）；\n\n​       C值：无遮拦裸导体至地面垂直净距（屋外A1+2300+200，屋内A1+2300）；\n\n​       D值：平行无遮拦裸导体之间水平净距（屋外A1+1800+200，屋内A1+1800）；\n\n​       E值：出线套管中心线至屋外路面距离（35KV及以下4000，60KV及以上A1+3500）。\n\n成套配电装置：低压配电屏（只作屋内），高压开关柜，SF6全封闭组合电器（GIS），成套变电站（只做屋外）。\n\n变压器散热：固体→固体（传导），固体→液体（对流），固体→气体（辐射，对流）。\n\n变压器过负荷：正常过负荷（有计划主动实施，不牺牲寿命），事故过负荷（急救过负荷，牺牲寿命）。\n\n三绕组容量比：只有100%/100%/100%，100%/100%/50%，100%/50%/100%三种。\n\n三绕组自耦变压器运行：纯自耦（只高中压间送电，降压型损耗小），纯变压（只高低压间送电或只中低压间送电）。\n\n126KV及以上，用SF6断路器，12-40.5KV用真空断路器。\n\n电压互感器接线：单相接线：相-地接线，测相电压，用于110-220KV，UN2=100V；\n\n​             相-相接线，测线电压，用于3-35KV，UN2=100V；\n\n​        不完全星形接线：测线电压，3-20KV，UN2=100V；\n\n​        星-星-开口三角接线：可测相电压和线电压\n\n三相五柱式，用于3-15KV，UN2=100V，UN1为线电压，辅助二次绕组100/3V；\n\n​                  三台单相三绕组，用于3-220KV，UN2=100/√3V，UN1为相电压，UN3=100/3V（小电流）或100V（大电流）；\n\n​                  三台单相三绕组电容式，用于110KV及以上，UN1为相电压，UN2=100/√3V,UN3=100V；\n\n​        三相三柱式：可测相电压，用于15KV及以下，UN1为线电压，UN2=200V,UN3=100/3V。\n\n\n\n## 七：高电压\n\n电气现象：弱电：极化，损耗，电导；\n\n​     强电：放电，闪络，击穿。\n\n击穿场强：均匀电厂中击穿电压与间隙距离之比，也称电气强度，绝缘强度。\n\n绝缘水平：设备出厂时保证承受的试验电压。\n\n电介质：非极性和弱极性，极性，离子性。\n\n相对介电常数：其越大极性越强，还与温度、频率有关，固体液体大于气体。\n\n极化：电子式极化（弹性，负温系数），离子式极化（弹性，正温系数），偶极子极化（非弹性，先正温后负温），夹层式极化（非弹性，只在低频或直流有）。\n\n电容器应选介电常数大的，其他设备应选介电常数小的，场强分布与介电常数成反比。\n\n金属导体主要为电子式电导，温度升高电导率下降，电阻增大；\n\n电介质主要为离子式电导，温度升高电导率指数上升，电阻减小。\n\n极化损耗主要由有损极化产生（交流时占大头），电导损耗由电导电流产生。\n\n介质损耗角正切值：与电压、电容、频率正相关，与功率因素角负相关，湿度影响大，介质受潮后损耗增大。\n\n带电粒子产生：碰撞电离（主要，平均自由行程越大，电离程度越高）光电离，热电离（先导，滑闪，电弧燃烧），表面电离。\n\n带电粒子消失：带电粒子定向运动，扩散，复合（会产生光电离），附着效应。\n\n自持放电起始电压小于击穿电压。\n\n巴申定律：均匀电场，提高气压或真空来提高击穿电压。\n\n汤逊理论：碰撞电离和表面电离是自持放电主要因素，用于均匀场、低气压、短气隙，受阴极材料影响。\n\n流注理论：碰撞电离和光电离主要影响，还强调空间电荷畸变电场作用，用于不均匀场、高气压、长气隙。\n\n均匀系数：均匀电场（f=1）,稍不均匀电场（f<2）,极不均匀电场（f>4）。\n\n电晕放电：极不均匀电场局部自持放电，曲率半径越小，起晕电压越低。\n\n电晕放电危害：能量效应，化学效应，电磁效应（超高压），噪声效应（特高压）。\n\n防晕措施：增大导线半径（对静态稳定不利），采用分裂导线（最有效），加装均压环，增大曲率半径。\n\n电晕可用于改善极不均匀电场分布，提高击穿电压，降低过电压幅值。\n\n棒-板气隙：正高负低是电晕，击穿电压反过来，棒棒击穿在中间，SF6有反常。\n\n提高气体电气强度：改善电场分布（改进电极形状，采用屏障），抑制电离（高气压减小电子平均自由行程来降低有效碰撞电离，高真空，SF6气体）。\n\n液体击穿：电击穿，气泡击穿，小桥击穿（非纯净液体）。\n\n对液体影响：杂质（最大），温度（负相关），电场均匀程度，油压，电压作用时间；可清除杂质或断小桥来提高击穿电压。\n\n固体：云母，玻璃，陶瓷，合成树脂（有机）。\n\n固体击穿：电击穿，热击穿，电化学击穿（电老化）。\n\n击穿电压影响因素：电压作用时间（负相关），温度（负相关），电场均匀程度和厚度（正相关），频率（负相关），电压种类（冲击>直流>工频>高频）\n\n组合绝缘：直流等效为电阻，交流等效为电容。\n\n绝缘子：用途分：线路绝缘子，支柱绝缘子，套管，瓷套；\n\n​    材料分：瓷绝缘子，玻璃绝缘子（自爆），复合绝缘子（有机材料憎水）。\n\n绝缘子片数：35KV(3片)，66KV(5片),110KV(7片),220KV(13片),330KV(19片),500KV(28片)。\n\n绝缘装置实际耐压能力取决于沿面闪络电压。\n\n强垂直分量（套管）有滑闪放电，减小比电容提高闪络电压；弱垂直分量（支柱绝缘子），闪络电压大点，随d增大提高，可改善电极形状提高。\n\n干闪电压>湿闪电压>污闪电压。\n\n绝缘缺陷：集中性（局部）：绝缘子开裂，局部磨损，气泡等；\n\n​     分布性（整体）：绝缘老化，受潮等；\n\n非破坏性实验：不能直接得出耐电强度，可带电；\n\n破坏性实验：耐压试验，在非破坏检验合格后进行。\n\n绝缘电阻和吸收比测量：绝缘电阻：加压60s后的数值；\n\n​           吸收比：60s和15s电阻比值，绝缘良好时远大于1，绝缘电阻大；绝缘不好时接近于1。\n\n​           可以发现绝缘受潮和贯穿性通道，不能发现局部缺陷和老化。\n\n泄漏电流测量：与绝缘电阻加压大小不同，原理一样，可发现不包括老化的整体缺陷以及尚未完全贯穿的集中性缺陷。\n\n介质损耗角正切测量：西林电桥：正接用于实验室，反接用于现场。\n\n​          值均随温度上升而增加，减小外界电磁场干扰可以加装屏蔽，远离干扰源，移相法。\n\n可发现受潮，绝缘老化，气泡，贯穿性通道，不能发现局部损坏和老化。\n\n局部放电测量：非电：噪声检测，光检测，化学分析，温度检测；\n\n​       电气：介质损耗，脉冲电流，特高频。\n\n​       可发现老化和局部缺陷。\n\n绝缘油性能检测：三比值法：C2H2/C2H4,CH4/H2,C2H4/C2H6。\n\n电压分布测量：绝缘子串电压分布：两头大，中间小，靠近导线处最大。\n\n工频耐压：静电电压表、球隙、电容分压器和电压互感器测量，持续加压1分钟。\n\n直流耐压：测泄露电流后测量，用静电电压表、棒隙或球隙、电阻分压器、高值电阻串微安表测量，加压5-10分钟。\n\n冲击耐压：主电容》负荷电容，波前电阻《波尾电阻，并联充电，串联放电，用球隙直接测量。\n\n输电线路波过程：波速：1/√（L0C0）；\n\n​        波阻抗：√（L0/C0），不耗能，与线路长度无关，架空线大于电缆；\n\n​        电压折射：2Z2/(Z1+Z2)；\n\n​        电压反射：（Z2-Z1）/(Z1+Z2)；\n\n​        电流折射：2Z1/(Z1+Z2)；\n\n​        电流反射：(Z1-Z2)/(Z1+Z2)。\n\n​        折射系数=反射系数+1。\n\n​        线路末端开路：电压波正全反射，电流波负全反射；\n\n​        线路末端短路：电压波负全反射，电流波正全反射；\n\n​        线路末端匹配电阻：只发生折射，输送自然功率。\n\n彼得逊法则：把分布参数的折、反射问题简化成集总参数电路计算。\n\n反射波：串联电感：类似电路末端开路；\n\n​    并联电容:类似电路末端短路；\n\n​    都可减小过电压幅值，对最终稳态无影响，折射波二者作用相同。\n\n冲击电晕（负极性）会使导线有效半径增大，对地电容增大且导线电感不变，减小了波阻抗和波速，耦合系数增大。\n\n输电线路为行波，变压器波过程为驻波，旋转电机为行波（进波陡度<5KV/微秒）。\n\n雷电放电：超长气隙极不均匀电场的气体火花放电，负极性。\n\n标准雷电压波形1.2/50微秒，防雷设计中采用2.6/40微秒。\n\n防雷保护装置：避雷针（绕击率低于0.1%，山区绕击率高于平原），避雷线（保护角越小，绕击率越低，防直击、防闪络、防建弧、防停电，进线段1-2km装进线段保护），避雷器（保护间隙，管式避雷器，阀式避雷器，氧化锌避雷器），接地装置（接地电阻为接地点电位与入地电流比值，一般小于30欧）。\n\n内部过电压：暂时过电压：工频过电压：容升效应、不对称短路、发电机突然甩负荷，用并联电抗器、静止补偿装置或降低零序阻抗限制；\n\n​            谐振过电压：时间最长，串联谐振，包括线性谐振、参数谐振（发电机自励磁）、铁磁谐振（非线性）。\n\n​      操作过电压：时间短，危害严重，包括切空载线路（提高断路器灭弧性能，安装避雷器，线路侧并联电抗器）、合闸空载线路（用带并联电阻的断路器，同步合闸，装设并联电抗器，安装避雷器）、切空载变压器（安装避雷器，用带并联电阻的断路器）、断续电弧接地（中性点直接接地或经消弧线圈接地，增大相间电容）、解列过电压（安装氧化锌避雷器）。\n\n雷电过电压对110KV及以下影响大，操作过电压220KV及以上影响大。\n\n "},{"title":"视频剪辑软件视频封面的设置","url":"/2024/08/16/shi-pin-jian-ji-ruan-jian-shi-pin-feng-mian-de-she-zhi/","content":"\n# 视频剪辑软件视频封面的设置\n\n\n\n**不同软件显示的视频封面不一样**，**WINDOWS文件管理器**和**微信**应该是第一帧，**QQ**里应该是第0.5秒左右，**优酷土豆或者其他视频网站**是直接给一堆截图你选\n\n\n\n所以尽管你设置了视频封面, 但导出看到的仍然是其他封面, **不是你没设置好**, 而是你看不到, 通常情况下**华为手机图库**可以正常看到"},{"title":"CentOS7防火墙添加端口","url":"/2024/02/22/centos7-fang-huo-qiang-tian-jia-duan-kou/","content":"\n\n# CentOS7防火墙添加端口\n\n\n\nCentOS防火墻添加端口比较简单，三步走（皆以root用户执行，或者用sudo命令）：\n\n\n\n### 1.查看开发的端口\n\n```\nfirewall-cmd --zone=public --list-ports\n```\n\n\n\n### 2.添加端口\n\neg: 将8848端口添加到防火墙\n\n```\nfirewall-cmd --zone=public --add-port=8848/tcp --permanent   \n```\n\n\n\n### 更新防火墙\n\n```\nfirewall-cmd --reload\n```\n\n"},{"title":"python web部署","url":"/2024/02/22/python-web-bu-shu/","content":"\n\n\n# python web部署\n\n\n\n>  常见的python web部署是gunicorn+nginx, 最好再加一个supervisor守护进程\n\n\n\n**架构：**\nnginx（反向代理）-> gunicorn（with gevent）-> flask server -> supervisor\n\nnginx 只使用反向代理功能，不再作负载均衡(多线程)。负载均衡在 gunicorn 侧实现，采用轮询方式。\n\n\n\n**如图所示**\n\n![image-20240222001601479](https://shiningonly.oss-cn-shenzhen.aliyuncs.com/typora/image-20240222001601479.png)\n\n\n\n## gunicorn\n\n> gunicorn和uwsgi都是两种常见的wsgi服务器, 由于uwsgi安装困难, 所以项目实践采用gunicorn\n\n\n\n**使用前景**\n\n- 运行`python wsgi.py`脚本，即可 web 访问，但无法并发访问，如果需要多线程开启 web 服务，实现并发访问，则需要额外一个工具进行封装，如gunicorn\n- 它全名叫Green Unicorn，是一个被广泛使用的高性能的Python WSGI Unix HTTP服务器。\n- Gunicorn 是python中的WSGI容器，优点就是配置简单，轻量级的资源消耗，以及高性能。\n\n\n\n### 安装\n\n```bash\npip install gunicorn\ngunicorn -h  # 查看使用的命令\n```\n\n\n\n### 启动\n\n> 在flask的项目的目录下启动\n\n**方式一**: 命令行\n\n```bash\n# 第一个app指的是app.py文件，第二个指的是flask应用的名字；\ngunicorn -w 4 -b 0.0.0.0:8000 app:app\n```\n\n**gunicorn的参数详解**\n\n```bash\n-c CONFIG    : CONFIG,配置文件的路径，通过配置文件启动；生产环境使用；\n-b ADDRESS   : ADDRESS，ip加端口，绑定运行的主机；\n-w INT, --workers INT：用于处理工作进程的数量，为正整数，默认为1；\n-k STRTING, --worker-class STRTING：要使用的工作模式，默认为sync异步，可以下载eventlet和gevent并指定\n--threads INT：处理请求的工作线程数，使用指定数量的线程运行每个worker。为正整数，默认为1。\n--worker-connections INT：最大客户端并发数量，默认情况下这个值为1000。\n--backlog int：未决连接的最大数量，即等待服务的客户的数量。默认2048个，一般不修改；\n-p FILE, --pid FILE：设置pid文件的文件名，如果不设置将不会创建pid文件\n--access-logfile FILE   ：  要写入的访问日志目录\n--access-logformat STRING：要写入的访问日志格式\n--error-logfile FILE, --log-file FILE  ：  要写入错误日志的文件目录。\n--log-level LEVEL   ：   错误日志输出等级。\n--limit-request-line INT   ：  HTTP请求头的行数的最大大小，此参数用于限制HTTP请求行的允许大小，默认情况下，这个值为4094。值是0~8190的数字。\n--limit-request-fields INT   ：  限制HTTP请求中请求头字段的数量。此字段用于限制请求头字段的数量以防止DDOS攻击，默认情况下，这个值为100，这个值不能超过32768\n--limit-request-field-size INT  ：  限制HTTP请求中请求头的大小，默认情况下这个值为8190字节。值是一个整数或者0，当该值为0时，表示将对请求头大小不做限制\n-t INT, --timeout INT：超过这么多秒后工作将被杀掉，并重新启动。一般设定为30秒；\n--daemon： 是否以守护进程启动，默认false；\n--chdir： 在加载应用程序之前切换目录；\n--graceful-timeout INT：默认情况下，这个值为30，在超时(从接收到重启信号开始)之后仍然活着的工作将被强行杀死；一般使用默认；\n--keep-alive INT：在keep-alive连接上等待请求的秒数，默认情况下值为2。一般设定在1~5秒之间。\n--reload：默认为False。此设置用于开发，每当应用程序发生更改时，都会导致工作重新启动。\n--spew：打印服务器执行过的每一条语句，默认False。此选择为原子性的，即要么全部打印，要么全部不打印；\n--check-config   ：显示现在的配置，默认值为False，即显示。\n-e ENV, --env ENV： 设置环境变量；\n\n```\n\n\n\n**方式二**: 以配置文件的方式启动(推荐)\n\n配置文件\n\n```bash\n# gunicorn.py\n# 并行工作进程数\nworkers = 4\n# 指定每个工作者的线程数\nthreads = 2\n# 监听内网端口5000\nbind = '127.0.0.1:5000'\n# 设置守护进程,将进程交给supervisor管理\ndaemon = 'false'\n# 工作模式协程\nworker_class = 'gevent'\n# 设置最大并发量\nworker_connections = 2000\n# 设置进程文件目录\npidfile = '/var/run/gunicorn.pid'\n# 设置访问日志和错误信息日志路径\naccesslog = '/var/log/gunicorn_acess.log'\nerrorlog = '/var/log/gunicorn_error.log'\n# 设置日志记录水平\nloglevel = 'warning'\n```\n\n启动gunicorn\n`gunicorn -c gunicorn.py app:app`\n\n**注意**: 如果将gunicorn交给supervisor守护进程时, 需将`daemon = 'false'`, 而不是true, 要不然会报错\n\n\n\n## nginx\n\n>处理外部请求, 并反向代理\n\n当外部请求为:\n\n- 普通请求   ->     8001端口\n- /static/      ->      /myproject/static\n\n### 配置文件\n\n> 采用最简单的反向代理到gunicorn服务器\n\n```nginx\n# 其他块省略没写\n\nupstream test{\n    server 127.0.0.1:8001;  \n}\n\nserver {\n    listen 80;\n    server_name localhost;\n    location / {\n    proxy_pass http://test;\n\t}\n}\n```\n\n\n\n## supervisor\n\n使用前景:\n\n- gunicorn无法重启，关闭进程麻烦，因此还需要一个程序（如supervisor）来管理gunicorn，以达到自动化\n- 而supervisor是一个专门用来管理进程的工具，还可以管理系统的工具进程，甚至可设置web页面管理相关进程；\n\n### 准备\n\n1. 安装 \n   `pip install supervisor`  安装后测试是否成功  `echo_supervisord_conf`\n\n2. 建立配置文件 \n   创建目录并赋予权限\n\n   ```bash\n   mkdir -m 755 -p /etc/supervisor/\n   cd /etc/supervisor/\n   mkdir -m 755 conf.d\n   // 将默认配置文件复制到新文件夹,之后指定新文件夹中的配置文件启动supervisor(方便管理和修改)\n   echo_supervisord_conf > /etc/supervisor/supervisord.conf \n   ```\n\n   在conf.d 文件夹中创建配置文件如app.ini\n\n   ```ini\n   [program:wsgi] ;\n   directory=/root/book/book-flask ;\n   command=gunicorn -c gunicorn.py app:app ;\n   stdout_logfile=/root/wsgi_log/wsgi.log\n   stderr_logfile=/root/wsgi_log/wsgi.err\n   ```\n\n   - directory: 脚本目录\n   - command: 脚本执行命令\n   - stdout_logfile: log日志\n   - stderr_logfile: error日志\n\n   **注**: 配置文件主打简洁干净, 尽量不要写备注, **每个冒号前要有空格**, 要不然会报错\n\n3. 添加配置文件到主配置文件\n\n   打开/etc/supervisor/supervisord.conf 文件，到最后一行可以看到\n\n   ```ini\n   ;[include]\n   ;files = /relative/dictory/*.ini\n   ```\n\n   删除分号即可\n\n\n\n### 启动\n\n1. 首先启动supervisord\n\n```powershell\nsupervisord -c /etc/supervisor/supervisord.conf  \n```\n\n2. 再启动我们的应用：\n\n```powershell\nsudo supervisorctl start wsgi\n```\n\n\n\n**常用命令**\n\n- 关闭supervisor 命令\n\n  ```\n  supervisorctl shutdown\n  ```\n\n- 关闭程序\n\n  ```\n  supervisorctl stop program_name\n  ```\n\n  \n\n\n\n至此 supervisor + gunicorn + nginx + flask 服务启动介绍完毕，\n\n- flask 提供接口服务；\n- gunicorn启动flask服务，可进行多进程访问；\n- nginx监听请求反向代理;\n- supervisor管理程序，对程序进行启动、重启、关闭的操作简单化，程序异常关闭，还能自动重启；"},{"title":"vscode自定义用户代码片段","url":"/2024/02/22/vscode-zi-ding-yi-yong-hu-dai-ma-pian-duan/","content":"\n# vscode自定义用户代码片段\n\n\n\n依次点击**左下角设置齿轮** -> **User Snippets**(用户代码片段)\n\n- 如果只想在某语言中用就选择对应语言\n- 如果想全局使用就选择New Global Snippets file\n\n\n\n 输入代码\n\n主要就是四个部分：\n\n1. **key**：代码提示弹窗显示的此Snippet的名字\n2. **scope**：表明该Snippet在哪些语言文件内生效\n3. **prefix**：指定触发此Snippet的关键字\n4. **body**：为Snippet的模板内容\n5. **description**：对此Snippet的描述\n\n\n\n**例**: 箭头函数df\n\n```js\n\"箭头函数\": {\t\t //代码片段名称\n\t\t\"prefix\": \"df\",\t\t\t //快捷键唤醒代码片段 可以自己设置成别的\n\t\t\"body\": [\t\t \t\t //body里面的内容就是代码段内容\n\t\t\"($1) => {$2}\"  \t\t // $1和$2为占位符\n\t\t],\n\t\t\"description\": \"Arrow Function\" //代码片段的介绍描述\n\t\t}\n```\n\n\n\n"},{"title":"VSCode_Tab键自动补全自定义元素或组件","url":"/2024/01/16/vscode-tab-jian-zi-dong-bu-quan-zi-ding-yi-yuan-su-huo-zu-jian/","content":"\n# VSCode Tab键如何自动补全自定义元素或组件？\n\n\n\n在我写了一个自定义组件，想要使用时，按 Tab 键并不能自动生成闭合标签，只会生成一个 tab 空格。这很让人苦恼，因为你不得不手动输入开始标签和闭合标签。不知你是否有同样的困扰？\n\n那么，怎么解决这个困扰呢？答案就是 setting.json 中添加以下设置：\n\n```text\n\"emmet.triggerExpansionOnTab\": true\n```\n\n添加了上面的设置后，输入自定义组件名称按 Tab 键即可生成闭合标签。\n\n\n\n"},{"title":"Chrome 您的连接不是私密连接解决办法","url":"/2023/12/28/chrome-nin-de-lian-jie-bu-shi-si-mi-lian-jie-jie-jue-ban-fa/","content":"\n\n\n# Chrome 您的连接不是私密连接解决办法\n\n\n\n**问题**\n\n最近chrome版本移除了关于ssl配置错误后，点高级没有继续访问的选项。\n提示如下：\n您的连接不是私密连接\n攻击者可能会试图从 x.x.x.x 窃取您的信息（例如：密码、通讯内容或信用卡信息）。了解详情\nNET::ERR_CERT_INVALID\n将您访问的部分网页的网址、有限的系统信息以及部分网页内容发送给 Google，以帮助我们提升 Chrome 的安全性。隐私权政策\nx.x.x.x 通常会使用加密技术来保护您的信息。Google Chrome 此次尝试连接到 x.x.x.x 时，此网站发回了异常的错误凭据。这可能是因为有攻击者在试图冒充 x.x.x.x，或 Wi-Fi 登录屏幕中断了此次连接。请放心，您的信息仍然是安全的，因为 Google Chrome 尚未进行任何数据交换便停止了连接。\n您目前无法访问 x.x.x.x，因为此网站发送了 Google Chrome 无法处理的杂乱凭据。网络错误和攻击通常是暂时的，因此，此网页稍后可能会恢复正常。\n\n**解决办法**\n解决办法就是在当前页面用键盘输入 `thisisunsafe` ，不是在地址栏输入，就直接敲键盘就行了，页面即会自动刷新进入网页。"},{"title":"浅祝自己自己生日快乐吧","url":"/2023/08/28/qian-zhu-zi-ji-zi-ji-sheng-ri-kuai-le-ba/","content":"\n# 浅祝自己自己生日快乐吧\n\n![mmexport1675430205272](https://shiningonly.oss-cn-shenzhen.aliyuncs.com/typora/mmexport1675430205272.jpg)"},{"title":"初识nginx","url":"/2023/08/16/chu-shi-nginx/","content":"\n# 初识nginx\n\n\n## 什么是nginx\n\n**官方回答:** \nNginx (engine x) 是一个高性能的HTTP和`反向代理web`服务器，同时也提供了IMAP/POP3/SMTP服务。Nginx是由伊戈尔·赛索耶夫为俄罗斯访问量第二的Rambler.ru站点（俄文：Рамблер）开发的，第一个公开版本0.1.0发布于2004年10月4日。2011年6月1日，nginx 1.0.4发布。\n\n其特点是占有内存少，并发能力强，事实上nginx的并发能力在同类型的网页服务器中表现较好，中国大陆使用nginx网站用户有：百度、京东、新浪、网易、腾讯、淘宝等。在全球活跃的网站中有12.18%的使用比率，大约为2220万个网站。\n\nNginx 是一个安装非常的简单、配置文件非常简洁（还能够支持perl语法）、Bug非常少的服务。Nginx 启动特别容易，并且几乎可以做到7*24不间断运行，即使运行数个月也不需要重新启动。你还能够不间断服务的情况下进行软件版本的升级。\n\nNginx代码完全用`C语言`从头写成。官方数据测试表明能够支持高达 50,000 个并发连接数的响应。\n\n## 作用\n\n### 通俗来讲\n\n就是你用户很多, 项目不止搭建在一台服务器上时, 需要用户可以毫无感觉的通过访问一个域名自动分配的访问到不同服务器并且返回对应结果\n\n- 这一个域名就是代理服务器, 就是nginx\n- 这个自动分配就是nginx干的(反向代理)\n\n### **反向代理**\n\n![](https://shiningonly.oss-cn-shenzhen.aliyuncs.com/typora/kuangstudy62a15097-6e2a-4dbe-bcf5-f0d7cab81089.png)\n\n### **负载均衡**\n\n至于你想用户请求这些服务器的比重就用到负载均衡, 比如说第一个服务器大, 你想用户多请求她一点就可以把他的比重搞高一点, 详情百度\n\n\n\n### **配置文件**\n\n查找安装路径： `whereis nginx`\n\n在路径下有配置文件 `nginx.conf`\n\n**文件结构**\n```nginx\n#全局块\n#user  nobody;\nworker_processes  1;\n\n#event块\nevents {\n    worker_connections  1024;\n}\n\n#http块\nhttp {\n    #http全局块\n    include       mime.types;\n    default_type  application/octet-stream;\n    sendfile        on;\n    keepalive_timeout  65;\n    #server块\n    server {\n        #server全局块\n        listen       8000;\n        server_name  localhost;\n        #location块\n        location / {\n            root   html;\n            index  index.html index.htm;\n        }\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n    #这边可以有多个server块\n    server {\n      ...\n    }\n}\n```\n\n### 常用命令\n```bash\ncd /usr/local/nginx/sbin/\n./nginx  启动\n./nginx -s stop  停止\n./nginx -s quit  安全退出\n./nginx -s reload  重新加载配置文件\nps aux|grep nginx  查看nginx进程\n```\n\n**更改完配置文件后记得重新加载配置文件**\n\n### 最小应用\n```nginx\n# 其他块省略没写\n\nupstream test{\n    server 127.0.0.1:8080 weight=1;\n    server 127.0.0.1:8081 weight=1;\n}\n\nserver {\n    listen 80;\n    server_name localhost;\n    location / {\n    proxy_pass http://test;\n\t}\n}\n\n```\n\n这就是一个用到反向代理和负载均衡的最小应用\n\n这段代码的意思就是当用户请求`localhost:80`时, 会被反向代理到`http://test`, 然后再通过负载均衡按权重分配到不同端口上(相当于不同的服务器上)\n\n- test: 随便起的名字\n- upstream: 负载均衡\n- listen:　监听端口号\n- server_name: 访问ip或域名\n- proxy_pass: 反向代理到的地址\n\n## 简单使用\n\n作为一个小白肯定没有那么大的用户量需要将项目搭建在几个服务器上, 对于我来说的话, 主要使用场景如下:\n\n当我搭建好一个网站需要绑定域名的时候, 因为在域名商无法直接将域名绑定至`ip:端口号`, 所以需要我们按以下步骤:\n\n1. 在域名商将域名或二级域名通过记录类型A绑定至某一`ip`\n2. 然后在该服务器内配置`nginx`, 当用户通过该域名直接访问时自动反向代理到`ip:端口号`的地址, 相当于我们就反向代理到一个端口, 没有负载均衡\n3. 这样我们就可以通过访问域名到指定`ip:端口号`了\n\n**eg:** \n在alist的官方文档中, 反向代理用到了\n```nginx\nserver {\n    listen 80;\n    server_name localhost;\n    location / {\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $scheme;\n      proxy_set_header Host $http_host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header Range $http_range;\n        proxy_set_header If-Range $http_if_range;\n      proxy_redirect off;\n      proxy_pass http://127.0.0.1:5244;\n      # the max size of file to upload\n      client_max_body_size 20000m;\n\t}\n}\n```\n\n这样当我们访问`http://localhost`时(http默认就是80端口), 会自动反向代理到`http://127.0.0.1:5244`, 如果你将域名绑定到`localhost(服务器ip地址)`了的话, 那么访问域名会直接访问到alist网站\n\n### 注意事项\n通常我们写的配置都会放在配置文件里, nginx默认情况下有一个主配置文件, 我们可以将写的配置放在主配置文件里, 但这样有一定的风险, 各个服务之间的配置可能会出现相互干扰, 尽管是每一个server并且用的大括号. 所以**最好每个服务单独写在一个配置文件里, 并且每个单服务配置文件都要放在主配置文件包含的路径下**\n"},{"title":"当拿到一个新服务器时所需准备工作","url":"/2023/08/14/dang-na-dao-yi-ge-xin-fu-wu-qi-shi-suo-xu-zhun-bei-gong-zuo/","content":"\n# 当拿到一个新服务器时所需准备工作\n\n## 安装python\n\n1. 首先使用`wget`命令在`Linux`下载安装包\n   ```bash\n   wget https://repo.anaconda.com/miniconda/Miniconda3-py38_4.9.2-Linux-x86_64.sh\n   ```\n   \n\n2. 使用 sh 指令运行安装包文件\n   ```bash\n   sh Miniconda3-py38_4.9.2-Linux-x86_64.sh\n   ```\n\n   然后 回车 yes 回车...一直往下\n   \n\n3. 安装完之后，配置并不会直接生效，需要使用 `source` 使修改之后的 `path` 生效才能正常使用。\n   ```bash\n   source ~/.bashrc\n   ```\n\n4.  最后输入 `python` 即可查看安装版本啦\n\n## 安装pycharm\n\n1. 首先在官网下载pycharm专业版，网址：\n   http://www.jetbrains.com/pycharm/download/#section=linux\n\n2. 解压\n   ```\n   tar -xzvf filename.tar.gz //解压tar.gz\n   ```\n\n3. 更改hosts文件（ etc/hosts ），添加一行代码：0.0.0.0 account.jetbrains.com\n\n   使用命令:\n   ```\n    sudo vi /etc/hosts\n   ```\n   添加, 保存退出\n\n4. 先cd到安装包的bin文件下, 然后运行:\n   ```\n   sh pycharm.sh\n   ```\n\n5. 在Linux下面为了方便，不用每次进安装目录启动，顺手做了个别名，在/etc/profile文件最后增加一行\n   ```\n   alias pyc=\"sh ~/pycharm-2022.2.2/bin/pycharm.sh &\"\n   ```\n\n   每次启动PyCharm只要敲别名pyc就行了。\n\n## 安装 git\n\n### ubuntu\n```bash\nsudo apt install git\n```\n### centos\n```bash\n yum install git\n```\n\n**验证**\n```bash\ngit --version\n\ngit version 1.8.3.1\n```\n\n## 安装node.js\n\n### ubuntu\n1. 可以先去 node.js 官网 [https://nodejs.org](https://nodejs.org/) 查看最新的版本号\n\n   - LTS 为稳定版\n   - current 为最新版\n\n2. 添加源后安装(**这里用的是NodeSource提供的二进制包进行安装**)\n\n   3. 首先根据大版本号找到源, 如这里的16.x.x的源是:\n      ```\n      https://deb.nodesource.com/setup_16.x\n      ```\n\n   4. 所以在终端执行\n      ```bash\n      curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -\n      ```\n\n   5. 然后再执行:\n      ```bash\n      sudo apt-get install -y nodejs\n      ```\n  等待安装完成\n\n   最后验证一下，执行：`node -v` 即可出现刚才安装的版本号。\n\n### centos\n\n1. 在 root 目录下，**下载**Node.js安装包\n   ```\n   wget https://nodejs.org/dist/v12.13.0/node-v12.13.0-linux-x64.tar.xz\n   ```\n\n2. **解压**文件\n   ```bash\n   tar xvf node-v12.13.0-linux-x64.tar.xz\n   ```\n\n3. 创建**软链接**，以便可以在任意目录下使用 node 和 npm 命令（类似在windows上配置全局环境变量）\n   ```bash\n   ln -s /root/node-v12.13.0-linux-x64/bin/node /usr/local/bin/node\n   ln -s /root/node-v12.13.0-linux-x64/bin/npm /usr/local/bin/npm\n   ```\n\n4. 依次查看node和npm信息（**验证安装**是否成功）\n   ```bash\n   node -v\n   npm -v\n   ```\n\n\n## 安装Mysql\n\n> 推荐使用宝塔面板来安装, 省事, 如果要用命令行来安装, 下面也有教程\n\n### 安装服务端和客户端\n​\t在 Ubuntu 上安装 MySQL，最简单的方式是在线安装。只需要几行简单的命令（ `#` 号后面是注释）：\n\n```bash\n# 安装 MySQL 服务端、核心程序 \nsudo apt install mysql-server\n\n# 安装 MySQL 客户端\nsudo apt-get install mysql-client    \n```\n\n服务器用于接收客户端的请求、执行 sql 语句、管理数据库\n\n服务器端一般以服务方式管理，名称为 mysql\n\n### 修改初始密码\n\n​\t在 Ubuntu 下使用命令安装 Mysql 时会直接安装好，没有初始化root密码\n\n1. 首先输入\n   ```bash\n   sudo vim /etc/mysql/debian.cnf\n   ```\n\n   ​\t打开/etc/mysql/目录下的debian.cnf文件，记住这里的用户名和密码.\n\n2. 使用该密码登录Mysql\n   ```bash\n   mysql -u debian-sys-maint -p\n   ```\n\n3. 选择数据库, 使用Mysql\n   ```sql\n   use mysql;\n   ```\n   \n4. 修改密码时，5.7版本和8.0版本有所不同，需要使用不同的语句执行\n\n   - MySql5.7\n     ```sql\n     update user set authentication_string = password([\"新的密码\"]) where user = \"新的用户名\" [and Host=\"localhost\"];\n     ```\n\n     不晓得对不对(没试过)\n\n   - MySql8.0\n     ```sql\n     flush privileges;\n     ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '你的密码';\n     flush privileges;\n     ```\n   \n### 开启远程访问\n\n1. 创建用户用来[远程连接](https://so.csdn.net/so/search?q=远程连接&spm=1001.2101.3001.7020)，运行如下命令:\n   ```sql\n   GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'root' WITH GRANT OPTION;\n   ```\n\n   >参数说明\n   >- 第一个root表示用户名\n   >- %表示所有的电脑都可以连接，也可以设置某个 ip 地址运行连接\n   >- 第二个root表示密码\n\n2. 执行如下命令，立即生效\n   ```sql\n   flush privileges;\n   ```\n\n   \n3. 使用 exit 命令退出后，修改 mysql 的配置文件，运行如下命令:\n   ```bash\n   sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf +43\n   ```\n   **注意：其他 Linux系统 可能在 /etc/mysql/my.cnf**\n\n4. 找到 “bind-address = 127.0.0.1” , 这一行要注释掉，只需在前面加个#，即 # bind-address = 127.0.0.1\n\n5. 然后重新启动, 运行如下命令\n   ```bash\n   /etc/init.d/mysql stop\n   \n   /etc/init.d/mysql start\n   ```\n\n之后就可以用 navicat 连接数据库了\n\n\n\n\n\n"},{"title":"三菱plc+ python打造智能温湿度系统","url":"/2023/08/13/san-ling-plc-python-da-zao-zhi-neng-wen-shi-du-xi-tong/","content":"\n\n\n# 三菱plc+ python打造智能温湿度系统\n\n\n\n本项目基于三菱`plc`系列的`FX3N`, 通过`python`搭建客户端实现远程控制. 因经费有限再加上只交作业, 所以plc采用凌一plc模拟器来实现plc基本功能和基于`modbus` 协议的网络通信\n\n\n\n## 硬件端\n\n>核心硬件为plc，所接外设有温湿度传感器和网络模块\n>\n>所用 plc 为fx 系列的`FX3N`, 编程软件为`GX works2` 。plc 方面只实现了简单的基本开关比较逻辑\n\n\n\n### 梯形图\n\n![image-20230625185356596](https://shiningonly.oss-cn-shenzhen.aliyuncs.com/typora/image-20230625185356596.png)\n\n![image-20230625185401403](https://shiningonly.oss-cn-shenzhen.aliyuncs.com/typora/image-20230625185401403.png)\n\n### 仿真\n\n> 模拟仿真用到了凌一plc模拟器， 自带tcp协议\n\n![image-20230625185735268](https://shiningonly.oss-cn-shenzhen.aliyuncs.com/typora/image-20230625185735268.png)\n\n当按下指定的输入端口时，输出端口按照所写梯形图逻辑变化\n\n\n\n## 客户端\n\n### python\n\n> 后端采用python的flask框架搭建， 编写相应的显示控制逻辑\n\n```python\nfrom flask import Flask, render_template, request, jsonify\nfrom pyModbusTCP.client import ModbusClient\n\napp = Flask(__name__)\n\n# 凌一模拟器的IP地址和端口号\nMODBUS_TCP_IP = '127.0.0.1'\nMODBUS_TCP_PORT = 502\n\n# Modbus寄存器地址\nTEMPERATURE_REGISTER = 0\nHUMIDITY_REGISTER = 5\nFAN_COIL_REGISTER = 32832\nHUMIDIFIER_REGISTER = 32833\nFAN_STATUS = 32848\nHUMIDIFIER_STATUS = 32858\n\n# 创建Modbus TCP客户端\nclient = ModbusClient(host=MODBUS_TCP_IP, port=MODBUS_TCP_PORT, auto_open=True)\n\n\n@app.route('/')\ndef index():\n    return render_template('index.html')\n\n\n@app.route('/data')\ndef get_data():\n    # 读取温度和湿度数据\n    temperature = read_register(TEMPERATURE_REGISTER)\n    humidity = read_register(HUMIDITY_REGISTER)\n\n    # 从PLC读取电风扇和加湿器的状态\n    fan_status = read_register(FAN_STATUS)\n    humidifier_status = read_register(HUMIDIFIER_STATUS)\n    print(fan_status, humidifier_status)\n\n    # 构造包含温湿度和状态的JSON响应\n    data = {\n        'temperature': temperature,\n        'humidity': humidity,\n        'fan_status': fan_status,\n        'humidifier_status': humidifier_status\n    }\n\n    return jsonify(data)\n\n\n@app.route('/control', methods=['POST'])\ndef control_devices():\n    # 获取前端发送的控制指令\n    fan_status = int(request.form['fan'])\n    humidifier_status = int(request.form['humidifier'])\n\n    # 控制风扇和加湿器状态\n    write_register(FAN_COIL_REGISTER, fan_status)\n    write_register(HUMIDIFIER_REGISTER, humidifier_status)\n\n    # 返回控制结果给前端\n    return {'success': True}\n\n\ndef read_register(register):\n    # 读取Modbus寄存器的值\n    result = client.read_holding_registers(register, 1)\n    if result:\n        return result[0]\n    return None\n\n\ndef write_register(register, value):\n    # 写入Modbus寄存器的值\n    result = client.write_single_register(register, value)\n    return result\n\n\nif __name__ == '__main__':\n    app.run(debug=True)\n\n```\n\n\n\n### html\n\n> 前端html页面用到了JavaScript实时发送请求后端来获取最新的数据\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\">\n    <style>\n        body {\n            background-color: #f8f9fa;\n        }\n        .container {\n            max-width: 800px;\n            margin: 0 auto;\n            padding: 50px;\n            background-color: #ffffff;\n            border-radius: 10px;\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n        }\n        h1 {\n            text-align: center;\n            color: #333333;\n            margin-bottom: 50px;\n        }\n        .data-card {\n            padding: 30px;\n            text-align: center;\n            background-color: #f5f5f5;\n            border-radius: 10px;\n            margin-bottom: 30px;\n        }\n        .data-card h5 {\n            color: #888888;\n        }\n        .data-card p {\n            font-size: 3em;\n            color: #333333;\n            margin-top: 20px;\n            margin-bottom: 0;\n        }\n        .control-buttons {\n            text-align: center;\n            margin-top: 50px;\n        }\n        .control-buttons button {\n            margin: 0 10px;\n        }\n        .status-label {\n            font-weight: bold;\n        }\n    </style>\n    <title>实时温湿度监控</title>\n</head>\n<body>\n    <div class=\"container\">\n        <h1>实时温湿度监控</h1>\n        <h5 align=\"right\">--designed by shining(秦盛林)</h5>\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <div class=\"data-card\">\n                    <h5>温度</h5>\n                    <p id=\"temperature\">0°C</p>\n                </div>\n            </div>\n            <div class=\"col-md-6\">\n                <div class=\"data-card\">\n                    <h5>湿度</h5>\n                    <p id=\"humidity\">0%</p>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <div class=\"data-card\">\n                    <h5>风扇状态</h5>\n                    <p id=\"fan-status\" class=\"status-label\">关闭</p>\n                </div>\n            </div>\n            <div class=\"col-md-6\">\n                <div class=\"data-card\">\n                    <h5>加湿器状态</h5>\n                    <p id=\"humidifier-status\" class=\"status-label\">关闭</p>\n                </div>\n            </div>\n        </div>\n        <div class=\"control-buttons\">\n            <button class=\"btn btn-primary\" id=\"fan-on\">打开风扇</button>\n            <button class=\"btn btn-primary\" id=\"fan-off\">关闭风扇</button>\n            <button class=\"btn btn-primary\" id=\"humidifier-on\">打开加湿器</button>\n            <button class=\"btn btn-primary\" id=\"humidifier-off\">关闭加湿器</button>\n        </div>\n    </div>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js\"></script>\n    <script>\n    // 控制按钮点击事件\n    $('#fan-on').click(function() {\n        // 发送控制命令\n        $.post('/control', {fan: 1, humidifier: 0});\n    });\n\n    $('#fan-off').click(function() {\n        // 发送控制命令\n        $.post('/control', {fan: 0, humidifier: 0});\n    });\n\n    $('#humidifier-on').click(function() {\n        // 发送控制命令\n        $.post('/control', {fan: 0, humidifier: 1});\n    });\n\n    $('#humidifier-off').click(function() {\n        // 发送控制命令\n        $.post('/control', {fan: 0, humidifier: 0});\n    });\n\n    // 定时更新温湿度数据和设备状态\n    setInterval(function() {\n        $.getJSON('/data', function(data) {\n            $('#temperature').text(data.temperature + '°C');\n            $('#humidity').text(data.humidity + '%');\n            $('#fan-status').text(data.fan_status ? '打开' : '关闭');\n            $('#humidifier-status').text(data.humidifier_status ? '打开' : '关闭');\n        });\n    }, 1000);\n</script>\n</body>\n</html>\n\n```\n\n### web端界面\n\n![Snipaste_2023-06-19_14-38-42](https://shiningonly.oss-cn-shenzhen.aliyuncs.com/typora/Snipaste_2023-06-19_14-38-42.png)\n"},{"title":"怎样用不同的域名访问一台服务器上的多个网站","url":"/2023/08/11/zen-yang-yong-bu-tong-de-yu-ming-fang-wen-yi-tai-fu-wu-qi-shang-de-duo-ge-wang-zhan/","content":"\n# 怎样用不同的域名访问一台服务器上的多个网站\n\n\n\n### 首先去域名服务商添加域名解析\n\n可以将不同的子域名都定向(A)到同一个ip地址\n\n\n\n### 在服务器端添加nginx配置\n\n对应的域名就在对应服务的server块中修改成server name\n\n\n\n### 原理\n\n- nginx会做匹配工作\n- 尽管域名解析不同的子域名添加的都是同一个ip地址, 但是用不同的域名请求这个ip时nginx会做匹配\n- 不同的域名会通过请求头中的HOST字段，匹配到特定的server块，转发到对应的应用服务器中去"},{"title":"git 本地与远程仓库不一样时更新本地仓库教程","url":"/2023/06/28/git-ben-di-yu-yuan-cheng-cang-ku-bu-yi-yang-shi-geng-xin-ben-di-cang-ku-jiao-cheng/","content":"\n\n# git 本地与远程仓库不一样时更新本地仓库教程\n\n\n\n>情景描述: 我们的远程仓库是可以多个终端上传, 当某一个终端上传或修改一些文件到仓库后, 需要在另一台电脑上更新修改的文件时, 就需要从远程仓库获取更新到本地\n\n\n\n##  方法一\n\n1. 在本地新建一个temp分支，并将远程仓库的master分支的代码下载到本地分支上面，这样的好处是可以通过IDEA等IDE进行可视化对比两个分支，查看差异\n\n   ```bash\n   git fetch origin master:temp\n   ```\n\n2. 比较temp分支与本地仓库\n\n   - 通过IDEA比对本地代码与下载的temp分支差异\n   - 使用 `git diff temp` 可以比较当前本地仓库和temp仓库之间的差异\n\n3. 更新当前的本地仓库\n\n   ```bash\n   git merge temp\n   ```\n\n\n## 方法二\n\n直接使用`git pull`\n\n`git pull` 相当于是 `git fetch` 和 `git merge` 的简写\n\n\n\n## 常见问题\n\n有时会遇到拉取失败的情况, 这时你需要在本地`git add .` 和`git commit -m' '`提交本地文件到本地库后再拉取即可\n\n\n\n## 实践\n\n比如说hexo博客, 你可以直接在本地更新, 也可以在网页端更新, 当你是部署在GitHub page上时, 无论在哪更新仓库都会变, 此时你想把最新的文件更新至本地就需要`git pull`或是`git fetch`+ `git merge`\n\n"},{"title":"supervisor使用相关问题","url":"/2023/05/18/supervisor-shi-yong-xiang-guan-wen-ti/","content":"\n\n\n# supervisor使用相关问题\n\n\n\n## 简介\n\n\n\nSupervisor 是一款 Python 开发的进程管理系统，允许用户监视和控制 Linux 上的进程，能将一个普通命令行进程变为后台守护进程，异常退出时能自动重启\n\n\n\n## 常见问题\n\n使用supervisor添加子配置文件时, 执行以下命令\n\n```bash\nsupervisorctl reread\n```\n\n后提示`No config updates to processes`\n\n\n\n### 产生原因可能如下\n\n- 配置文件没写对, 导致运行不起来\n- centos路径没引用对\n\n\n\n## 解决办法\n\n### 1.正确路径\n\n通常我们加载子配置文件是会将配置文件supervisord.conf的最后一部分修改为\n\n```bash\n[include]\nfiles=/root/supervisor/conf.d/*.ini\n```\n\n这里有几个细节(都是我遇到过的并且踩坑了的)\n\n1. files后面最好不要加空格, 例如`files = /root/supervisor/conf.d/*.ini` 这种有可能会找不着路径\n\n2. 有的如果是`*.conf` 结尾的可能也用不起, 最好还是改成 `ini  ` 结尾的\n\n3. 最开始这部分是注释着的, 最后取消注释的时候记得把`[include]` 这个也取消注释了,这也是我踩过的坑:sweat:\n\n### 2.正确配置文件\n\n关于配置文件的修改可以参考如下:\n\n```bash\n[program:test]\ncommand=sh /root/supervisord/test.sh\npriority=999                              ; 相对启动优先级，数值越小越优先，默认为999\nautostart=true                            ; 在supervisor启动时自动启动，默认为true\nautorestart=true                          ; 在意外退出时重新启动，默认为true\nstartsecs=10                              ; 子进程启动多少秒后状态为running则认为启动成功，默认为1\nstartretries=3                            ; 尝试启动的最大次数，默认为3\nexitcodes=0,2                             ; 进程的预期退出代码列表，默认为0\nstopsignal=QUIT                           ; 终止进程的信号，默认为TERM\nstopwaitsecs=10                           ; 在SIGKILL之前等待的最大秒数，默认为10\nuser=root                                 ; 在某用户下设置uid来启动程序，默认不切换用户\nredirect_stderr=true                      ; 是否重定向stdout和stderr，默认为false\nstdout_logfile=/tmp/supervisor.stdout.log  ; stdout的输出文件，默认为AUTO\nstdout_logfile_maxbytes=50MB              ; stdout最大文件大小，默认为50MB\nstdout_logfile_backups=10                 ; stdout文件备份数，设为0则不备份，默认为10\n```\n\n其实只需要配置3个参数，其它不用管：\n\n- `command=sh /root/supervisord/test.sh`： 我们的子进程启动命令；\n- `stdout_logfile=/tmp/supervisor.stdout.log`: 日志；\n- `program:test`：进程名为`test`，如果进程哪一天想停止启动等，需要进程名；\n\n\n\n## 最后\n\n修改完后再次输入`supervisorctl reread` 应该就会获取到子进程配置文件并且启动进程了\n\n再不行就输入一下 `supervisorctl reload` (重启 supervisord), `supervisorctl update` (改动某配置文件，重新加载)什么的就大功告成啦:ok_hand:\n\n\n\n## 附录\n\n**supervisorctl 常用命令**\n\n新增某配置文件，重新加载\n\n```\nsupervisorctl reread\n```\n\n改动某配置文件，重新加载\n\n```\nsupervisorctl update\n```\n\n重启 supervisord\n\n```\nsupervisorctl reload\n```\n\n查看所有进程状态\n\n```\nsupervisorctl status\n```\n\n查看指定进程状态\n\n```\nsupervisorctl status <name>\n```\n\n启动所有子进程\n\n```\nsupervisorctl start all\n```\n\n启动指定子进程\n\n```\nsupervisorctl start <name>\n```\n\n重启所有子进程\n\n```\nsupervisorctl restart all\n```\n\n重启指定子进程\n\n```\nsupervisorctl restart <name>\n```\n\n停止所有子进程\n\n```\nsupervisorctl stop all\n```\n\n停止指定子进程\n\n```\nsupervisorctl stop <name>\n```\n\n添加子进程到进程组\n\n```\nsupervisorctl add <name>\n```\n\n从进程组移除子进程，需要先stop。注意：移除后，需要使用reread和update才能重新运行该进程\n\n```\nsupervisorctl reomve <name\n```\n\n\n\n关于centos使用supervisor可参考教程https://m.qy.cn/jszx/detail/38310.html"},{"title":"继电保护知识点","url":"/2023/05/18/ji-dian-bao-hu-zhi-shi-dian/","content":"\n# 继电保护知识点总结\n\n## 第一章\n\n1、电力系统运行状态概念及对应三种状态:  \n  \n正常(电力系统以足够的电功率满足符合对电能的需求等)\n\n不正常(正常工作遭到破坏但还未形成故障，可继续运行一段时间的情况)\n\n故障(电力系统的所有一次设备在运行过程中由于外力、绝缘老化、误操作、设计制造缺陷等原因会发生如短路，断线等故障)  \n  \n2、电力系统运行控制目的:  \n  \n通过自动和人工的控制，使电力系统尽快摆脱不正常运行状态和故障状态，能够长时间的在正常状态下运行。  \n  \n3、电力系统继电保护:  \n  \n泛指继电保护技术和由各种继电保护装置组成的继电保护系充。\n\n4、继电保护装置：\n\n指能反应电力系统中电气设备发生故障或不正常运行状态，并动作与断路器跳闸或发出信号的一种自动装置。\n\n5、事故:  \n  \n指系统或其中一部分的正常工作遭到破坏，并造成对用户停电或少送电或电能质量变坏到不能允许的地步,甚至造成人身伤亡和电气设备损坏的事件。  \n  \n6、故障/不正常运行状态:  \n  \n电力系统的所有一-次设备在运行过程中由于外力、绝缘老化、误操作、设计制造缺陷等原因会发生如短路，断线等。  \n  \n7、电力系统继电保护基本任务/作用:  \n  \n（1）自动、迅速、有选择性的将故障元件从电力系统中奶隆使亥文档元件免于继续遭到损坏,保障其它非故障部分迅速恢复正常运行;\n\n1.  反应电气设备的不正常运行状态，并根据运行维护条件，而动作于发出信号或跳闸。\n\n作用：用电设备一旦发生故障，速度而有选择性地切除故障设备，既能保护电气设备免于损坏，又能提高电力系统运行的稳定性。\n\n8、保护装置构成及作用:  \n  \n测量比较元件(用于测量通过被保护电力元件的物理参量，并与其给定的值进行比较根据比较结果，给出“是”“非”“0”“1”性质的一组逻辑信号,从而判断保护装置是否应启动)\n\n逻辑判断元件(根据测量比较元件输出逻辑信号的性质、先后顺序、持续时间等，使保护装置按一定的逻辑关系判定故障的类型和范围，最后确定是否该使断路器跳闸、发出信号或不动作，并将对应的指令传给执行输出部分)\n\n执行输出元件(根据逻辑判断部分传来的指令，发出跳开断路器的跳闸脉冲及相应的动作信息、发出警报或不动作)  \n  \n9、对电力系统继电保护基本要求:  \n  \n可靠性(包括安全性和信赖性;最根本要求;不拒动，不误动) ;选择性;速动性;灵敏性。  \n  \n10、故障切除时间等于保护装置和断路器动作时间之和。  \n  \n11、110kv及以下电网，主要实现“远后备”。\n\n1.  220kv及以上电网，主要实现“近后备”，“加强主保护,简化后备保护”。  \n      \n    13、电力系统二次设备:\n\n对一次设备的运行状态进行监视、测量、控制和保护的设备。\n\n## 第二章\n\n1.  继电器基本要求/分类:  \n      \n    （1）基本要求：工作可靠，动作过程具有“继电特性”。\n1.  分类： 按原理分:电磁型、感应型、整流型、电子型、数字型。\n\n按反应的物理量:电流继电器、电压继电器、功率方向继电器、阻抗继电器、频率继电器和气体继电器。\n\n按其作用:启动继电器、量度继电器、时间继电器、中间继电器、信号继电器、出口继电器。\n\n1.  系统最大运行方式:在相同地点发生相同类型的短路时流过保护安装处的电流最大,对继电保护而言称为系统最大运行方式。\n\n系统最小运行方式:在相同地点发生相同类型的短路时流过保护安装处的电流最小，对继电保护而言称为系统最小运行方式。\n\n1.  电流速断保护优缺点:  \n      \n    优点：简单可靠，动作迅速，维护方便;\n\n缺点：不能保护路线的全长，保护范围直接受方式变化的影响。  \n  \n4、三段式电流保护特点:  \n  \n简单可靠，一般情况下也能够满足快速切除故障的要求;它直接受电网的接线以及电力系统的运行方式变化的影响，使它往往不能满足灵敏系数或变化范围要求。  \n  \n5、对功率方向继电器概念/要求:  \n  \n概念：用以判别功率方向或测定电流、电压间相位角的元件;  \n  \n要求：（1）应具有动作可靠性，即在正方向发生各种故障时能可靠动作，而在反方向故障时可靠不动作;\n\n1.  正方向故障时有足够的灵敏度。\n\n6、采用90°接线优点:  \n  \n（1）对各种两相短路都没有死区，因为继电器加入的是非故障的相间电压，其值很高。\n\n（2）选择继电器的内角a=90°-φk后，对线路上发生的各种故障，都能保证动作的方向性。  \n  \n7、零序分量中电压，电流，功率特点:  \n  \n(1)只要本级电压网络中发生单相接地故障，则在同一电压等级的所有发电厂和变电所的母线上,都将出现数值较高的零序电压。\n\n(2)故障线路零序电流较非故障线路大。\n\n(3)利用故障线路与非故障线路零序功率方向不同的特点来实现有选择性的保护，动作于信号或跳闸。  \n  \n8、对于零序电流保护的评价:  \n  \n(1)优点:\n\n保护简单，经济，可靠;整定值一般较低，灵敏度较高;受系统运行方式变化的影响较小;系统发生震荡、短时过负荷是不受影响;方向零序保护没有电压死区，零序保护就为绝大部分故障情况提供了保护，具有显著的优越性。\n\n1.  缺点:\n\n对于短路线路或运行方式变化较大的情况，保护往往不能满足系统运行方式变化的要求。随着相重合闸的广泛应用，在单项跳开期间系统中可能有较大的零序电流，保护会受较大影响。自耦变压器的使用使保护整定配合复杂化。\n\n1.  区分三段式电流保护灵敏度保护范围：\n1.  电网中区分消弧线圈三种补偿:  \n      \n    （1）完全补偿就是使IL=IcE，接地点的电流近似为零;（2）欠补偿就是使IL\\<IcE,补偿后的接地点电流仍然是电容性的;（3）过补偿IL\\>IcE，补偿后的电流是感性的(P=5-10%)。\n1.  掌握电流三段式保护整定方法：\n\n## \n\n## 第三章\n\n1.  距离保护:  \n      \n    利用短路发生时电压、电流同时变化的特征，测量电压与电流的比值，该比值反应故障到保护安装处的距离(或阻抗)，如果短路点距离(或阻抗)小于整定值则动作的保护。  \n      \n    2、距离保护构成:  \n      \n    由启动、测量、振荡闭锁、电压回路断线闭锁、配合逻辑和出口等几部分组成;作用如下: 1、用来判别系统是否发生故障。系统正常运行时，该部分不动作;而当发生故障时，该部分能够动作。通常情况下，只有启动部分动作后，才将后续的测量、逻辑等部分投入工作。2、在系统故障的情况下，快速、准确地测定出故障方向和距离，并与预先设定的保护范围相比较，区内故障时给出动作信号,区外故障时不动作.3、在电力系统发生振荡时，距离保护的测量元件有可能误动作,振荡闭锁元件的作用就是正确区分振荡和故障。在系统振荡的情况下，将保护闭锁，即使测量元件动作,也不会出口跳闸;在系统故障的情况下，开放保护,如果测量元件动作且满足其他动作条件,则发出跳闸命令,将故障设备切除。4、电压回路断线时,将会造成保护测量电压的消失，从而可能使距离保护的测量部分出现误判断。这种情况下应该将保护闭锁，以防止出现不必要的误动。5、用来实现距离保护各个部分之间的逻辑配合以及三段式保护中各段之间的时限配合。6、包括跳闸出口和信号出口,在保护动作时接通跳闸回路并发出相应的信号。  \n      \n    3、距离保护的整定计算方法：\n1.  影响距离保护正常工作因素:  \n      \n    短路点过渡电阻对距离保护的影响;电力系统振荡对距离保护的影响;电压互感器二次回路断线对距离保护的影响;分支电路对距离保护的影响;线路串联补偿电容对距离保护的影响;短路电压、电流中的非工频分量对距离保护的影响。  \n      \n    5、电力系统振荡:  \n      \n    并联运行的电力系统或发电厂之间出现功率角大范围周期性变化的现象。\n\n## 第四章\n\n1.  输电线路纵联保护:  \n      \n    利用某种通信通道将输电线路两端的保护装置纵向连接起来,将各段的电气量传送到对端，将各段的电气量进行比较，以判断故障在本线路范围内部还是在本线路范围外部,从而决定是否切除被保护线路。\n1.  一套完整的纵联保护包括哪些部分？\n\n包括：两端保护装置，通信设备，通信通道等部分。\n\n1.  纵联保护分类:  \n      \n    （1）按所利用信息通道类型分为：导引线纵联保护，电力线载波，微波，光纤。\n\n（2）按动作原理方向分为：比较式纵联保护，纵联电流差动保护。\n\n1.  导引线通信:  \n      \n    利用敷设在输电线路两端变电所之间的二次电缆传递被保护线路各侧信息的通信方式叫导引线通信。\n1.  读图书上4、6（载波通信示意图）：\n1.  电力线载波信号有哪三种信号、通道工作方式:  \n      \n    A.闭锁信号，阻止保护动作跳闸的信号，只有满足本端保护元件动作、无闭锁信号，保护才作用于跳闸。\n\nB允许信号，允许保护动作于跳闸的信号,只有满足本端保护元件动作、有允许信号，保护装置在动作于跳闸。\n\nC跳闸信号,直接引起跳闸的信号,跳闸的条件是本端保护元件动作或对端传来跳闸信号。\n\n1.  光纤通信特点:  \n      \n    通信容量大;可以节约大量金属材料;保密性好,敷设方便，不怕雷击，不受外界电磁干扰，抗腐蚀，和不怕潮。最重要-无感用性能。不足通信距离不够长。\n1.  影响纵联保护电流差动保护正确动作因素:  \n      \n    电流互感器的误差和不平衡电流;输电线路的分布电容电流;负荷电流对纵联差动保护的影响。\n\n## 第五章\n\n1、电力系统中采用重合闸的技术经济效果:  \n  \n大大提高供电的可靠性，减小线路停电的次数，特别是对单侧电源的单回路尤为显著;在高压输电线路线路采用重合闸，还可提高电力系统并列运行的稳定性，从而提高传输容量;对断路器本身由于机构不良或继电保护误动作而引起的跳闸，也能起纠正的作用。\n\n1.  对重合闸的要求:  \n      \n    （1）在下列情况下，重合闸不应动作:由值班人员手动分闸或通过遥控装置分闸时;手动投入断路器，由于线路上有故障，而随即被继电保护将其断开时;当断路器处于不正常状态而不允许实现重合闸时。\n\n（2）当断路器由继电保护动作或其它原因跳闸后，重合闸均应动作,使QF重新合闸。\n\n（3）自动重合闸装置的动作次数应符合预先的规定,如一次重合闸就只应实现重合一次,不允许第二次重合。\n\n（4）自动重合闸在动作以后，-般应能自动复归，准备好下一次再动作。\n\n（5）应能和继电保护配合实现前加速或后加速故障的切除。\n\n（6）双侧电源的线路.上实现重合闸时,应考虑合闸时两侧电源间的同步问题，并满足所提出的要求。\n\n1.  采用重合闸的技术经济效果:  \n      \n    大大提高供电的可靠性，减小线路停电的次数，特别是对单侧电源的单回路尤为显著;在高压输电线路线路采用重合闸，还可提高电力系统并列运行的稳定性，从而提高传输容量;对断路器本身由于机构不良或继电保护误动作而引起的跳闸，也能起纠正的作用。  \n      \n    2.对重合闸的要求:  \n      \n    A在下列情况下，重合闸不应动作:由值班人员手动分闸或通过遥控装置分闸时;手动投入断路器，由于线路上有故障，而随即被继电保护将其断开时;当断路器处于不正常状态而不允许实现重合闸时。B当断路器由继电保护动作或其它原因跳闸后，重合闸均应动作,使QF重新合闸。C.自动重合闸装置的动作次数应符合预先的规定,如一次重合闸就只应实现重合一次,不允许第二次重合。D.自动重合闸在动作以后，-般应能自动复归，准备好下一次再动作。E应能和继电保护配合实现前加速或后加速故障的切除。F双侧电源的线路.上实现重合闸时,应考虑合闸时两侧电源间的同步问题，并满足所提出的要求。  \n      \n    3.重合闸的分类:  \n      \n    （1）(根据重合闸断路器相数)单相,三相，综合，分相重合闸;\n\n（2）(重合闸控制断路器连续合闸次数)多次，一次重合闸。  \n  \n4.重合闸前加速，后加速保护特点:  \n  \n所谓前加速就是当线路第一次故障时，靠近电源端保护无选择动作，然后进行重合。如果重合于永久性故障上，则在断路器合闸后，再有选择性的切除故障。优点是:能够快速地切除瞬时性故障;可能使瞬时性故障来不及发展成永久性故障,从而提高重合闸的成功率;能保证发电厂和重要变电所的母线电压在0.6\\~0.7倍额定电压以上，从而保证厂用电和重要用户的电能质量;使用设备少，只需装设一套重合闸装置,简单,经济。缺点:断路器工作条件恶劣，动作次数较多;重合于永久性故障上时，故障切除的时间可能较长;如果重合闸装置或断路器QF3拒绝合闸，则将扩大停电范围。甚至在最末一级线路上故障时，都会使连接在这条线路上的所有用户停电。  \n  \n重合闸后加速保护一般又称为“后加速”。所谓后加速就是当线路第一次故障时，保护有选择性动作，然后进行合闸。如果重合于永久性故障,则在断路器重合闸后，再加速保护动作瞬时切除故障，而与第一次动作是否带有时限无关。优点:第一次是有选择地切除故障,不会扩大停电范围,特别是在重要的高压电网中，一般不允许保护无选择性地动作而后以重合闸来纠正(即前速);保证了永久性故障能瞬时切除,并仍然是有选择性的;和前加速相比，使用中不受网络结构和负荷条件的限制，一般来说是有利而无害的。缺点:每台断路器上都需要安装一套重合闸，与前加速相比略为复杂;第--次切除故障可能带有延时。\n\n1.  具有同步的无电压检定的重合闸接线原理(图5.3,5.4)\n\n## 第六章\n\n1.  变压器故障分类，变压器保护分类:  \n      \n    （1）油箱外故障(主要是套管和引出线.上发生相间短路以及接地短路)。\n\n（2）油箱内故障(包括绕组的相间短路.接地短路.匝间短路.以及铁芯的烧损)。  \n  \n变压器保护分类:瓦斯保护，纵差动保护，电流速断保护，外部相间短路保护后备保护，外部接地短路后备保护，过负荷保护，过励磁保护，其他非电量保护。\n\n2、励磁涌流:  \n  \n变压器空载投入或外部故障切除后电压恢复时变压器电压从零或很小的数值突然上升到运行电压。在这个电压上升的暂态过程中，变压器可能会严重饱和，产生很大的暂态励磁电流，这个励磁电流称为励磁涌流。\n\n3、单相励磁涌流的特点:  \n  \n在变压器空载合闸时，涌流是否产生及涌流的大小与合闸角有关，合闸角a=0和a=π时励磁涌流最大;波形完全偏离时间轴的一侧，并且出现间断。涌流越大，间断角越小;含有很大成分的非周期分量。间断角越小，非周期分量越大;含有大量的高次谐波分量，而以二次谐波为主，间断角越小，二次谐波也越小。\n\n4、防止励磁涌流引起误动的方法:\n\n采用速饱和中间变流器(因励磁电流中含有大量非周期分量，动作电流大，灵敏度降低，并且在变压器内部故障时，会因非周期分量的存在而延缓保护的动作)所以采用该方法。\n\n二次谐波制动方法(是根据励磁涌流中含有大量二次谐波分量的特点，当检测到差电流中二次谐波含量大于整定值时就将差动继电器封锁，以防止励磁涌流引起误动);\n\n间断角鉴别(通过检测差电流波形是否存在间断角,当间断角大于整定值时将差动保护封锁)。\n\n1.  变压器主保护有哪些:差动保护;瓦斯保护。  \n      \n    6、分级....变压器接地后备保护构成？\n1.  区分轻瓦斯、重瓦斯保护:  \n      \n    轻瓦斯保护：反映变压器内部的不正常情况或轻微故障。\n\n重瓦斯保护：反映变压器的故障。  \n  \n7、对于大型变压器为什么要设置双重化纵差保护:  \n  \n因为能够起到优势互补，加快内部故障的动作速度。\n\n## 第七章\n\n1、配置发电机保护:  \n  \n对1MW以上发电机的定子绕组及其引出线的相间短路，应装设纵差动保护;对于发电机定子绕组的匝间短路,当定子绕组星形接线、每相有并联分支且中性点侧有分支引出端时，应装设横差保护,200MW及以上的发电机有条件时可装设双重化横差保护;对于由不对称负荷或外部不对称短路而引起的负序过电流,一般在50MW及以上的发电机.上装设负序过电流保护;对于水轮发电机定子绕组过电压，应装设带延时的过电压保护。对于发电机励磁回路的一点接地故障,对1MW及以下的小型发电机可装设定期检测装置;对1MW以上的发电机应装设专用的励磁回路一点接地保护。对于发电机励磁消失故障，在发电机不允许失磁运行时，应在自动灭磁开关断开时连锁断开发电机的断路器;对于转子回路的过负荷，在100MW及以上，并且采用半导体励磁系统的发电机上，应装设转子过负荷保护对于燃气轮发电机，应装设逆功率保护。对于300MW及以上的发电机，应装设过励磁保护。  \n  \n2、发电机定子短路故障主要有哪几种情况:  \n  \n发生单相接地，然后由于电弧引发故障点处相间短路;直接发生线棒间绝缘击穿形成相间短路;发生单相接地，然后由于电位的变化引发其他地垫发生另一点的接地,从而构成两点接地短路;发电机端部放电构成相间短路;定子绕组同一相的匝间短路故障。\n\n1.  发电机定子绕组中性点接地:  \n      \n    采用高阻接地方式的主要目的是限制发电机单相接地时的暂态过电压，防止暂态过电压破坏定子绕组绝缘，但另一方面也人为的增大了故障电流。  \n      \n    4、大型发-变组单元接线下，采用欠补偿运行方式  \n      \n    5、保护作用于发电机断路器跳闸同时，为什么要作用于自动灭磁开关？\n\n为了快速消除发电机内部的故障。\n\n## 第八章\n\n1.  理清图8.1 8.2 8.3：\n1.  在什么情况下应装设专门母线保护:  \n      \n    （1）在110kV及以上的双母线和分段单母线上，为保证有选择性地切除任一-组(或段)母线上发生的故障:而另一组(或段)无故障的母线仍能继续运行，应装设专用的母线保护;\n\n（2）110kV及以上的单母线，重要发电厂的35kV母线或高压侧为110kV 及以上的重要降压变电所的35kV母线，按照装设全线速动保护的要求必须快速切除母线上的故障时，应装设专用的母线保护。\n\n1.  装设断路器失灵保护条件:  \n      \n    相邻元件保护的远后备保护灵敏度不够时应装设断路器失灵保护。对分相操作的断路器，允许只按单相接地故障来校验其灵敏度;根据变电所的重要性和装设失灵保护作用的大小来决定装设断路器失灵保护。 例如多母线运行的220kV及以上变电所，当失灵保护能缩小断路器拒动引起的停电范围时,就应装设失灵保护。  \n      \n    4、对断路器失灵保护的要求:  \n      \n    （1）失灵保护的误动和母线保护误动-样，影响范围很广，必须有较高的可靠性。\n\n（2）失灵保护首先动作于母联断路器和分段断路器，此后相邻元件保护已能以相继动作切除故障时，失灵保护仅动作于母联断路器和分段断路器。\n\n（3）在保证不误动的前提下，应以较短.延时、有选择性地切除有关断路器。\n\n（4）失灵保护的故障鉴别元件和跳闸闭锁元件,应对断路器所在线路或设备末端故障有足够灵敏度。\n\n5、完全电流母线差动保护，不完全......电流比相式母线保护：\n\n## 第九章\n\n1.  数字式继电保护:  \n      \n    数字式继电保护是指基于可编程数字电路技术和实时数字信号处理技术实现的电力系统继电保护。  \n      \n    2、继电保护装置五大类型:  \n      \n    机电型,整流型,晶体管型,集成电路型和数字式保护装置。  \n      \n    3、数字式保护装置构成:  \n      \n    硬件-指模拟和数字电子电路，硬件提供软件运行的平台,并且提供数字式保护装置与外部系统的电气联系;软件-指计算机程序，由它按照保护原理和功能的要求对硬件进行控制，有序的完成数据采集、外部信息交换、数字运算和逻辑判断、动作指令执行等各项操作。  \n      \n    4、数字是保护装置硬件以数字核心部件为中心。  \n      \n    5、数字式保护CPU类型:  \n      \n    单片微处理器;通用微处理器;数字信号处理器；  \n      \n    6、数字式保护装置特点:  \n      \n    维护调试方便;可靠性高;易于获得附加功能;灵活性大;保护性能得到很好改善;经济性好。\n\n"},{"title":"在 HTTPS 上运行 FLASK 应用程序","url":"/2023/04/23/zai-https-shang-yun-xing-flask-ying-yong-cheng-xu/","content":"\n# 在 HTTPS 上运行 FLASK 应用程序\n\n\n\n## 介绍\n\n在开发FLASK 应用过程中，通常会运行开发 web 服务器，它提供了一个基本的、但功能齐全的 WSGI HTTP 服务器。但是当部署应用程序到生产环境中，需要考虑的事情之一是，是否应该要求客户端使用加密连接以增加安全性。\n\n\n\n## 最简单的方法\n\nFlask (更具体地说是 Werkzeug)支持使用动态证书(on-the-fly certificates) ，这对于通过HTTPS快速为应用程序提供服务而无需证书时非常有用。\n​\n\n要在 Flask 上使用临时证书，你需要在虚拟环境中安装一个附加依赖项:\n\n```bash\n$ pip install pyopenssl\n```\n\n\n\n然后将ssl_context ='adhoc'添加到 app.run()调用中：\n\n```python\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef hello():\n    return \"Hello World!\"\n\nif __name__ == \"__main__\":\n    app.run(ssl_context='')\n```\n\n\n\n如果您使用的是Flask 1.x发行版，则还可以通过Flask CLI使用此选项：\n\n```bash\n$ flask run --cert=adhoc\n```\n\n\n\n当运行这个脚本(或者 flask run ) ，你会注意到 Flask 表明它运行的是 [https://server](https://server/):\n\n```bash\n$ python hello.py\n * Running on https://127.0.0.1:5000/ (Press CTRL+C to quit)\n```\n\n\n\n但是存在的问题是，浏览器不喜欢这种类型的证书，所以它们会显示一个可怕的警告，您需要在访问应用程序之前解除这个警告。一旦你允许浏览器连接，你将会有一个加密的连接，就像你从一个有效证书的服务器那里得到的一样，使用这些临时证书可以很方便进行测试，但不适用于任何实际用途。\n​\n\n## 自签名证书\n\n\n\n所谓的自签名证书是使用与该证书关联的私钥生成签名的证书。 我在上面提到，客户端需要“了解并信任”签署证书的CA，因为这种信任关系使客户端可以验证服务器证书。 Web 浏览器和其他 HTTP 客户端预先配置了已知和受信任的 CA 列表，但是显然，如果使用自签名证书，则CA将不会被知晓，并且验证将失败。 这正是我们在上一节中使用的临时证书所发生的。 如果 web 浏览器无法验证服务器证书，它允许继续进行操作并访问有问题的网站，但它将提醒你这样做需要承担的风险。\n\n\n\n但是真的有风险吗？ 使用上一部分的Flask服务器，你显然相信自己，所以对你来说没有风险。 问题是，当用户连接到他们不了解或控制的站点时，会出现此警告。 在这种情况下，用户将无法知道服务器是否真实，因为任何人都可以为任何域生成证书。\n​\n\n虽然自签名证书有时很有用，但 Flask 中的临时证书并不是很好，因为每次服务器运行时，都会通过 pyOpenSSL 生成不同的证书。当使用自签名证书时，最好在每次启动服务器时使用相同的证书，因为这样可以配置浏览器信任它，并消除安全警告。\n​\n\n可以通过命令行生成自签名证书，只需安装 openssl:\n\n```bash\nopenssl req -x509 -newkey rsa:4096 -nodes -out cert.pem -keyout key.pem -days 365\n```\n\n\n\n该命令在cert.pem中写入一个新证书，并在key.pem中写入其对应的私钥，有效期为365天。\n运行此命令时，将询问几个问题：\n\n```bash\nGenerating a 4096 bit RSA private key\n......................++\n.............++\nwriting new private key to 'key.pem'\n-----\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [AU]:US\nState or Province Name (full name) [Some-State]:Oregon\nLocality Name (eg, city) []:Portland\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:Miguel Grinberg Blog\nOrganizational Unit Name (eg, section) []:\nCommon Name (e.g. server FQDN or YOUR name) []:localhost\nEmail Address []:\n```\n\n\n\n现在，我们可以在 Flask 应用程序中使用这个新的自签名证书，方法是将 app.run()中的 ssl_context 参数设置为一个元组，其中包含证书和私钥文件的文件名。\n\n```python\nrom flask import Flask\napp = Flask(__name__)\n@app.route(\"/\")\ndef hello():\n    return \"Hello World!\"\nif __name__ == \"__main__\":\n    app.run(ssl_context=('cert.pem', 'key.pem'))\n```\n\n\n\n如果你使用的是Flask 1.x或更高版本，则可以在flask run命令中添加--cert和--key选项：\n\n```bash\n$ flask run --cert=cert.pem --key=key.pem\n```\n\n\n\n浏览器仍然会告警，但是如果你检查这个证书，你会看到你创建它时输入的信息\n\n\n\n## 使用生产 Web 服务器\n\n我们都知道 Flask 开发服务器只适用于开发和测试。那么，我们如何在生产服务器上安装 SSL 证书呢？\n​\n\n如果你使用 gunicorn，你可以使用命令行参数:\n\n```bash\n$ gunicorn --certfile cert.pem --keyfile key.pem -b 0.0.0.0:8000 hello:app\n```\n\n\n\n如果你使用 nginx 作为反向代理, 暂时不会:blush:\n\n\n\n转载自https://www.cnblogs.com/geekspeng/articles/15054877.html, 如涉及侵权，请联系删除"},{"title":"最强程序员硬核表白","url":"/2023/04/19/zui-qiang-cheng-xu-yuan-ying-he-biao-bai/","content":"\n# 最强程序员硬核表白\n\n\n\n## 超级无敌炫酷之圣诞树\n\n\n\n**先上效果!**\n\n![image-20230419213824494](https://shiningonly.oss-cn-shenzhen.aliyuncs.com/typora/image-20230419213824494.png)\n\n注意! 这只是简化版, 到时候可以加名字这些的\n\n\n\n## 实现过程\n\n此作品由`python`的`pygame` 和`turtle`编写而成, 具体代码如下:\n\n```python\nfrom turtle import *\nimport time\nimport pygame# 导入pygame资源包\n\nfile=r'bgm.mp3'# 音乐的路径\n\npygame.mixer.init()# 初始化\n\ntrack = pygame.mixer.music.load(file)# 加载音乐文件\n\npygame.mixer.music.play()# 开始播放音乐流\n\nsetup(500, 500, startx=None, starty=None)\nspeed(0)\npencolor(\"pink\")\npensize(10)\npenup()\nhideturtle()\ngoto(0, 150)\nshowturtle()\npendown()\nshape(name=\"classic\")\n# 1\nseth(-120)\nfor i in range(10):\n    fd(12)\n    right(2)\npenup()\ngoto(0, 150)\nseth(-60)\npendown()\nfor i in range(10):\n    fd(12)\n    left(2)\nseth(-150)\npenup()\nfd(10)\npendown()\nfor i in range(5):\n    fd(10)\n    right(15)\nseth(-150)\npenup()\nfd(8)\npendown()\nfor i in range(5):\n    fd(10)\n    right(15)\nseth(-155)\npenup()\nfd(5)\npendown()\nfor i in range(5):\n    fd(7)\n    right(15)\n# 2\npenup()\ngoto(-55, 34)\npendown()\nseth(-120)\nfor i in range(10):\n    fd(8)\n    right(5)\n\npenup()\ngoto(50, 35)\nseth(-60)\npendown()\nfor i in range(10):\n    fd(8)\n    left(5)\nseth(-120)\npenup()\nfd(10)\nseth(-145)\npendown()\nfor i in range(5):\n    fd(10)\n    right(15)\npenup()\nfd(10)\nseth(-145)\npendown()\nfor i in range(5):\n    fd(12)\n    right(15)\npenup()\nfd(8)\nseth(-145)\npendown()\nfor i in range(5):\n    fd(10)\n    right(15)\npenup()\nseth(-155)\nfd(8)\npendown()\nfor i in range(5):\n    fd(11)\n    right(15)\n# 3\npenup()\ngoto(-100, -40)\nseth(-120)\npendown()\nfor i in range(10):\n    fd(6)\n    right(3)\npenup()\ngoto(80, -39)\nseth(-50)\npendown()\nfor i in range(10):\n    fd(6)\n    left(3)\nseth(-155)\npenup()\nfd(10)\npendown()\nfor i in range(5):\n    fd(8)\n    right(10)\npenup()\nfd(8)\nseth(-145)\npendown()\nfor i in range(7):\n    fd(8)\n    right(10)\npenup()\nfd(8)\nseth(-145)\npendown()\nfor i in range(7):\n    fd(7)\n    right(10)\npenup()\nfd(8)\nseth(-145)\npendown()\nfor i in range(7):\n    fd(7)\n    right(10)\npenup()\nfd(8)\nseth(-140)\npendown()\nfor i in range(7):\n    fd(6)\n    right(10)\n\n# 4\npenup()\ngoto(-120, -95)\nseth(-130)\npendown()\nfor i in range(7):\n    fd(10)\n    right(5)\npenup()\ngoto(100, -95)\nseth(-50)\npendown()\nfor i in range(7):\n    fd(10)\n    left(5)\npenup()\nseth(-120)\nfd(10)\nseth(-155)\npendown()\nfor i in range(6):\n    fd(8)\n    right(10)\npenup()\nseth(-160)\nfd(10)\nseth(-155)\npendown()\nfor i in range(6):\n    fd(8)\n    right(10)\npenup()\nseth(-160)\nfd(10)\nseth(-155)\npendown()\nfor i in range(6):\n    fd(8)\n    right(10)\npenup()\nseth(-160)\nfd(10)\nseth(-160)\npendown()\nfor i in range(6):\n    fd(8)\n    right(10)\npenup()\nseth(-160)\nfd(10)\nseth(-160)\npendown()\nfor i in range(6):\n    fd(8)\n    right(10)\npenup()\nseth(-160)\nfd(10)\nseth(-165)\npendown()\nfor i in range(5):\n    fd(10)\n    right(11)\n# 5\npenup()\ngoto(-70, -165)\nseth(-85)\npendown()\nfor i in range(3):\n    fd(5)\n    left(3)\npenup()\ngoto(70, -165)\nseth(-95)\npendown()\nfor i in range(3):\n    fd(5)\n    right(3)\nseth(-170)\npenup()\nfd(10)\npendown()\npendown()\nfor i in range(10):\n    fd(12)\n    right(2)\n# 6\npenup()\ngoto(70, -165)\npendown()\nseth(-90)\npensize(8)\npencolor(\"#de8891\")\ncircle(-20, 90)\n\npenup()\ngoto(30, -185)\npendown()\nseth(-180)\npensize(8)\npencolor(\"#de8891\")\nfd(40)\n\npenup()\ngoto(-5, -170)\npendown()\nseth(-180)\npensize(8)\npencolor(\"#de8891\")\nfd(35)\n\n\ndef guest(x, y, z):\n    penup()\n    goto(x, y)\n    seth(-z)\n    pendown()\n    for angel in range(5):\n        fd(10)\n        right(10)\n\n\ndef guet(x, y, z):\n    penup()\n    goto(x, y)\n    seth(-z)\n    pendown()\n    for angel in range(5):\n        fd(10)\n        left(10)\n\n\ndef qu(x, y, z):\n    penup()\n    goto(x, y)\n    seth(-z)\n    pendown()\n    for angel in range(5):\n        fd(6)\n        right(10)\n    seth(-150)\n    fd(20)\n\n\n# 树枝\nguest(-70, -150, 160)\nguest(100, -150, 160)\nguet(110, -110, 50)\nguest(160, -140, 150)\nqu(80, -120, 180)\nguest(70, -85, 165)\nguest(-40, -85, 165)\nguet(90, -50, 50)\nguest(130, -80, 150)\npencolor(\"pink\")\nqu(-40, -60, 180)\npencolor('#de8891')\nqu(80, -30, 180)\npencolor(\"pink\")\nqu(40, 10, 180)\npencolor(\"#de8891\")\nguest(-60, 30, 120)\nguest(-20, -20, 150)\nguet(45, 40, 60)\nguest(-30, 40, 170)\nguest(-30, 110, 115)\nguet(40, 90, 60)\nguest(80, 50, 160)\npencolor(\"#de8891\")\n\n\ndef hdj(x, y):\n    penup()\n    goto(x, y)\n    seth(80)\n    pendown()\n    pensize(2)\n    circle(5)\n    seth(10)\n    fd(15)\n    seth(120)\n    fd(20)\n    seth(240)\n    fd(20)\n    seth(180)\n    fd(20)\n    seth(-60)\n    fd(20)\n    seth(50)\n    fd(20)\n    seth(-40)\n    fd(30)\n    seth(-130)\n    fd(5)\n    seth(135)\n    fd(30)\n    seth(-60)\n    fd(30)\n    seth(-150)\n    fd(6)\n    seth(110)\n    fd(30)\n\n\ndef uit(x, y):\n    penup()\n    goto(x, y)\n    pendown()\n    pensize(2)\n    circle(5)\n    seth(-10)\n    fd(15)\n    seth(90)\n    fd(15)\n    seth(200)\n    fd(15)\n    seth(160)\n    fd(15)\n    seth(-90)\n    fd(15)\n    seth(10)\n    fd(15)\n    seth(-60)\n    fd(20)\n    seth(-180)\n    fd(5)\n    seth(110)\n    fd(20)\n    seth(-90)\n    fd(20)\n    seth(-180)\n    fd(6)\n    seth(70)\n    fd(15)\n    hideturtle()\n\n\ndef yut(x, y, z):\n    penup()\n    goto(x, y)\n    pendown()\n    seth(z)\n    for po in range(5):\n        fd(4)\n        left(36)\n\n\ndef ytu(x, y, z):\n    penup()\n    goto(x, y)\n    pendown()\n    seth(z)\n    for kk in range(5):\n        fd(4)\n        left(36)\n\n\n# 小蝴蝶结\nseth(0)\nuit(40, -160)\nhdj(-80, -120)\nyut(-67, -115, 120)\nyut(-86, -123, 150)\nhdj(40, -50)\nyut(52, -45, 130)\nyut(34, -55, 160)\nseth(0)\nuit(-20, -60)\nytu(-4, -60, 100)\nytu(-20, -60, 120)\nhdj(-30, 20)\nyut(-15, 25, 130)\nyut(-40, 20, 180)\nuit(30, 70)\nytu(45, 70, 100)\nytu(30, 70, 120)\n\n# 大蝴蝶结\npencolor(\"#f799e6\")\npensize(5)\npenup()\nseth(0)\ngoto(0, 150)\npendown()\ncircle(10)\nseth(-15)\nfd(40)\nseth(90)\nfd(40)\nseth(200)\nfd(40)\nseth(160)\nfd(40)\nseth(-90)\nfd(40)\nseth(15)\nfd(40)\nseth(-70)\npencolor(\"#f799e6\")\npensize(4)\nfd(40)\nseth(-180)\nfd(10)\nseth(100)\nfd(40)\nseth(-100)\nfd(40)\nseth(-180)\nfd(10)\nseth(70)\nfd(40)\npenup()\nseth(0)\ngoto(0, 130)\npencolor(\"pink\")\npendown()\n\n\ndef iou(x, y, z):\n    penup()\n    goto(x, y)\n    pencolor(\"#f799e6\")\n    pendown()\n    seth(z)\n    for po in range(10):\n        fd(4)\n        left(18)\n\n\nseth(0)\niou(35, 145, 100)\niou(-7, 145, 110)\npencolor(\"red\")\npensize(7)\npenup()\ngoto(-35, 135)\npendown()\n\n# 圣诞帽\nseth(-20)\npensize(2)\npenup()\ngoto(-30, -120)\npencolor(\"black\")\npendown()\nfillcolor(\"red\")\nfd(30)\ncircle(4, 180)\nfd(30)\ncircle(4, 180)\npenup()\ngoto(-25, -115)\nseth(75)\npendown()\nbegin_fill()\nfor i in range(5):\n    fd(6)\n    right(20)\nseth(-10)\nfor i in range(5):\n    fd(8)\n    right(15)\nseth(145)\nfor i in range(5):\n    fd(5)\n    left(2)\nseth(90)\nfor i in range(5):\n    fd(1)\n    left(2)\nseth(-90)\nfor i in range(4):\n    fd(4)\n    right(6)\nseth(161)\nfd(30)\nend_fill()\npensize(1)\npencolor(\"black\")\n\n\ndef koc(x, y, size):\n    pensize(2)\n    pencolor(\"black\")\n    penup()\n    goto(x, y)\n    pendown()\n    begin_fill()\n    fillcolor(\"yellow\")\n    for i in range(5):\n        left(72)\n        fd(size)\n        right(144)\n        fd(size)\n    end_fill()\n\n\n# 星星\nseth(-15)\nkoc(-120, -70, 10)\nseth(10)\nkoc(100, -20, 10)\nseth(-10)\nkoc(10, 40, 10)\nseth(30)\nkoc(-80, 60, 10)\nkoc(100, -150, 10)\nkoc(-140, -150, 10)\nkoc(20, 120, 10)\n\n# 袜子\nseth(-20)\npensize(2)\npenup()\ngoto(-20, 80)\npencolor(\"black\")\npendown()\nfillcolor(\"red\")\nfd(25)\ncircle(4, 180)\nfd(25)\ncircle(4, 180)\npenup()\ngoto(-15, 80)\npendown()\nbegin_fill()\nfillcolor(\"red\")\nseth(-120)\nfd(20)\nseth(150)\nfd(5)\ncircle(7, 180)\nfd(15)\ncircle(5, 90)\nfd(30)\nseth(160)\nfd(18)\nend_fill()\npenup()\nseth(0)\ngoto(100, -230)\npendown()\nwrite(\"Merry Christmas \", align=\"right\", font=(\"方正黄草简体\", 20, \"bold\"))\ndone()\n\n\n```\n\n\n\n把对应的bgm音乐放到相应的路径就可以啦"},{"title":"控制系统的综合与校正","url":"/2023/02/17/kong-zhi-xi-tong-de-zong-he-yu-xiao-zheng/","content":"\n# 控制系统的综合与校正\n\n\n\n## 系统基础校正\n\n\n\n### 校正的基本概念\n\n> **校正就是在系统原有部分, 也称为未校正部分的基础上, 加入一些参数或结构, 可根据需要改变的校正装置.**\n\n\n\n### 校正方式\n\n- 串联校正\n- 局部反馈校正\n- 复合校正: 给定整形滤波后, 送入系统\n\n\n\n## PID校正\n\n\n\n### 比例(P)环节\n\n无相移校正\n\n### 比例-微分(PD)控制\n\n> ＰＤ控制是相角超前控制\n\n1. 有效的改善系统的动态性能\n2. 相对稳定性提高了\n3. 系统的快速性得到了提高\n4. 使得系统抗高频干扰能力下降\n\n### 比例-积分(PI)控制\n\n> ＰＩ控制是相角滞后控制\n\n1. 增加了系统型别, 有效改善了系统的稳态性能\n1. 它会损失相位裕量, 降低系统的相对稳定性 \n\n### 比例-积分-微分(PID)控制\n\n> PID控制本质上是一种滞后-超前校正\n\n1. 在低频段起积分作用, 可以改善系统的稳态性能\n2. 在中 高频段则起微分作用, 使系统的幅值穿越频率Wc增大, 快速得到提高, 系统的相位裕量增大, 相对稳定性提高, 改善了系统的动态性能\n3. 使系统的稳态性能和动态性能都得到了全面提高"},{"title":"发电厂电气部分","url":"/2023/02/02/fa-dian-han-dian-qi-bu-fen/","content":"\n## 第一章\n\n\n\n### 发电厂类型\n\n1. 火电厂\n   - 凝气式火电厂\n   - 热电厂\n   - 燃气轮机发电厂\n2. 水电站\n   - 坝式水电站\n   - 引水式水电站\n   - 抽水蓄能电站\n\n1. 核电站\n2. 新能源发电\n\n\n\n### 变电站类型\n\n> 根据变电站在系统中的地位, 可分成四类\n\n1. 枢纽变电站\n2. 中间变电站\n3. 地区变电站\n4. 终端变电站\n\n\n\n## 第二章\n\n\n\n### 导体分类\n\npass\n\n\n\n### 导体最高允许温度\n\n\n\n**裸导体长期工作时**\n\n1. 最高允许温度一般情况下为70℃\n2. 钢芯铝绞线及管型导体为80℃\n3. 当导体接触处有镀锡的可靠覆盖层时为85℃, 有银的覆盖层时为95℃\n\n\n\n**裸导体通过短路电流时的短时最高允许温度**\n\n1. 对硬铝及铝锰合金为200℃\n2. 对硬铜为300℃\n\n\n\n### 提高导体载流量的措施\n\n1. 减小导体电阻R\n\n2. 增大导体的换热面F\n   1. 提高换热系数α\n   2. 导体的布置尽量采用散热最佳的方式, 如矩形导体竖放较平放散热效果好\n   3. 屋内配电装置的导体表面涂漆, 可提高辐射系数ε, 从而提高辐射散热能力, 但屋外配电装置的导体不宜涂漆, 而保留光亮表面, 以减少对日照热量的吸收\n   4. 采用强迫冷却\n\n\n\n\n### 开关电器中电弧的产生及熄灭\n\n**游离 去游离**\n\n   pass\n\n**熄灭交流电弧的方法**\n\n1. 采用灭弧能力强的灭弧介质\n\n   > 变压器油、压缩空气、SF6气体、真空\n\n2. 利用气体或油吹弧\n\n   > 吹弧方式有纵吹和横吹2种\n\n3. 采用特殊金属材料作灭弧触头\n\n4. 在断路器的主触头两端加装低值并联电阻\n\n5. 采用多端口熄弧\n\n6. 提高断路器触头的分离速度\n\n7. 低压开关中的熄弧方法\n\n\n\n## 第三章\n\n\n\n### 开关\n\n主要包括高压短路器、低压开关电器和熔断器等\n\n\n\n## 第四章\n\n\n\n### 电气主接线的基本要求\n\n1. 可靠性\n2. 灵活性\n3. 经济性\n\n\n\n### 限制短路电流的措施\n\n1. 选择适当的主接线形式和运行方式\n\n2. 加装限流电抗器\n\n   > 6~10kv 电缆出线处 架空线路一般不装\n\n3. 采用低压分裂绕组变压器\n\n   - 优点\n     1. 正常电流所遇电抗小\n     2. 短路电流所遇到的电抗大， 有显著的限流作用\n\n\n\n##　第五章\n\n\n\n###  厂用负荷\n\n分类:\n\n1. Ⅰ类负荷\n2. Ⅱ类负荷\n3. Ⅲ类负荷\n4. 事故保安负荷\n   1. 直流保安负荷\n   2. 允许短时停电的交流保安负荷\n5. 交流不间断供电负荷\n\n### 厂用功率\n\n- 一般凝气式火电厂为5%~8%\n- 热电厂为8%~10%\n- 水电站为0.3%~2%\n\n### 厂用电源\n\n工作电源、 备用电源 、启动电源、事故保安电源\n\n\n\n**自启动类型**\n\n高压厂用母线\n\n- 失压或空载自启动\n- 带负荷自启动\n\n低压厂用母线\n\n- 低压母线单独供电电动机自启动\n- 低压母线与高压母线串联供电电动机自启动\n\n\n\n**不满足自启动措施**\n\n1. 限制参加自启动电动机的数量\n2. 由于阻转矩为定值的重要设备的电动机只能在接近额定电压下启动, 所以, 也不参加自启动. 对这类设备的电动机均可采用低电压保护, 当厂用母线电压低于临界值时, 使他们从母线上断开, 以改善未断开的重要设备电动机的自启动条件\n3. 对重要的机械设备, 选用具有高启动转矩和允许过载倍数较大的电动机\n4. 不得已的情况下, 另行选用较大容量的厂用变压器\n\n\n\n## 第六章\n\n\n\n### 电气设备选择原则\n\n1. 按额定电压选择\n2. 按额定电流选择\n3. 选择设备的种类和型式\n\n\n\n**短路时间**\n\ntk = tpr + tab\n\n- tpr为后备继电保护动作时间\n- tab为断路器全开断时间\n  - SF   0.02~0.04s\n  - 少油断路器   0.04~0.06s\n\n### 校验\n\npass\n\n\n\n## 第七章\n\n### 成套配电装置\n\n- 低压配电屏(柜): 1kv以下 屋内\n- 高压开关柜: 1kv~35kv 屋内\n- 成套变电站: 6kv/10kv/35kv 屋外\n- SF6全封闭组合电器(GIS) 110kv及以上 屋内/外\n\n\n\n## 第十章\n\n\n\n### 二次回路\n\n- 控制回路: 通过控制开关设备的\"合\", \"跳\"实现电气设备的投入和退出\n- 信号回路: 反映一次设备的工作状态\n- 测量回路: 指示和记录一次设备的运行参数\n- 调节回路: 实时在线调节一次设备的运行状态, 以满足运行要求\n- 继电保护和自动装置回路: 操作电源系统, \n\n\n\n### 中央信号\n\n中央信号由事故信号和预估信号组成, 分别用来反映电气设备的事故及一场运行状态.中央信号装于控制室的中央信号屏上, 是控制室控制的所有安装单位的公用装置\n\n- **事故信号**\n\n  作用: 当断路器发生跳闸时, 启动蜂鸣器发出音响, 同志运行人员处理事故\n\n  事故信号装置有个别复归 不能重复动作和中央复归 能重复动作两类\n\n- **预估信号**\n\n  作用: 当运行设备出现危及安全运行的异常情况(如发电机过负荷 变压器过负荷 变压器油温过高 电压互感器回路断线等) 时, 响警铃"},{"title":"github基础使用","url":"/2023/01/13/github-ji-chu-shi-yong/","content":"\n\n\n# 官方\n\n>```bash\n>git init\n>git add README.md\n>git commit -m \"first commit\"\n>git branch -M main\n>git remote add origin https://github.com/shenglinonly/web-monitor.git\n>git push -u origin main\n>```\n\n\n\n### 1.5 Git 的使用\n\n#### 1.5.1 Git 使用前配置\n\n在使用 git 前，需要告诉 git 你是谁，在向 git 仓库中提交时需要用到。\n\n1. 配置提交人姓名：`git config --global user.name 提交人姓名`\n2. 配置提交人姓名：`git config --global user.email 提交人邮箱` \n3. 查看git配置信息：`git config --list`   \n\n**注意**\n\n1. 如果要对配置信息进行修改，重复上述命令即可。\n\n2. 配置只需要执行一次。\n\n#### 1.5.2 提交步骤\n\n1. `git init` 初始化git仓库\n2. `git status` 查看文件状态\n3. `git add 文件列表` 追踪文件\n4. `git commit -m 提交信息`  向仓库中提交代码\n5. `git log` 查看提交记录\n\n\n\ngit push 远程仓库地址 分支名称\n\ngit push 远程仓库地址别名 分支名称\n\ngit push -u 远程仓库地址别名 分支名称\n\n-u 记住推送地址及分支，下次推送只需要输入git push即可\n\ngit remote add 远程仓库地址别名 远程仓库地址"},{"title":"鹰眼智能监控识别系统","url":"/2023/01/13/ying-yan-zhi-neng-jian-kong-shi-bie-xi-tong/","content":"\n# 鹰眼智能监控检测系统\n\n\n\n>**本项目采用 esp32-cam + micropython + flask + yolo 格式, 打造web视频监控和目标检测**\n\n\n\n## 介绍\n\n- 硬件: ESP32-CAM是一个开发板双核, 性能强悍，它上面集成了Camera摄像头模块.\n\n- 软件: 在esp32-cam上用到了micro python进行编写, flask框架搭建浏览器界面, yolo实现目标检测.\n\n\n\n## 代码\n\n\n\n### 一、esp32-cam(micro python)\n\n> esp32链接WiFi通过camrea拍摄图片并通过socket通信传到服务端\n\n#### 链接WiFi \n\n```python\nimport network\n# 连接wifi\nwlan = network.WLAN(network.STA_IF)\nwlan.active(True)\nif not wlan.isconnected():\n    print('connecting to network...')\n    wlan.connect('CMCC-w9V7', 'password')\n\n    while not wlan.isconnected():\n        pass\nprint('网络配置:', wlan.ifconfig())\n```\n\n\n\n#### 初始化摄像头\n\n```python\nimport camera\n# 摄像头初始化\ntry:\n    camera.init(0, format=camera.JPEG)\nexcept Exception as e:\n    camera.deinit()\n    camera.init(0, format=camera.JPEG)\n\n# 其他设置：\n# 上翻下翻\ncamera.flip(0)\n# 左/右\ncamera.mirror(1)\n\n# 分辨率\ncamera.framesize(camera.FRAME_HVGA)\n# 选项如下：\n# FRAME_96X96 FRAME_QQVGA FRAME_QCIF FRAME_HQVGA FRAME_240X240\n# FRAME_QVGA FRAME_CIF FRAME_HVGA FRAME_VGA FRAME_SVGA\n# FRAME_XGA FRAME_HD FRAME_SXGA FRAME_UXGA FRAME_FHD\n# FRAME_P_HD FRAME_P_3MP FRAME_QXGA FRAME_QHD FRAME_WQXGA\n# FRAME_P_FHD FRAME_QSXGA\n# 有关详细信息，请查看此链接：https://bit.ly/2YOzizz\n\n# 特效\ncamera.speffect(camera.EFFECT_NONE)\n# 选项如下：\n# 效果\\无（默认）效果\\负效果\\ BW效果\\红色效果\\绿色效果\\蓝色效果\\复古效果\n# EFFECT_NONE (default) EFFECT_NEG \\EFFECT_BW\\ EFFECT_RED\\ EFFECT_GREEN\\ EFFECT_BLUE\\ EFFECT_RETRO\n\n# 白平衡\ncamera.whitebalance(camera.WB_HOME)\n# 选项如下：\n# WB_NONE (default) WB_SUNNY WB_CLOUDY WB_OFFICE WB_HOME\n\n# 饱和\ncamera.saturation(0)\n# -2,2（默认为0）. -2灰度\n# -2,2 (default 0). -2 grayscale\n\n# 亮度\ncamera.brightness(0)\n# -2,2（默认为0）. 2亮度\n# -2,2 (default 0). 2 brightness\n\n# 对比度\ncamera.contrast(0)\n# -2,2（默认为0）.2高对比度\n# -2,2 (default 0). 2 highcontrast\n\n# 质量\ncamera.quality(10)\n# 10-63数字越小质量越高\n\n# socket UDP 的创建\ns = socket.socket(socket.AF_INET, socket.SOCK_DGRAM, 0)\n```\n\n\n\n####  socket通信\n\n```python\nimport socket\nimport time\n\ntry:\n    while True:\n        buf = camera.capture()  # 获取图像数据\n        s.sendto(buf, (\"192.168.x.x\", 9090))  # 向服务器发送图像数据\n        time.sleep(0.1)\nexcept:\n    pass\nfinally:\n    camera.deinit()\n\n\n```\n\n\n\n### 二、服务端 (python)\n\n#### 1. 接受数据\n\n>用到了python的生成器\n\n```python\nimport socket\nimport cv2\nimport io\nfrom PIL import Image\nimport numpy as np\n\n\ns = socket.socket(socket.AF_INET, socket.SOCK_DGRAM, 0)\ns.bind((\"0.0.0.0\", 9090))\n\n\ndef rec():\n    while True:\n        data, ip = s.recvfrom(100000)\n        bytes_stream = io.BytesIO(data)\n        image = Image.open(bytes_stream)\n        img_1 = np.asarray(image)\n        img_2 = cv2.cvtColor(img_1, cv2.COLOR_RGB2BGR)  # ESP32采集的是RGB格式，要转换为BGR（opencv的格式）\n        img_3 = cv2.flip(img_2, 1)  # 镜像翻转\n        yield img_3\n\n\n```\n\n \n\n#### 2. yolo检测\n\n```python\n# -*- coding: utf-8 -*-\n# 载入所需库\nimport cv2\nimport numpy as np\n# import os\nimport time\n\n\ndef yolo_detect(old_img,\n                # pathIn='',\n                # pathOut=None,\n                # label_path='./cfg/coco.names',\n                # config_path='./cfg/yolov3.cfg',\n                # weights_path='./cfg/yolov3.weights',\n                LABELS,\n                nclass,\n                net,\n                confidence_thre=0.5,\n                nms_thre=0.3,\n                jpg_quality=80):\n    '''\n    pathIn：原始图片的路径\n    pathOut：结果图片的路径\n    label_path：类别标签文件的路径\n    config_path：模型配置文件的路径\n    weights_path：模型权重文件的路径\n    confidence_thre：0-1，置信度（概率/打分）阈值，即保留概率大于这个值的边界框，默认为0.5\n    nms_thre：非极大值抑制的阈值，默认为0.3\n    jpg_quality：设定输出图片的质量，范围为0到100，默认为80，越大质量越好\n    '''\n\n    # 为每个类别的边界框随机匹配相应颜色\n    np.random.seed(42)\n    COLORS = np.random.randint(0, 255, size=(nclass, 3), dtype='uint8')\n\n    # 载入图片并获取其维度\n    # base_path = os.path.basename(pathIn)\n    # img = cv2.imread(pathIn)\n    img = old_img\n    (H, W) = img.shape[:2]\n\n    # 获取YOLO输出层的名字\n    ln = net.getLayerNames()\n    ln = [ln[i - 1] for i in net.getUnconnectedOutLayers()]\n\n    # 将图片构建成一个blob，设置图片尺寸，然后执行一次\n    # YOLO前馈网络计算，最终获取边界框和相应概率\n    blob = cv2.dnn.blobFromImage(img, 1 / 255.0, (416, 416), swapRB=True, crop=False)\n    net.setInput(blob)\n    start = time.time()\n    layerOutputs = net.forward(ln)\n    end = time.time()\n\n    # 显示预测所花费时间\n    # print('YOLO模型花费 {:.2f} 秒来预测一张图片'.format(end - start))\n\n    # 初始化边界框，置信度（概率）以及类别\n    boxes = []\n    confidences = []\n    classIDs = []\n\n    # 迭代每个输出层，总共三个\n    for output in layerOutputs:\n        # 迭代每个检测\n        for detection in output:\n            # 提取类别ID和置信度\n            scores = detection[5:]\n            classID = np.argmax(scores)\n            confidence = scores[classID]\n\n            # 只保留置信度大于某值的边界框\n            if confidence > confidence_thre:\n                # 将边界框的坐标还原至与原图片相匹配，记住YOLO返回的是\n                # 边界框的中心坐标以及边界框的宽度和高度\n                box = detection[0:4] * np.array([W, H, W, H])\n                (centerX, centerY, width, height) = box.astype(\"int\")\n\n                # 计算边界框的左上角位置\n                x = int(centerX - (width / 2))\n                y = int(centerY - (height / 2))\n\n                # 更新边界框，置信度（概率）以及类别\n                boxes.append([x, y, int(width), int(height)])\n                confidences.append(float(confidence))\n                classIDs.append(classID)\n\n    # 使用非极大值抑制方法抑制弱、重叠边界框\n    idxs = cv2.dnn.NMSBoxes(boxes, confidences, confidence_thre, nms_thre)\n\n    # 确保至少一个边界框\n    if len(idxs) > 0:\n        # 迭代每个边界框\n        for i in idxs.flatten():\n            # 提取边界框的坐标\n            (x, y) = (boxes[i][0], boxes[i][1])\n            (w, h) = (boxes[i][2], boxes[i][3])\n\n            # 绘制边界框以及在左上角添加类别标签和置信度\n            color = [int(c) for c in COLORS[classIDs[i]]]\n            cv2.rectangle(img, (x, y), (x + w, y + h), color, 2)\n            text = '{}: {:.3f}'.format(LABELS[classIDs[i]], confidences[i])\n            (text_w, text_h), baseline = cv2.getTextSize(text, cv2.FONT_HERSHEY_SIMPLEX, 0.5, 2)\n            cv2.rectangle(img, (x, y - text_h - baseline), (x + text_w, y), color, -1)\n            cv2.putText(img, text, (x, y - 5), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 0, 0), 2)\n\n    return img\n\n    # # 输出结果图片\n    # if pathOut is None:\n    #     cv2.imwrite('with_box_' + base_path, img, [int(cv2.IMWRITE_JPEG_QUALITY), jpg_quality])\n    # else:\n    #     cv2.imwrite(pathOut, img, [int(cv2.IMWRITE_JPEG_QUALITY), jpg_quality])\n\n\n# yolo_detect(pathIn='./test.jpg', pathOut='./result./test.jpg')\n\n\n```\n\n#### 3. 使用yolo\n\n```python\nfrom yolo_fastest import yolo_detect\n\nimport cv2\n\nfrom recive import rec\n\nlabel_path = './cfg/coco.names'\nconfig_path = './cfg/yolo-fastest-xl-coco.cfg'\nweights_path = './cfg/yolo-fastest-xl-coco.weights'\n\n# 加载类别标签文件\nLABELS = open(label_path).read().strip().split(\"\\n\")\nnclass = len(LABELS)\n\n# 加载模型配置和权重文件\nprint('从硬盘加载YOLO......')\nnet = cv2.dnn.readNetFromDarknet(config_path, weights_path)\n\n\ndef yoloing():\n    img_4 = rec()  # 生成器对象\n    for i in img_4:  # 生成器迭代\n        img_5 = yolo_detect(old_img=i, LABELS=LABELS, nclass=nclass, net=net)  # yolo检测\n        \"\"\"数据处理(处理成可以流视频播放的数据)\"\"\"\n        ret, jpeg = cv2.imencode('.jpg', img_5)\n        image = jpeg.tobytes()\n        yield image\n\n\n\n```\n\n#### 4. flask搭建\n\n>此处用到了flask的流视频传输\n\n```python\nfrom flask import Flask, render_template, Response\nfrom use_yolo import yoloing\nimport cv2\n\napp = Flask(__name__)\n\n\n@app.route('/')\ndef index():\n    return render_template('index.html')\n\n\ndef gen():\n    while True:\n        image = yoloing()\n        # 生成器迭代\n        for i in image:\n            yield (b'--frame\\r\\n'\n                   b'Content-Type: image/jpeg\\r\\n\\r\\n' + i + b'\\r\\n')\n\n\n@app.route('/video_feed')\ndef video_feed():\n    return Response(gen(), mimetype='multipart/x-mixed-replace; boundary=frame')\n\n\nif __name__ == '__main__':\n    app.run()\n\n```\n\n#### 5. html页面(jinja2引擎)\n\n````html\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>title</title>\n    <link rel=\"Shortcut Icon\" href=\"{{ url_for('static', filename='images/favicon.ico') }}\">\n    <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='css/hello.css') }}\">\n</head>\n<body>\n      <img src=\"{{ url_for('video_feed') }}\" height=\"550\" alt=\"\">\n</body>\n</html>\n\n\n````\n\n"},{"title":"termux文件导入导出","url":"/2022/08/20/termux-wen-jian-dao-ru-dao-chu/","content":"\n\n# termux文件导入导出\n\n手机安装termux后就可以像Linux一样操作啦, 但是遇到两个问题:\n\n1. 怎样让termux访问手机的内部存储\n2. 怎样将termux的根目录文件传递到手机呢\n\n---\n\n## answer1\n\n想要让termux访问手机存储, 只需要输入这行命令:\n\n```\ntermux-setup-storage # 申请获取系统文件权限\n```\n\n就可以啦!\n\n## answer2\n\n> **termux的根目录是在`/data/data/com.termux/files/home/`, 默认情况下(手机没root)手机的文件管理器是访问不了的, 会提示权限不够或者是根本看不到, 那我们怎样拿到termux里面的文件呢?**\n\n+ **其实手机的内部存储入口就在当前文件夹下`sotrage/shared`里面, 你可以cd进入到这个文件目录, 再ls一下会发现他就是你手机的内部存储**\n+ **还有一种方法就是直接输入命令` cd /storage/emulated/0/`, 其切换到的目录就是手机内部存储的目录**\n\n最后只需要cp或者mv某文件到该目录就可以实现将termux目录中的文件传递到手机存储啦!\n"},{"title":"二级_ms_office","url":"/2022/08/09/er-ji-ms-office/","content":"\n\n1. 对于任何一个二叉树, 总共有三种度数的结点(0, 1, 2), 度为0的结点总是比度为2的结点多一个, 树中的结点数即为树种所有结点的度数之和再加1\n2. 冒泡排序在最坏的情况下, 对长度为n的线性表排序,  需要比较的次数为n(n-1)/2 \n3. 软件的三要素是 程序 数据 及 相关文档\n3. Word里的【分页符】只是起到了将目标内容快速移动到当前页的下一页；分节符则是在起到将目标内容快速移动到当前页的下一页的功能外，还可以将文档的不同页面设置成不同的页面尺寸、页边距、纸张横纵向、水印的不同等等。"},{"title":"苹果手机原生遥控器控制安卓TV","url":"/2022/04/26/ping-guo-shou-ji-yuan-sheng-yao-kong-qi-kong-zhi-an-zhuo-tv/","content":"\n# 苹果手机原生遥控器控制安卓TV\n\n> 实现原理：通过homeassistant搭配nodered控制开启ADB调试的安卓电视并通过相关插件接入到homekit\n\n\n\n## 安卓TV开启ADB调试\n\n安卓tv开启ADB调试网上方法有很多，自行百度，这里不再赘述，可以看一下我提供的参考链接\n\n因为我是海信vidda的, 这里推荐一个vidda开启ADB的[参考链接](https://www.znds.com/tv-1239474-1-1.html), 其他设备可以自行搜索\n\n\n\n## 安装及配置homeassistant和node-red\n\n>  我这里用的N1盒子并刷入的istoreos系统，通过docker方式安装\n\n### homeassistant\n\n#### 安装\n\n在istore应用商店中搜索**homeassistant**并安装\n\n点击打开，再次安装\n\n浏览器输入`http://你的N1盒子ip:8123`打开ha界面, 信息随便填\n\n#### 配置\n\n填完后依次点击**设置-设备与服务-添加集成**, 搜索`Android Debug Bridge`并添加\n\n\n去路由器后台找到你的电视的**ip地址**, 最好顺便改成静态ip, 防止一段时间后ip变化无法控制到设备\n\n在插件中填入ip地址, 其他默认\n\n配置完后可以去**开发者工具-动作**里面通过ADB命令控制一下电视是否有反应, 如有, 电视调通\n\n#### 机器学习\n\n按照上一步ADB测试的方式, 学习动作代码\n\n- 动作选成**学习发送事件**\n- 选择设备\n- 注意: 每点击一下**执行动作**, 就要在**8秒**内按下遥控器的**一个按键**, 等待一段时间后, **通知栏**会弹出学习的代码\n\n复制冒号后引号内部分, 记录为这个按键对应的机器码\n\n依次学习按键上的相关代码(上、下、左、右、返回、ok、菜单)，记录保存\n\n#### 创建令牌\n\nhome assistant主界面依次点击左下角**用户名-安全-最底下创建令牌**, 令牌只能看到一次, 记录好\n\n### node-red\n\n因选择docker方式安装homeassistant， 无加载项商店，所以只能以docker方式安装**node-red**并通过相关插件与ha互通\n\n```\ndocker run -d \\\n  -p 1880:1880 \\\n  -v /mnt/mydisk/tools/nodered/data:/data \\\n  -e TZ=Asia/Shanghai \\\n  --restart=unless-stopped \\\n  --name nodered \\\n  --network host \\\n  nodered/node-red\n```\n\n要添加`--network host`以确保手机可以搜索到设备\n\n安装完毕后浏览器输入`http://你的N1盒子ip:1880`进入node-red界面\n\n#### 安装插件\n\n点击右上角三条横-节点管理-安装, 搜索并依次安装两个插件: `node-red-contrib-home-assistant-websocket`  `node-red-contrib-homekit-bridged`\n\n至此插件安装完成\n\n\n\n#### 导入节点\n\n网上有很多参考节点, 具体转换函数我也不懂, 这里直接上传一个我自己用的, 可以参考\n\n里面的 ActiveIdentifier和 Set up inputs是手机控制直接打开软件的, 不是很好用, 没有这方面需求的可以和我一样删了, 如有需要, 可[参考链接](https://www.home-assistant.io/integrations/androidtv_remote/) \n\n#### 修改节点\n\n双击编辑所有蓝色节点\n\n- 修改所有的homeassistant, 点击右边小笔图标, 填入自己homeassistant的**ip**和**令牌**, 令牌取自上面创建的, 其他不变\n- 选择所有的**Action** 为 **androidtv.adb_command**\n- 选择所有的**device**或**entity**为自己的电视设备\n- 修改所有**Data**中\"command\":\"**修改部分**\", 替换成自己机器学习的代码， 注意按照Name对应修改\n\n\n\n#### 部署\n\n修改完所有配置后点击右上角部署按钮，**部署**\n\n## **手机控制**\n\n掏出苹果手机，打开**家庭APP**，点击**添加配件-更多选项**，正常会显示出你的电视设备，点击添加\n\n右上角控制栏下滑，最右下角有一个遥控图标，点击，接下来应该就可以通过苹果手机自带的遥控器遥控安卓TV了\n"},{"title":"Markdown编辑器基本语法","url":"/2020/08/16/markdown-bian-ji-qi-ji-ben-yu-fa/","content":"\n# Markdown编辑器基本语法\n\n## 快捷键\n\n撤销：<kbd>Ctrl/Command</kbd> + <kbd>Z</kbd>\n重做：<kbd>Ctrl/Command</kbd> + <kbd>Y</kbd>\n加粗：<kbd>Ctrl/Command</kbd> + <kbd>B</kbd>\n斜体：<kbd>Ctrl/Command</kbd> + <kbd>I</kbd>\n标题：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>H</kbd>\n无序列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>U</kbd>\n有序列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>O</kbd>\n检查列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>C</kbd>\n插入代码：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>K</kbd>\n插入链接：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>L</kbd>\n插入图片：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>G</kbd>\n查找：<kbd>Ctrl/Command</kbd> + <kbd>F</kbd>\n替换：<kbd>Ctrl/Command</kbd> + <kbd>G</kbd>\n\n## 合理的创建标题，有助于目录的生成\n\n直接输入1次<kbd>#</kbd>，并按下<kbd>space</kbd>后，将生成1级标题。\n输入2次<kbd>#</kbd>，并按下<kbd>space</kbd>后，将生成2级标题。\n以此类推，我们支持6级标题。有助于使用`TOC`语法后生成一个完美的目录。\n\n## 如何改变文本的样式\n\n*强调文本* _强调文本_\n\n**加粗文本** __加粗文本__\n\n==标记文本==\n\n~~删除文本~~\n\n> 引用文本\n\nH~2~O is是液体。\n\n2^10^ 运算结果是 1024.\n\n- [x] 完成\n- [ ] 未完成\n\n## 插入链接与图片\n\n链接: [link](https://www.csdn.net/).\n\n带尺寸的图片: ![Alt](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw =30x30)\n\n居中的图片: ![Alt](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center)\n\n居中并且带尺寸的图片: ![Alt](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center =30x30)\n\n当然，我们为了让用户更加便捷，我们增加了图片拖拽功能。\n\n## 如何插入一段漂亮的代码片\n\n去[博客设置](https://mp.csdn.net/console/configBlog)页面，选择一款你喜欢的代码片高亮样式，下面展示同样高亮的 `代码片`.\n```javascript\n// An highlighted block\nvar foo = 'bar';\n```\n\n## 生成一个适合你的列表\n\n- 项目\n  - 项目\n    - 项目\n\n1. 项目1\n2. 项目2\n3. 项目3\n\n- [ ] 计划任务\n- [x] 完成任务\n\n## 创建一个表格\n一个简单的表格是这么创建的：\n| 项目 | Value |\n| ---- | ----- |\n| 电脑 | $1600 |\n| 手机 | $12   |\n| 导管 | $1    |\n\n### 设定内容居中、居左、居右\n使用`:---------:`居中\n使用`:----------`居左\n使用`----------:`居右\n|     第一列     |         第二列 | 第三列         |\n| :------------: | -------------: | :------------- |\n| 第一列文本居中 | 第二列文本居右 | 第三列文本居左 |\n\n### SmartyPants\nSmartyPants将ASCII标点字符转换为“智能”印刷标点HTML实体。例如：\n| TYPE             | ASCII                           | HTML                          |\n| ---------------- | ------------------------------- | ----------------------------- |\n| Single backticks | `'Isn't this fun?'`             | 'Isn't this fun?'             |\n| Quotes           | `\"Isn't this fun?\"`             | \"Isn't this fun?\"             |\n| Dashes           | `-- is en-dash, --- is em-dash` | -- is en-dash, --- is em-dash |\n\n## 创建一个自定义列表\nMarkdown\n:  Text-to-HTML conversion tool\n\nAuthors\n:  John\n:  Luke\n\n## 如何创建一个注脚\n\n一个具有注脚的文本。[^2]\n\n[^2]: 注脚的解释\n\n##  注释也是必不可少的\n\nMarkdown将文本转换为 HTML。\n\n*[HTML]:   超文本标记语言\n\n## KaTeX数学公式\n\n您可以使用渲染LaTeX数学表达式 [KaTeX](https://khan.github.io/KaTeX/):\n\nGamma公式展示 $\\Gamma(n) = (n-1)!\\quad\\forall\nn\\in\\mathbb N$ 是通过欧拉积分\n\n$$\n\\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,.\n$$\n\n> 你可以找到更多关于的信息 **LaTeX** 数学表达式[here][1].\n\n## 新的甘特图功能，丰富你的文章\n\n```mermaid\ngantt\n        dateFormat  YYYY-MM-DD\n        title Adding GANTT diagram functionality to mermaid\n        section 现有任务\n        已完成               :done,    des1, 2014-01-06,2014-01-08\n        进行中               :active,  des2, 2014-01-09, 3d\n        计划一               :         des3, after des2, 5d\n        计划二               :         des4, after des3, 5d\n```\n- 关于 **甘特图** 语法，参考 [这儿][2],\n\n## UML 图表\n\n可以使用UML图表进行渲染。 [Mermaid](https://mermaidjs.github.io/). 例如下面产生的一个序列图：\n\n```mermaid\nsequenceDiagram\n张三 ->> 李四: 你好！李四, 最近怎么样?\n李四-->>王五: 你最近怎么样，王五？\n李四--x 张三: 我很好，谢谢!\n李四-x 王五: 我很好，谢谢!\nNote right of 王五: 李四想了很长时间, 文字太长了<br/>不适合放在一行.\n\n李四-->>张三: 打量着王五...\n张三->>王五: 很好... 王五, 你怎么样?\n```\n\n这将产生一个流程图。:\n\n```mermaid\ngraph LR\nA[长方形] -- 链接 --> B((圆))\nA --> C(圆角长方形)\nB --> D{菱形}\nC --> D\n```\n\n- 关于 **Mermaid** 语法，参考 [这儿][3],\n\n## FLowchart流程图\n\n我们依旧会支持flowchart的流程图：\n```mermaid\nflowchat\nst=>start: 开始\ne=>end: 结束\nop=>operation: 我的操作\ncond=>condition: 确认？\n\nst->op->cond\ncond(yes)->e\ncond(no)->op\n```\n\n- 关于 **Flowchart流程图** 语法，参考 [这儿][4].\n\n## 导出与导入\n\n###  导出\n如果你想尝试使用此编辑器, 你可以在此篇文章任意编辑。当你完成了一篇文章的写作, 在上方工具栏找到 **文章导出** ，生成一个.md文件或者.html文件进行本地保存。\n\n### 导入\n如果你想加载一篇你写过的.md文件，在上方工具栏可以选择导入功能进行对应扩展名的文件导入，\n继续你的创作。\n\n[1]: http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\n[2]: https://mermaidjs.github.io/\n[3]: https://mermaidjs.github.io/\n[4]: http://adrai.github.io/flowchart.js/"}]